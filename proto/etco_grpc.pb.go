// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.22.0
// source: etco.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EveTradingCoClient is the client API for EveTradingCo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EveTradingCoClient interface {
	// lists the purchase order queue (purchase orders with no contract)
	ShopQueue(ctx context.Context, in *ShopQueueRequest, opts ...grpc.CallOption) (*ShopQueueResponse, error)
	// lists active buyback contracts
	BuybackQueue(ctx context.Context, in *BuybackQueueRequest, opts ...grpc.CallOption) (*BuybackQueueResponse, error)
	// lists the request config data
	CfgGetBuybackTypes(ctx context.Context, in *CfgGetBuybackTypesRequest, opts ...grpc.CallOption) (*CfgGetBuybackTypesResponse, error)
	CfgGetShopTypes(ctx context.Context, in *CfgGetShopTypesRequest, opts ...grpc.CallOption) (*CfgGetShopTypesResponse, error)
	CfgGetBuybackSystems(ctx context.Context, in *CfgGetBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemsResponse, error)
	CfgGetShopLocations(ctx context.Context, in *CfgGetShopLocationsRequest, opts ...grpc.CallOption) (*CfgGetShopLocationsResponse, error)
	CfgGetMarkets(ctx context.Context, in *CfgGetMarketsRequest, opts ...grpc.CallOption) (*CfgGetMarketsResponse, error)
	CfgGetAuthList(ctx context.Context, in *CfgGetAuthListRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error)
	// merges the given config data into the existing config data
	CfgMergeBuybackTypes(ctx context.Context, in *CfgMergeBuybackTypesRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemsResponse, error)
	CfgMergeShopTypes(ctx context.Context, in *CfgMergeShopTypesRequest, opts ...grpc.CallOption) (*CfgMergeShopTypesResponse, error)
	CfgMergeBuybackSystems(ctx context.Context, in *CfgMergeBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemsResponse, error)
	CfgMergeShopLocations(ctx context.Context, in *CfgMergeShopLocationsRequest, opts ...grpc.CallOption) (*CfgMergeShopLocationsResponse, error)
	CfgMergeMarkets(ctx context.Context, in *CfgMergeMarketsRequest, opts ...grpc.CallOption) (*CfgMergeMarketsResponse, error)
	// replaces the existing config data with the given config data
	CfgSetAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgSetAuthListResponse, error)
	// returns the appraisal for the given code
	AdminGetBuybackAppraisal(ctx context.Context, in *AdminGetBuybackAppraisalRequest, opts ...grpc.CallOption) (*AdminGetBuybackAppraisalResponse, error)
	AdminGetShopAppraisal(ctx context.Context, in *AdminGetShopAppraisalRequest, opts ...grpc.CallOption) (*AdminGetShopAppraisalResponse, error)
	// returns the status for the given code
	AdminStatusBuybackAppraisal(ctx context.Context, in *AdminStatusBuybackAppraisalRequest, opts ...grpc.CallOption) (*AdminStatusBuybackAppraisalResponse, error)
	AdminStatusShopAppraisal(ctx context.Context, in *AdminStatusShopAppraisalRequest, opts ...grpc.CallOption) (*AdminStatusShopAppraisalResponse, error)
	// cancel the purchase order for the given code
	AdminShopCancelPurchase(ctx context.Context, in *AdminShopCancelPurchaseRequest, opts ...grpc.CallOption) (*AdminShopCancelPurchaseResponse, error)
	// parses an input string into a list of named basic items
	Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error)
	// returns an appraisal and status for the provided items and its code
	NewBuybackAppraisal(ctx context.Context, in *NewBuybackAppraisalRequest, opts ...grpc.CallOption) (*NewBuybackAppraisalResponse, error)
	NewShopAppraisal(ctx context.Context, in *NewShopAppraisalRequest, opts ...grpc.CallOption) (*NewShopAppraisalResponse, error)
	// returns the users appraisal codes
	AppraisalCodes(ctx context.Context, in *AppraisalCodesRequest, opts ...grpc.CallOption) (*AppraisalCodesResponse, error)
	// returns the appraisal for the given code
	GetBuybackAppraisal(ctx context.Context, in *GetBuybackAppraisalRequest, opts ...grpc.CallOption) (*GetBuybackAppraisalResponse, error)
	GetShopAppraisal(ctx context.Context, in *GetShopAppraisalRequest, opts ...grpc.CallOption) (*GetShopAppraisalResponse, error)
	// returns the status for the given code
	// only the character that made the appraisal is authenticated
	StatusBuybackAppraisal(ctx context.Context, in *StatusBuybackAppraisalRequest, opts ...grpc.CallOption) (*StatusBuybackAppraisalResponse, error)
	StatusShopAppraisal(ctx context.Context, in *StatusShopAppraisalRequest, opts ...grpc.CallOption) (*StatusShopAppraisalResponse, error)
	// returns purchasable items for the given location
	ShopPurchasable(ctx context.Context, in *ShopPurchasableRequest, opts ...grpc.CallOption) (*ShopPurchasableResponse, error)
	// places a purchase order for the given items and location
	ShopMakePurchase(ctx context.Context, in *ShopMakePurchaseRequest, opts ...grpc.CallOption) (*ShopMakePurchaseResponse, error)
	// cancel the purchase order for the given code
	ShopCancelPurchase(ctx context.Context, in *ShopCancelPurchaseRequest, opts ...grpc.CallOption) (*ShopCancelPurchaseResponse, error)
}

type eveTradingCoClient struct {
	cc grpc.ClientConnInterface
}

func NewEveTradingCoClient(cc grpc.ClientConnInterface) EveTradingCoClient {
	return &eveTradingCoClient{cc}
}

func (c *eveTradingCoClient) ShopQueue(ctx context.Context, in *ShopQueueRequest, opts ...grpc.CallOption) (*ShopQueueResponse, error) {
	out := new(ShopQueueResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) BuybackQueue(ctx context.Context, in *BuybackQueueRequest, opts ...grpc.CallOption) (*BuybackQueueResponse, error) {
	out := new(BuybackQueueResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/BuybackQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackTypes(ctx context.Context, in *CfgGetBuybackTypesRequest, opts ...grpc.CallOption) (*CfgGetBuybackTypesResponse, error) {
	out := new(CfgGetBuybackTypesResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopTypes(ctx context.Context, in *CfgGetShopTypesRequest, opts ...grpc.CallOption) (*CfgGetShopTypesResponse, error) {
	out := new(CfgGetShopTypesResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetShopTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackSystems(ctx context.Context, in *CfgGetBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemsResponse, error) {
	out := new(CfgGetBuybackSystemsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopLocations(ctx context.Context, in *CfgGetShopLocationsRequest, opts ...grpc.CallOption) (*CfgGetShopLocationsResponse, error) {
	out := new(CfgGetShopLocationsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetMarkets(ctx context.Context, in *CfgGetMarketsRequest, opts ...grpc.CallOption) (*CfgGetMarketsResponse, error) {
	out := new(CfgGetMarketsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetAuthList(ctx context.Context, in *CfgGetAuthListRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error) {
	out := new(CfgGetAuthListResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeBuybackTypes(ctx context.Context, in *CfgMergeBuybackTypesRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemsResponse, error) {
	out := new(CfgMergeBuybackSystemsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeShopTypes(ctx context.Context, in *CfgMergeShopTypesRequest, opts ...grpc.CallOption) (*CfgMergeShopTypesResponse, error) {
	out := new(CfgMergeShopTypesResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeShopTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeBuybackSystems(ctx context.Context, in *CfgMergeBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemsResponse, error) {
	out := new(CfgMergeBuybackSystemsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeShopLocations(ctx context.Context, in *CfgMergeShopLocationsRequest, opts ...grpc.CallOption) (*CfgMergeShopLocationsResponse, error) {
	out := new(CfgMergeShopLocationsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeMarkets(ctx context.Context, in *CfgMergeMarketsRequest, opts ...grpc.CallOption) (*CfgMergeMarketsResponse, error) {
	out := new(CfgMergeMarketsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgSetAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgSetAuthListResponse, error) {
	out := new(CfgSetAuthListResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgSetAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AdminGetBuybackAppraisal(ctx context.Context, in *AdminGetBuybackAppraisalRequest, opts ...grpc.CallOption) (*AdminGetBuybackAppraisalResponse, error) {
	out := new(AdminGetBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/AdminGetBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AdminGetShopAppraisal(ctx context.Context, in *AdminGetShopAppraisalRequest, opts ...grpc.CallOption) (*AdminGetShopAppraisalResponse, error) {
	out := new(AdminGetShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/AdminGetShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AdminStatusBuybackAppraisal(ctx context.Context, in *AdminStatusBuybackAppraisalRequest, opts ...grpc.CallOption) (*AdminStatusBuybackAppraisalResponse, error) {
	out := new(AdminStatusBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/AdminStatusBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AdminStatusShopAppraisal(ctx context.Context, in *AdminStatusShopAppraisalRequest, opts ...grpc.CallOption) (*AdminStatusShopAppraisalResponse, error) {
	out := new(AdminStatusShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/AdminStatusShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AdminShopCancelPurchase(ctx context.Context, in *AdminShopCancelPurchaseRequest, opts ...grpc.CallOption) (*AdminShopCancelPurchaseResponse, error) {
	out := new(AdminShopCancelPurchaseResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/AdminShopCancelPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error) {
	out := new(ParseResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/Parse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NewBuybackAppraisal(ctx context.Context, in *NewBuybackAppraisalRequest, opts ...grpc.CallOption) (*NewBuybackAppraisalResponse, error) {
	out := new(NewBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/NewBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NewShopAppraisal(ctx context.Context, in *NewShopAppraisalRequest, opts ...grpc.CallOption) (*NewShopAppraisalResponse, error) {
	out := new(NewShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/NewShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AppraisalCodes(ctx context.Context, in *AppraisalCodesRequest, opts ...grpc.CallOption) (*AppraisalCodesResponse, error) {
	out := new(AppraisalCodesResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/AppraisalCodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) GetBuybackAppraisal(ctx context.Context, in *GetBuybackAppraisalRequest, opts ...grpc.CallOption) (*GetBuybackAppraisalResponse, error) {
	out := new(GetBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/GetBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) GetShopAppraisal(ctx context.Context, in *GetShopAppraisalRequest, opts ...grpc.CallOption) (*GetShopAppraisalResponse, error) {
	out := new(GetShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/GetShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) StatusBuybackAppraisal(ctx context.Context, in *StatusBuybackAppraisalRequest, opts ...grpc.CallOption) (*StatusBuybackAppraisalResponse, error) {
	out := new(StatusBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/StatusBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) StatusShopAppraisal(ctx context.Context, in *StatusShopAppraisalRequest, opts ...grpc.CallOption) (*StatusShopAppraisalResponse, error) {
	out := new(StatusShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/StatusShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopPurchasable(ctx context.Context, in *ShopPurchasableRequest, opts ...grpc.CallOption) (*ShopPurchasableResponse, error) {
	out := new(ShopPurchasableResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopPurchasable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopMakePurchase(ctx context.Context, in *ShopMakePurchaseRequest, opts ...grpc.CallOption) (*ShopMakePurchaseResponse, error) {
	out := new(ShopMakePurchaseResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopMakePurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopCancelPurchase(ctx context.Context, in *ShopCancelPurchaseRequest, opts ...grpc.CallOption) (*ShopCancelPurchaseResponse, error) {
	out := new(ShopCancelPurchaseResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopCancelPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EveTradingCoServer is the server API for EveTradingCo service.
// All implementations must embed UnimplementedEveTradingCoServer
// for forward compatibility
type EveTradingCoServer interface {
	// lists the purchase order queue (purchase orders with no contract)
	ShopQueue(context.Context, *ShopQueueRequest) (*ShopQueueResponse, error)
	// lists active buyback contracts
	BuybackQueue(context.Context, *BuybackQueueRequest) (*BuybackQueueResponse, error)
	// lists the request config data
	CfgGetBuybackTypes(context.Context, *CfgGetBuybackTypesRequest) (*CfgGetBuybackTypesResponse, error)
	CfgGetShopTypes(context.Context, *CfgGetShopTypesRequest) (*CfgGetShopTypesResponse, error)
	CfgGetBuybackSystems(context.Context, *CfgGetBuybackSystemsRequest) (*CfgGetBuybackSystemsResponse, error)
	CfgGetShopLocations(context.Context, *CfgGetShopLocationsRequest) (*CfgGetShopLocationsResponse, error)
	CfgGetMarkets(context.Context, *CfgGetMarketsRequest) (*CfgGetMarketsResponse, error)
	CfgGetAuthList(context.Context, *CfgGetAuthListRequest) (*CfgGetAuthListResponse, error)
	// merges the given config data into the existing config data
	CfgMergeBuybackTypes(context.Context, *CfgMergeBuybackTypesRequest) (*CfgMergeBuybackSystemsResponse, error)
	CfgMergeShopTypes(context.Context, *CfgMergeShopTypesRequest) (*CfgMergeShopTypesResponse, error)
	CfgMergeBuybackSystems(context.Context, *CfgMergeBuybackSystemsRequest) (*CfgMergeBuybackSystemsResponse, error)
	CfgMergeShopLocations(context.Context, *CfgMergeShopLocationsRequest) (*CfgMergeShopLocationsResponse, error)
	CfgMergeMarkets(context.Context, *CfgMergeMarketsRequest) (*CfgMergeMarketsResponse, error)
	// replaces the existing config data with the given config data
	CfgSetAuthList(context.Context, *CfgSetAuthListRequest) (*CfgSetAuthListResponse, error)
	// returns the appraisal for the given code
	AdminGetBuybackAppraisal(context.Context, *AdminGetBuybackAppraisalRequest) (*AdminGetBuybackAppraisalResponse, error)
	AdminGetShopAppraisal(context.Context, *AdminGetShopAppraisalRequest) (*AdminGetShopAppraisalResponse, error)
	// returns the status for the given code
	AdminStatusBuybackAppraisal(context.Context, *AdminStatusBuybackAppraisalRequest) (*AdminStatusBuybackAppraisalResponse, error)
	AdminStatusShopAppraisal(context.Context, *AdminStatusShopAppraisalRequest) (*AdminStatusShopAppraisalResponse, error)
	// cancel the purchase order for the given code
	AdminShopCancelPurchase(context.Context, *AdminShopCancelPurchaseRequest) (*AdminShopCancelPurchaseResponse, error)
	// parses an input string into a list of named basic items
	Parse(context.Context, *ParseRequest) (*ParseResponse, error)
	// returns an appraisal and status for the provided items and its code
	NewBuybackAppraisal(context.Context, *NewBuybackAppraisalRequest) (*NewBuybackAppraisalResponse, error)
	NewShopAppraisal(context.Context, *NewShopAppraisalRequest) (*NewShopAppraisalResponse, error)
	// returns the users appraisal codes
	AppraisalCodes(context.Context, *AppraisalCodesRequest) (*AppraisalCodesResponse, error)
	// returns the appraisal for the given code
	GetBuybackAppraisal(context.Context, *GetBuybackAppraisalRequest) (*GetBuybackAppraisalResponse, error)
	GetShopAppraisal(context.Context, *GetShopAppraisalRequest) (*GetShopAppraisalResponse, error)
	// returns the status for the given code
	// only the character that made the appraisal is authenticated
	StatusBuybackAppraisal(context.Context, *StatusBuybackAppraisalRequest) (*StatusBuybackAppraisalResponse, error)
	StatusShopAppraisal(context.Context, *StatusShopAppraisalRequest) (*StatusShopAppraisalResponse, error)
	// returns purchasable items for the given location
	ShopPurchasable(context.Context, *ShopPurchasableRequest) (*ShopPurchasableResponse, error)
	// places a purchase order for the given items and location
	ShopMakePurchase(context.Context, *ShopMakePurchaseRequest) (*ShopMakePurchaseResponse, error)
	// cancel the purchase order for the given code
	ShopCancelPurchase(context.Context, *ShopCancelPurchaseRequest) (*ShopCancelPurchaseResponse, error)
	mustEmbedUnimplementedEveTradingCoServer()
}

// UnimplementedEveTradingCoServer must be embedded to have forward compatible implementations.
type UnimplementedEveTradingCoServer struct {
}

func (UnimplementedEveTradingCoServer) ShopQueue(context.Context, *ShopQueueRequest) (*ShopQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopQueue not implemented")
}
func (UnimplementedEveTradingCoServer) BuybackQueue(context.Context, *BuybackQueueRequest) (*BuybackQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuybackQueue not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackTypes(context.Context, *CfgGetBuybackTypesRequest) (*CfgGetBuybackTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackTypes not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopTypes(context.Context, *CfgGetShopTypesRequest) (*CfgGetShopTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopTypes not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackSystems(context.Context, *CfgGetBuybackSystemsRequest) (*CfgGetBuybackSystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopLocations(context.Context, *CfgGetShopLocationsRequest) (*CfgGetShopLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetMarkets(context.Context, *CfgGetMarketsRequest) (*CfgGetMarketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetMarkets not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetAuthList(context.Context, *CfgGetAuthListRequest) (*CfgGetAuthListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeBuybackTypes(context.Context, *CfgMergeBuybackTypesRequest) (*CfgMergeBuybackSystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeBuybackTypes not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeShopTypes(context.Context, *CfgMergeShopTypesRequest) (*CfgMergeShopTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeShopTypes not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeBuybackSystems(context.Context, *CfgMergeBuybackSystemsRequest) (*CfgMergeBuybackSystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeBuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeShopLocations(context.Context, *CfgMergeShopLocationsRequest) (*CfgMergeShopLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeMarkets(context.Context, *CfgMergeMarketsRequest) (*CfgMergeMarketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeMarkets not implemented")
}
func (UnimplementedEveTradingCoServer) CfgSetAuthList(context.Context, *CfgSetAuthListRequest) (*CfgSetAuthListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgSetAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) AdminGetBuybackAppraisal(context.Context, *AdminGetBuybackAppraisalRequest) (*AdminGetBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) AdminGetShopAppraisal(context.Context, *AdminGetShopAppraisalRequest) (*AdminGetShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) AdminStatusBuybackAppraisal(context.Context, *AdminStatusBuybackAppraisalRequest) (*AdminStatusBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminStatusBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) AdminStatusShopAppraisal(context.Context, *AdminStatusShopAppraisalRequest) (*AdminStatusShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminStatusShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) AdminShopCancelPurchase(context.Context, *AdminShopCancelPurchaseRequest) (*AdminShopCancelPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminShopCancelPurchase not implemented")
}
func (UnimplementedEveTradingCoServer) Parse(context.Context, *ParseRequest) (*ParseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Parse not implemented")
}
func (UnimplementedEveTradingCoServer) NewBuybackAppraisal(context.Context, *NewBuybackAppraisalRequest) (*NewBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) NewShopAppraisal(context.Context, *NewShopAppraisalRequest) (*NewShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) AppraisalCodes(context.Context, *AppraisalCodesRequest) (*AppraisalCodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppraisalCodes not implemented")
}
func (UnimplementedEveTradingCoServer) GetBuybackAppraisal(context.Context, *GetBuybackAppraisalRequest) (*GetBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) GetShopAppraisal(context.Context, *GetShopAppraisalRequest) (*GetShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) StatusBuybackAppraisal(context.Context, *StatusBuybackAppraisalRequest) (*StatusBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatusBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) StatusShopAppraisal(context.Context, *StatusShopAppraisalRequest) (*StatusShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatusShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) ShopPurchasable(context.Context, *ShopPurchasableRequest) (*ShopPurchasableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopPurchasable not implemented")
}
func (UnimplementedEveTradingCoServer) ShopMakePurchase(context.Context, *ShopMakePurchaseRequest) (*ShopMakePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopMakePurchase not implemented")
}
func (UnimplementedEveTradingCoServer) ShopCancelPurchase(context.Context, *ShopCancelPurchaseRequest) (*ShopCancelPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopCancelPurchase not implemented")
}
func (UnimplementedEveTradingCoServer) mustEmbedUnimplementedEveTradingCoServer() {}

// UnsafeEveTradingCoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EveTradingCoServer will
// result in compilation errors.
type UnsafeEveTradingCoServer interface {
	mustEmbedUnimplementedEveTradingCoServer()
}

func RegisterEveTradingCoServer(s grpc.ServiceRegistrar, srv EveTradingCoServer) {
	s.RegisterService(&EveTradingCo_ServiceDesc, srv)
}

func _EveTradingCo_ShopQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopQueue(ctx, req.(*ShopQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_BuybackQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuybackQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).BuybackQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/BuybackQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).BuybackQueue(ctx, req.(*BuybackQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetBuybackTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackTypes(ctx, req.(*CfgGetBuybackTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetShopTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetShopTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopTypes(ctx, req.(*CfgGetShopTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetBuybackSystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackSystems(ctx, req.(*CfgGetBuybackSystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetShopLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopLocations(ctx, req.(*CfgGetShopLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetMarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetMarkets(ctx, req.(*CfgGetMarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetAuthListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetAuthList(ctx, req.(*CfgGetAuthListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeBuybackTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeBuybackTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeBuybackTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeBuybackTypes(ctx, req.(*CfgMergeBuybackTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeShopTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeShopTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeShopTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeShopTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeShopTypes(ctx, req.(*CfgMergeShopTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeBuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeBuybackSystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystems(ctx, req.(*CfgMergeBuybackSystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeShopLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeShopLocations(ctx, req.(*CfgMergeShopLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeMarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeMarkets(ctx, req.(*CfgMergeMarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgSetAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgSetAuthListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgSetAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgSetAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgSetAuthList(ctx, req.(*CfgSetAuthListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AdminGetBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminGetBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AdminGetBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/AdminGetBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AdminGetBuybackAppraisal(ctx, req.(*AdminGetBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AdminGetShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminGetShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AdminGetShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/AdminGetShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AdminGetShopAppraisal(ctx, req.(*AdminGetShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AdminStatusBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminStatusBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AdminStatusBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/AdminStatusBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AdminStatusBuybackAppraisal(ctx, req.(*AdminStatusBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AdminStatusShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminStatusShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AdminStatusShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/AdminStatusShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AdminStatusShopAppraisal(ctx, req.(*AdminStatusShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AdminShopCancelPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminShopCancelPurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AdminShopCancelPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/AdminShopCancelPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AdminShopCancelPurchase(ctx, req.(*AdminShopCancelPurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_Parse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).Parse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/Parse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).Parse(ctx, req.(*ParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NewBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NewBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/NewBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NewBuybackAppraisal(ctx, req.(*NewBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NewShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NewShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/NewShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NewShopAppraisal(ctx, req.(*NewShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AppraisalCodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppraisalCodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AppraisalCodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/AppraisalCodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AppraisalCodes(ctx, req.(*AppraisalCodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_GetBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).GetBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/GetBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).GetBuybackAppraisal(ctx, req.(*GetBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_GetShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).GetShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/GetShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).GetShopAppraisal(ctx, req.(*GetShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_StatusBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).StatusBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/StatusBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).StatusBuybackAppraisal(ctx, req.(*StatusBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_StatusShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).StatusShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/StatusShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).StatusShopAppraisal(ctx, req.(*StatusShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopPurchasable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopPurchasableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopPurchasable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopPurchasable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopPurchasable(ctx, req.(*ShopPurchasableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopMakePurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopMakePurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopMakePurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopMakePurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopMakePurchase(ctx, req.(*ShopMakePurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopCancelPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopCancelPurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopCancelPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopCancelPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopCancelPurchase(ctx, req.(*ShopCancelPurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EveTradingCo_ServiceDesc is the grpc.ServiceDesc for EveTradingCo service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EveTradingCo_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eve_trading_co_proto.EveTradingCo",
	HandlerType: (*EveTradingCoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ShopQueue",
			Handler:    _EveTradingCo_ShopQueue_Handler,
		},
		{
			MethodName: "BuybackQueue",
			Handler:    _EveTradingCo_BuybackQueue_Handler,
		},
		{
			MethodName: "CfgGetBuybackTypes",
			Handler:    _EveTradingCo_CfgGetBuybackTypes_Handler,
		},
		{
			MethodName: "CfgGetShopTypes",
			Handler:    _EveTradingCo_CfgGetShopTypes_Handler,
		},
		{
			MethodName: "CfgGetBuybackSystems",
			Handler:    _EveTradingCo_CfgGetBuybackSystems_Handler,
		},
		{
			MethodName: "CfgGetShopLocations",
			Handler:    _EveTradingCo_CfgGetShopLocations_Handler,
		},
		{
			MethodName: "CfgGetMarkets",
			Handler:    _EveTradingCo_CfgGetMarkets_Handler,
		},
		{
			MethodName: "CfgGetAuthList",
			Handler:    _EveTradingCo_CfgGetAuthList_Handler,
		},
		{
			MethodName: "CfgMergeBuybackTypes",
			Handler:    _EveTradingCo_CfgMergeBuybackTypes_Handler,
		},
		{
			MethodName: "CfgMergeShopTypes",
			Handler:    _EveTradingCo_CfgMergeShopTypes_Handler,
		},
		{
			MethodName: "CfgMergeBuybackSystems",
			Handler:    _EveTradingCo_CfgMergeBuybackSystems_Handler,
		},
		{
			MethodName: "CfgMergeShopLocations",
			Handler:    _EveTradingCo_CfgMergeShopLocations_Handler,
		},
		{
			MethodName: "CfgMergeMarkets",
			Handler:    _EveTradingCo_CfgMergeMarkets_Handler,
		},
		{
			MethodName: "CfgSetAuthList",
			Handler:    _EveTradingCo_CfgSetAuthList_Handler,
		},
		{
			MethodName: "AdminGetBuybackAppraisal",
			Handler:    _EveTradingCo_AdminGetBuybackAppraisal_Handler,
		},
		{
			MethodName: "AdminGetShopAppraisal",
			Handler:    _EveTradingCo_AdminGetShopAppraisal_Handler,
		},
		{
			MethodName: "AdminStatusBuybackAppraisal",
			Handler:    _EveTradingCo_AdminStatusBuybackAppraisal_Handler,
		},
		{
			MethodName: "AdminStatusShopAppraisal",
			Handler:    _EveTradingCo_AdminStatusShopAppraisal_Handler,
		},
		{
			MethodName: "AdminShopCancelPurchase",
			Handler:    _EveTradingCo_AdminShopCancelPurchase_Handler,
		},
		{
			MethodName: "Parse",
			Handler:    _EveTradingCo_Parse_Handler,
		},
		{
			MethodName: "NewBuybackAppraisal",
			Handler:    _EveTradingCo_NewBuybackAppraisal_Handler,
		},
		{
			MethodName: "NewShopAppraisal",
			Handler:    _EveTradingCo_NewShopAppraisal_Handler,
		},
		{
			MethodName: "AppraisalCodes",
			Handler:    _EveTradingCo_AppraisalCodes_Handler,
		},
		{
			MethodName: "GetBuybackAppraisal",
			Handler:    _EveTradingCo_GetBuybackAppraisal_Handler,
		},
		{
			MethodName: "GetShopAppraisal",
			Handler:    _EveTradingCo_GetShopAppraisal_Handler,
		},
		{
			MethodName: "StatusBuybackAppraisal",
			Handler:    _EveTradingCo_StatusBuybackAppraisal_Handler,
		},
		{
			MethodName: "StatusShopAppraisal",
			Handler:    _EveTradingCo_StatusShopAppraisal_Handler,
		},
		{
			MethodName: "ShopPurchasable",
			Handler:    _EveTradingCo_ShopPurchasable_Handler,
		},
		{
			MethodName: "ShopMakePurchase",
			Handler:    _EveTradingCo_ShopMakePurchase_Handler,
		},
		{
			MethodName: "ShopCancelPurchase",
			Handler:    _EveTradingCo_ShopCancelPurchase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "etco.proto",
}
