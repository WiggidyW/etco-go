// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: etco.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContractStatus int32

const (
	ContractStatus_unknown_status      ContractStatus = 0
	ContractStatus_outstanding         ContractStatus = 1
	ContractStatus_in_progress         ContractStatus = 2
	ContractStatus_finished_issuer     ContractStatus = 3
	ContractStatus_finished_contractor ContractStatus = 4
	ContractStatus_finished            ContractStatus = 5
	ContractStatus_cancelled           ContractStatus = 6
	ContractStatus_rejected            ContractStatus = 7
	ContractStatus_failed              ContractStatus = 8
	ContractStatus_deleted             ContractStatus = 9
	ContractStatus_reversed            ContractStatus = 10
)

// Enum value maps for ContractStatus.
var (
	ContractStatus_name = map[int32]string{
		0:  "unknown_status",
		1:  "outstanding",
		2:  "in_progress",
		3:  "finished_issuer",
		4:  "finished_contractor",
		5:  "finished",
		6:  "cancelled",
		7:  "rejected",
		8:  "failed",
		9:  "deleted",
		10: "reversed",
	}
	ContractStatus_value = map[string]int32{
		"unknown_status":      0,
		"outstanding":         1,
		"in_progress":         2,
		"finished_issuer":     3,
		"finished_contractor": 4,
		"finished":            5,
		"cancelled":           6,
		"rejected":            7,
		"failed":              8,
		"deleted":             9,
		"reversed":            10,
	}
)

func (x ContractStatus) Enum() *ContractStatus {
	p := new(ContractStatus)
	*p = x
	return p
}

func (x ContractStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[0].Descriptor()
}

func (ContractStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[0]
}

func (x ContractStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractStatus.Descriptor instead.
func (ContractStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{0}
}

type ContractAssigneeType int32

const (
	ContractAssigneeType_unknown_assignee_type ContractAssigneeType = 0
	ContractAssigneeType_corporation           ContractAssigneeType = 1
	ContractAssigneeType_character             ContractAssigneeType = 2
	ContractAssigneeType_alliance              ContractAssigneeType = 3
)

// Enum value maps for ContractAssigneeType.
var (
	ContractAssigneeType_name = map[int32]string{
		0: "unknown_assignee_type",
		1: "corporation",
		2: "character",
		3: "alliance",
	}
	ContractAssigneeType_value = map[string]int32{
		"unknown_assignee_type": 0,
		"corporation":           1,
		"character":             2,
		"alliance":              3,
	}
)

func (x ContractAssigneeType) Enum() *ContractAssigneeType {
	p := new(ContractAssigneeType)
	*p = x
	return p
}

func (x ContractAssigneeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractAssigneeType) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[1].Descriptor()
}

func (ContractAssigneeType) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[1]
}

func (x ContractAssigneeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractAssigneeType.Descriptor instead.
func (ContractAssigneeType) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{1}
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // native token
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{0}
}

func (x *AuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`            // native token
	Authorized bool   `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"` // whether the request was authorized
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{1}
}

func (x *AuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // error message
	Code  int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`  // error code
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ErrorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type TypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBuy      bool   `protobuf:"varint,1,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`
	Percentile uint32 `protobuf:"varint,2,opt,name=percentile,proto3" json:"percentile,omitempty"`
	Modifier   uint32 `protobuf:"varint,3,opt,name=modifier,proto3" json:"modifier,omitempty"`
	Market     string `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"` // MarketKey
}

func (x *TypePricing) Reset() {
	*x = TypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypePricing) ProtoMessage() {}

func (x *TypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypePricing.ProtoReflect.Descriptor instead.
func (*TypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{3}
}

func (x *TypePricing) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *TypePricing) GetPercentile() uint32 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *TypePricing) GetModifier() uint32 {
	if x != nil {
		return x.Modifier
	}
	return 0
}

func (x *TypePricing) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type BuybackTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// at least one of these must be set
	Pricing                *TypePricing `protobuf:"bytes,1,opt,name=pricing,proto3" json:"pricing,omitempty"`
	ReprocessingEfficiency uint32       `protobuf:"varint,2,opt,name=reprocessing_efficiency,json=reprocessingEfficiency,proto3" json:"reprocessing_efficiency,omitempty"` // 0 - 100
}

func (x *BuybackTypePricing) Reset() {
	*x = BuybackTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackTypePricing) ProtoMessage() {}

func (x *BuybackTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackTypePricing.ProtoReflect.Descriptor instead.
func (*BuybackTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{4}
}

func (x *BuybackTypePricing) GetPricing() *TypePricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

func (x *BuybackTypePricing) GetReprocessingEfficiency() uint32 {
	if x != nil {
		return x.ReprocessingEfficiency
	}
	return 0
}

// wrapper for TypePricing
type ShopTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner *TypePricing `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *ShopTypePricing) Reset() {
	*x = ShopTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopTypePricing) ProtoMessage() {}

func (x *ShopTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopTypePricing.ProtoReflect.Descriptor instead.
func (*ShopTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{5}
}

func (x *ShopTypePricing) GetInner() *TypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<BuybackTypeMapKey, BuybackTypeValue>
type BuybackSystemTypeBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*BuybackTypePricing `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BuybackSystemTypeBundle) Reset() {
	*x = BuybackSystemTypeBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackSystemTypeBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackSystemTypeBundle) ProtoMessage() {}

func (x *BuybackSystemTypeBundle) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackSystemTypeBundle.ProtoReflect.Descriptor instead.
func (*BuybackSystemTypeBundle) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{6}
}

func (x *BuybackSystemTypeBundle) GetInner() map[string]*BuybackTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<ShopTypeMapKey, ShopTypeValue>
type ShopLocationTypeBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*ShopTypePricing `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ShopLocationTypeBundle) Reset() {
	*x = ShopLocationTypeBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocationTypeBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocationTypeBundle) ProtoMessage() {}

func (x *ShopLocationTypeBundle) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocationTypeBundle.ProtoReflect.Descriptor instead.
func (*ShopLocationTypeBundle) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{7}
}

func (x *ShopLocationTypeBundle) GetInner() map[string]*ShopTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<TypeId, BuybackType>
// the program itself converts this to multiple map<TypeId, BuybackTypeMap>
type BuybackSystemTypeMapsBuilder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[int32]*BuybackSystemTypeBundle `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BuybackSystemTypeMapsBuilder) Reset() {
	*x = BuybackSystemTypeMapsBuilder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackSystemTypeMapsBuilder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackSystemTypeMapsBuilder) ProtoMessage() {}

func (x *BuybackSystemTypeMapsBuilder) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackSystemTypeMapsBuilder.ProtoReflect.Descriptor instead.
func (*BuybackSystemTypeMapsBuilder) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{8}
}

func (x *BuybackSystemTypeMapsBuilder) GetInner() map[int32]*BuybackSystemTypeBundle {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<TypeId, ShopType>
// the program itself converts this to multiple map<TypeId, ShopTypeMap>
type ShopLocationTypeMapsBuilder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[int32]*ShopLocationTypeBundle `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ShopLocationTypeMapsBuilder) Reset() {
	*x = ShopLocationTypeMapsBuilder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocationTypeMapsBuilder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocationTypeMapsBuilder) ProtoMessage() {}

func (x *ShopLocationTypeMapsBuilder) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocationTypeMapsBuilder.ProtoReflect.Descriptor instead.
func (*ShopLocationTypeMapsBuilder) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{9}
}

func (x *ShopLocationTypeMapsBuilder) GetInner() map[int32]*ShopLocationTypeBundle {
	if x != nil {
		return x.Inner
	}
	return nil
}

type BuybackSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKey string  `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3" json:"bundle_key,omitempty"` // BuybackSystemBundleKey
	M3Fee     float64 `protobuf:"fixed64,2,opt,name=m3_fee,json=m3Fee,proto3" json:"m3_fee,omitempty"`           // fee per m3
}

func (x *BuybackSystem) Reset() {
	*x = BuybackSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackSystem) ProtoMessage() {}

func (x *BuybackSystem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackSystem.ProtoReflect.Descriptor instead.
func (*BuybackSystem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{10}
}

func (x *BuybackSystem) GetBundleKey() string {
	if x != nil {
		return x.BundleKey
	}
	return ""
}

func (x *BuybackSystem) GetM3Fee() float64 {
	if x != nil {
		return x.M3Fee
	}
	return 0
}

type ShopLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKey   string   `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3" json:"bundle_key,omitempty"`       // ShopLocationBundleKey
	BannedFlags []string `protobuf:"bytes,2,rep,name=banned_flags,json=bannedFlags,proto3" json:"banned_flags,omitempty"` // banned asset flags
}

func (x *ShopLocation) Reset() {
	*x = ShopLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocation) ProtoMessage() {}

func (x *ShopLocation) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocation.ProtoReflect.Descriptor instead.
func (*ShopLocation) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{11}
}

func (x *ShopLocation) GetBundleKey() string {
	if x != nil {
		return x.BundleKey
	}
	return ""
}

func (x *ShopLocation) GetBannedFlags() []string {
	if x != nil {
		return x.BannedFlags
	}
	return nil
}

// wrapper for map<SystemId, BuybackSystem>
type BuybackSystems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[int32]*BuybackSystem `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BuybackSystems) Reset() {
	*x = BuybackSystems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackSystems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackSystems) ProtoMessage() {}

func (x *BuybackSystems) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackSystems.ProtoReflect.Descriptor instead.
func (*BuybackSystems) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{12}
}

func (x *BuybackSystems) GetInner() map[int32]*BuybackSystem {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<LocationId, ShopLocation>
type ShopLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[int64]*ShopLocation `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ShopLocations) Reset() {
	*x = ShopLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocations) ProtoMessage() {}

func (x *ShopLocations) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocations.ProtoReflect.Descriptor instead.
func (*ShopLocations) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{13}
}

func (x *ShopLocations) GetInner() map[int64]*ShopLocation {
	if x != nil {
		return x.Inner
	}
	return nil
}

type Market struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // web token
	LocationId   int64  `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	IsStructure  bool   `protobuf:"varint,3,opt,name=is_structure,json=isStructure,proto3" json:"is_structure,omitempty"`
}

func (x *Market) Reset() {
	*x = Market{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Market) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Market) ProtoMessage() {}

func (x *Market) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Market.ProtoReflect.Descriptor instead.
func (*Market) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{14}
}

func (x *Market) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Market) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *Market) GetIsStructure() bool {
	if x != nil {
		return x.IsStructure
	}
	return false
}

// wrapper for map<MarketKey, Market>
type Markets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*Market `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Markets) Reset() {
	*x = Markets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Markets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Markets) ProtoMessage() {}

func (x *Markets) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Markets.ProtoReflect.Descriptor instead.
func (*Markets) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{15}
}

func (x *Markets) GetInner() map[string]*Market {
	if x != nil {
		return x.Inner
	}
	return nil
}

// list of valid IDs for authentication
type AuthList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterIds   []int32 `protobuf:"varint,1,rep,packed,name=character_ids,json=characterIds,proto3" json:"character_ids,omitempty"`
	CorporationIds []int32 `protobuf:"varint,2,rep,packed,name=corporation_ids,json=corporationIds,proto3" json:"corporation_ids,omitempty"`
	AllianceIds    []int32 `protobuf:"varint,3,rep,packed,name=alliance_ids,json=allianceIds,proto3" json:"alliance_ids,omitempty"`
}

func (x *AuthList) Reset() {
	*x = AuthList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthList) ProtoMessage() {}

func (x *AuthList) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthList.ProtoReflect.Descriptor instead.
func (*AuthList) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{16}
}

func (x *AuthList) GetCharacterIds() []int32 {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *AuthList) GetCorporationIds() []int32 {
	if x != nil {
		return x.CorporationIds
	}
	return nil
}

func (x *AuthList) GetAllianceIds() []int32 {
	if x != nil {
		return x.AllianceIds
	}
	return nil
}

type IncludeTypeNaming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeName         bool `protobuf:"varint,1,opt,name=include_name,json=includeName,proto3" json:"include_name,omitempty"`
	IncludeMarketGroups bool `protobuf:"varint,2,opt,name=include_market_groups,json=includeMarketGroups,proto3" json:"include_market_groups,omitempty"`
	IncludeGroup        bool `protobuf:"varint,3,opt,name=include_group,json=includeGroup,proto3" json:"include_group,omitempty"`
	IncludeCategory     bool `protobuf:"varint,4,opt,name=include_category,json=includeCategory,proto3" json:"include_category,omitempty"`
}

func (x *IncludeTypeNaming) Reset() {
	*x = IncludeTypeNaming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncludeTypeNaming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncludeTypeNaming) ProtoMessage() {}

func (x *IncludeTypeNaming) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncludeTypeNaming.ProtoReflect.Descriptor instead.
func (*IncludeTypeNaming) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{17}
}

func (x *IncludeTypeNaming) GetIncludeName() bool {
	if x != nil {
		return x.IncludeName
	}
	return false
}

func (x *IncludeTypeNaming) GetIncludeMarketGroups() bool {
	if x != nil {
		return x.IncludeMarketGroups
	}
	return false
}

func (x *IncludeTypeNaming) GetIncludeGroup() bool {
	if x != nil {
		return x.IncludeGroup
	}
	return false
}

func (x *IncludeTypeNaming) GetIncludeCategory() bool {
	if x != nil {
		return x.IncludeCategory
	}
	return false
}

type TypeNamingIndexes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                 // "" if nil
	GroupIndex         int32   `protobuf:"zigzag32,2,opt,name=group_index,json=groupIndex,proto3" json:"group_index,omitempty"`                                // -1 if nil
	CategoryIndex      int32   `protobuf:"zigzag32,3,opt,name=category_index,json=categoryIndex,proto3" json:"category_index,omitempty"`                       // -1 if nil
	MarketGroupIndexes []int32 `protobuf:"varint,4,rep,packed,name=market_group_indexes,json=marketGroupIndexes,proto3" json:"market_group_indexes,omitempty"` // length 0 if nil
}

func (x *TypeNamingIndexes) Reset() {
	*x = TypeNamingIndexes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeNamingIndexes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeNamingIndexes) ProtoMessage() {}

func (x *TypeNamingIndexes) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeNamingIndexes.ProtoReflect.Descriptor instead.
func (*TypeNamingIndexes) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{18}
}

func (x *TypeNamingIndexes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TypeNamingIndexes) GetGroupIndex() int32 {
	if x != nil {
		return x.GroupIndex
	}
	return 0
}

func (x *TypeNamingIndexes) GetCategoryIndex() int32 {
	if x != nil {
		return x.CategoryIndex
	}
	return 0
}

func (x *TypeNamingIndexes) GetMarketGroupIndexes() []int32 {
	if x != nil {
		return x.MarketGroupIndexes
	}
	return nil
}

type TypeNamingLists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups       []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	Categories   []string `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	MarketGroups []string `protobuf:"bytes,3,rep,name=market_groups,json=marketGroups,proto3" json:"market_groups,omitempty"`
}

func (x *TypeNamingLists) Reset() {
	*x = TypeNamingLists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeNamingLists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeNamingLists) ProtoMessage() {}

func (x *TypeNamingLists) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeNamingLists.ProtoReflect.Descriptor instead.
func (*TypeNamingLists) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{19}
}

func (x *TypeNamingLists) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *TypeNamingLists) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *TypeNamingLists) GetMarketGroups() []string {
	if x != nil {
		return x.MarketGroups
	}
	return nil
}

type NamedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Naming *TypeNamingIndexes `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"`
}

func (x *NamedType) Reset() {
	*x = NamedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedType) ProtoMessage() {}

func (x *NamedType) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedType.ProtoReflect.Descriptor instead.
func (*NamedType) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{20}
}

func (x *NamedType) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *NamedType) GetNaming() *TypeNamingIndexes {
	if x != nil {
		return x.Naming
	}
	return nil
}

type BasicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   int32 `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *BasicItem) Reset() {
	*x = BasicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicItem) ProtoMessage() {}

func (x *BasicItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicItem.ProtoReflect.Descriptor instead.
func (*BasicItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{21}
}

func (x *BasicItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *BasicItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type NamedBasicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   int32  `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NamedBasicItem) Reset() {
	*x = NamedBasicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedBasicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedBasicItem) ProtoMessage() {}

func (x *NamedBasicItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedBasicItem.ProtoReflect.Descriptor instead.
func (*NamedBasicItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{22}
}

func (x *NamedBasicItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *NamedBasicItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *NamedBasicItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BuybackParentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId       int32               `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity     int64               `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit float64             `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Description  string              `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // source of the price
	Children     []*BuybackChildItem `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`
	Naming       *TypeNamingIndexes  `protobuf:"bytes,6,opt,name=naming,proto3" json:"naming,omitempty"`
}

func (x *BuybackParentItem) Reset() {
	*x = BuybackParentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackParentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackParentItem) ProtoMessage() {}

func (x *BuybackParentItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackParentItem.ProtoReflect.Descriptor instead.
func (*BuybackParentItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{23}
}

func (x *BuybackParentItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *BuybackParentItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BuybackParentItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *BuybackParentItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BuybackParentItem) GetChildren() []*BuybackChildItem {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *BuybackParentItem) GetNaming() *TypeNamingIndexes {
	if x != nil {
		return x.Naming
	}
	return nil
}

type BuybackChildItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId            int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	QuantityPerParent float64            `protobuf:"fixed64,2,opt,name=quantity_per_parent,json=quantityPerParent,proto3" json:"quantity_per_parent,omitempty"`
	PricePerUnit      float64            `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Description       string             `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // source of the price
	Naming            *TypeNamingIndexes `protobuf:"bytes,5,opt,name=naming,proto3" json:"naming,omitempty"`
}

func (x *BuybackChildItem) Reset() {
	*x = BuybackChildItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackChildItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackChildItem) ProtoMessage() {}

func (x *BuybackChildItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackChildItem.ProtoReflect.Descriptor instead.
func (*BuybackChildItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{24}
}

func (x *BuybackChildItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *BuybackChildItem) GetQuantityPerParent() float64 {
	if x != nil {
		return x.QuantityPerParent
	}
	return 0
}

func (x *BuybackChildItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *BuybackChildItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BuybackChildItem) GetNaming() *TypeNamingIndexes {
	if x != nil {
		return x.Naming
	}
	return nil
}

type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId       int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity     int64              `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit float64            `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Description  string             `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // source of the price
	Naming       *TypeNamingIndexes `protobuf:"bytes,5,opt,name=naming,proto3" json:"naming,omitempty"`
}

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{25}
}

func (x *ShopItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ShopItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ShopItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *ShopItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ShopItem) GetNaming() *TypeNamingIndexes {
	if x != nil {
		return x.Naming
	}
	return nil
}

type ContractItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64              `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Naming   *TypeNamingIndexes `protobuf:"bytes,3,opt,name=naming,proto3" json:"naming,omitempty"`
}

func (x *ContractItem) Reset() {
	*x = ContractItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractItem) ProtoMessage() {}

func (x *ContractItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractItem.ProtoReflect.Descriptor instead.
func (*ContractItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{26}
}

func (x *ContractItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ContractItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ContractItem) GetNaming() *TypeNamingIndexes {
	if x != nil {
		return x.Naming
	}
	return nil
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId   int32                `protobuf:"varint,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Status       ContractStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=eve_trading_co_proto.ContractStatus" json:"status,omitempty"`
	Issued       int64                `protobuf:"varint,3,opt,name=issued,proto3" json:"issued,omitempty"`
	Expires      int64                `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`
	LocationId   int64                `protobuf:"varint,5,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Price        float64              `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	HasReward    bool                 `protobuf:"varint,7,opt,name=has_reward,json=hasReward,proto3" json:"has_reward,omitempty"`
	IssuerCorpId int32                `protobuf:"varint,8,opt,name=issuer_corp_id,json=issuerCorpId,proto3" json:"issuer_corp_id,omitempty"`
	IssuerCharId int32                `protobuf:"varint,9,opt,name=issuer_char_id,json=issuerCharId,proto3" json:"issuer_char_id,omitempty"`
	AssigneeId   int32                `protobuf:"varint,10,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	AssigneeType ContractAssigneeType `protobuf:"varint,11,opt,name=assignee_type,json=assigneeType,proto3,enum=eve_trading_co_proto.ContractAssigneeType" json:"assignee_type,omitempty"`
	Items        []*ContractItem      `protobuf:"bytes,12,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{27}
}

func (x *Contract) GetContractId() int32 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *Contract) GetStatus() ContractStatus {
	if x != nil {
		return x.Status
	}
	return ContractStatus_unknown_status
}

func (x *Contract) GetIssued() int64 {
	if x != nil {
		return x.Issued
	}
	return 0
}

func (x *Contract) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *Contract) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *Contract) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Contract) GetHasReward() bool {
	if x != nil {
		return x.HasReward
	}
	return false
}

func (x *Contract) GetIssuerCorpId() int32 {
	if x != nil {
		return x.IssuerCorpId
	}
	return 0
}

func (x *Contract) GetIssuerCharId() int32 {
	if x != nil {
		return x.IssuerCharId
	}
	return 0
}

func (x *Contract) GetAssigneeId() int32 {
	if x != nil {
		return x.AssigneeId
	}
	return 0
}

func (x *Contract) GetAssigneeType() ContractAssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return ContractAssigneeType_unknown_assignee_type
}

func (x *Contract) GetItems() []*ContractItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BuybackQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Contract      *Contract         `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	CodeAppraisal *BuybackAppraisal `protobuf:"bytes,3,opt,name=code_appraisal,json=codeAppraisal,proto3" json:"code_appraisal,omitempty"`
	NewAppraisal  *BuybackAppraisal `protobuf:"bytes,4,opt,name=new_appraisal,json=newAppraisal,proto3" json:"new_appraisal,omitempty"`
}

func (x *BuybackQueueEntry) Reset() {
	*x = BuybackQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackQueueEntry) ProtoMessage() {}

func (x *BuybackQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackQueueEntry.ProtoReflect.Descriptor instead.
func (*BuybackQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{28}
}

func (x *BuybackQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BuybackQueueEntry) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *BuybackQueueEntry) GetCodeAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.CodeAppraisal
	}
	return nil
}

func (x *BuybackQueueEntry) GetNewAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.NewAppraisal
	}
	return nil
}

type ShopQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Contract      *Contract      `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	CodeAppraisal *ShopAppraisal `protobuf:"bytes,3,opt,name=code_appraisal,json=codeAppraisal,proto3" json:"code_appraisal,omitempty"`
	NewAppraisal  *ShopAppraisal `protobuf:"bytes,4,opt,name=new_appraisal,json=newAppraisal,proto3" json:"new_appraisal,omitempty"`
}

func (x *ShopQueueEntry) Reset() {
	*x = ShopQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopQueueEntry) ProtoMessage() {}

func (x *ShopQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopQueueEntry.ProtoReflect.Descriptor instead.
func (*ShopQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{29}
}

func (x *ShopQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopQueueEntry) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ShopQueueEntry) GetCodeAppraisal() *ShopAppraisal {
	if x != nil {
		return x.CodeAppraisal
	}
	return nil
}

func (x *ShopQueueEntry) GetNewAppraisal() *ShopAppraisal {
	if x != nil {
		return x.NewAppraisal
	}
	return nil
}

type BuybackQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*BuybackQueueEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *BuybackQueue) Reset() {
	*x = BuybackQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackQueue) ProtoMessage() {}

func (x *BuybackQueue) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackQueue.ProtoReflect.Descriptor instead.
func (*BuybackQueue) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{30}
}

func (x *BuybackQueue) GetEntries() []*BuybackQueueEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ShopQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ShopQueueEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Naming  *TypeNamingLists  `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"` // null if no entries
}

func (x *ShopQueue) Reset() {
	*x = ShopQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopQueue) ProtoMessage() {}

func (x *ShopQueue) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopQueue.ProtoReflect.Descriptor instead.
func (*ShopQueue) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{31}
}

func (x *ShopQueue) GetEntries() []*ShopQueueEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ShopQueue) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

type BuybackAppraisal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*BuybackParentItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Code     string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                          // AppraisalCode
	Price    float64              `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                      // sum of []parent.price_total
	Time     int64                `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`                         // time of the appraisal
	Version  string               `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                    // version of the pricing scheme
	SystemId int32                `protobuf:"varint,6,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"` // system used for the appraisal
}

func (x *BuybackAppraisal) Reset() {
	*x = BuybackAppraisal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackAppraisal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackAppraisal) ProtoMessage() {}

func (x *BuybackAppraisal) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackAppraisal.ProtoReflect.Descriptor instead.
func (*BuybackAppraisal) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{32}
}

func (x *BuybackAppraisal) GetItems() []*BuybackParentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BuybackAppraisal) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BuybackAppraisal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BuybackAppraisal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *BuybackAppraisal) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BuybackAppraisal) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

type ShopAppraisal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*ShopItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Code       string      `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                // AppraisalCode
	Price      float64     `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                            // sum of []item.price_total
	Time       int64       `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`                               // time of the appraisal
	Version    string      `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                          // version of the pricing scheme
	LocationId int64       `protobuf:"varint,6,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // location used for the appraisal
}

func (x *ShopAppraisal) Reset() {
	*x = ShopAppraisal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopAppraisal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopAppraisal) ProtoMessage() {}

func (x *ShopAppraisal) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopAppraisal.ProtoReflect.Descriptor instead.
func (*ShopAppraisal) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{33}
}

func (x *ShopAppraisal) GetItems() []*ShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopAppraisal) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopAppraisal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ShopAppraisal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ShopAppraisal) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ShopAppraisal) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type CfgMergeBuybackSystemTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types *BuybackSystemTypeMapsBuilder `protobuf:"bytes,1,opt,name=types,proto3" json:"types,omitempty"`
	Auth  *AuthRequest                  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) Reset() {
	*x = CfgMergeBuybackSystemTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{34}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) GetTypes() *BuybackSystemTypeMapsBuilder {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeBuybackSystemTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) Reset() {
	*x = CfgMergeBuybackSystemTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{35}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeShopLocationTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types *ShopLocationTypeMapsBuilder `protobuf:"bytes,1,opt,name=types,proto3" json:"types,omitempty"`
	Auth  *AuthRequest                 `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) Reset() {
	*x = CfgMergeShopLocationTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{36}
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) GetTypes() *ShopLocationTypeMapsBuilder {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeShopLocationTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) Reset() {
	*x = CfgMergeShopLocationTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{37}
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeBuybackSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems *BuybackSystems `protobuf:"bytes,1,opt,name=systems,proto3" json:"systems,omitempty"`
	Auth    *AuthRequest    `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeBuybackSystemsRequest) Reset() {
	*x = CfgMergeBuybackSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemsRequest) ProtoMessage() {}

func (x *CfgMergeBuybackSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{38}
}

func (x *CfgMergeBuybackSystemsRequest) GetSystems() *BuybackSystems {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *CfgMergeBuybackSystemsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeBuybackSystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeBuybackSystemsResponse) Reset() {
	*x = CfgMergeBuybackSystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemsResponse) ProtoMessage() {}

func (x *CfgMergeBuybackSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemsResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{39}
}

func (x *CfgMergeBuybackSystemsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeBuybackSystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeShopLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations *ShopLocations `protobuf:"bytes,1,opt,name=locations,proto3" json:"locations,omitempty"`
	Auth      *AuthRequest   `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeShopLocationsRequest) Reset() {
	*x = CfgMergeShopLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationsRequest) ProtoMessage() {}

func (x *CfgMergeShopLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{40}
}

func (x *CfgMergeShopLocationsRequest) GetLocations() *ShopLocations {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *CfgMergeShopLocationsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeShopLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeShopLocationsResponse) Reset() {
	*x = CfgMergeShopLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationsResponse) ProtoMessage() {}

func (x *CfgMergeShopLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationsResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{41}
}

func (x *CfgMergeShopLocationsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeShopLocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets *Markets     `protobuf:"bytes,1,opt,name=markets,proto3" json:"markets,omitempty"`
	Auth    *AuthRequest `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeMarketsRequest) Reset() {
	*x = CfgMergeMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeMarketsRequest) ProtoMessage() {}

func (x *CfgMergeMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeMarketsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeMarketsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{42}
}

func (x *CfgMergeMarketsRequest) GetMarkets() *Markets {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *CfgMergeMarketsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeMarketsResponse) Reset() {
	*x = CfgMergeMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeMarketsResponse) ProtoMessage() {}

func (x *CfgMergeMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeMarketsResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeMarketsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{43}
}

func (x *CfgMergeMarketsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeMarketsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgSetAuthListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainKey string       `protobuf:"bytes,1,opt,name=domain_key,json=domainKey,proto3" json:"domain_key,omitempty"` // DomainKey
	AuthList  *AuthList    `protobuf:"bytes,2,opt,name=auth_list,json=authList,proto3" json:"auth_list,omitempty"`
	Auth      *AuthRequest `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgSetAuthListRequest) Reset() {
	*x = CfgSetAuthListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgSetAuthListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgSetAuthListRequest) ProtoMessage() {}

func (x *CfgSetAuthListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgSetAuthListRequest.ProtoReflect.Descriptor instead.
func (*CfgSetAuthListRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{44}
}

func (x *CfgSetAuthListRequest) GetDomainKey() string {
	if x != nil {
		return x.DomainKey
	}
	return ""
}

func (x *CfgSetAuthListRequest) GetAuthList() *AuthList {
	if x != nil {
		return x.AuthList
	}
	return nil
}

func (x *CfgSetAuthListRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgSetAuthListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgSetAuthListResponse) Reset() {
	*x = CfgSetAuthListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgSetAuthListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgSetAuthListResponse) ProtoMessage() {}

func (x *CfgSetAuthListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgSetAuthListResponse.ProtoReflect.Descriptor instead.
func (*CfgSetAuthListResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{45}
}

func (x *CfgSetAuthListResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgSetAuthListResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetBuybackSystemTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) Reset() {
	*x = CfgGetBuybackSystemTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{46}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetBuybackSystemTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types *BuybackSystemTypeMapsBuilder `protobuf:"bytes,1,opt,name=types,proto3" json:"types,omitempty"`
	Auth  *AuthResponse                 `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse                `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) Reset() {
	*x = CfgGetBuybackSystemTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{47}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetTypes() *BuybackSystemTypeMapsBuilder {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetShopLocationTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) Reset() {
	*x = CfgGetShopLocationTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{48}
}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetShopLocationTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types *ShopLocationTypeMapsBuilder `protobuf:"bytes,1,opt,name=types,proto3" json:"types,omitempty"`
	Auth  *AuthResponse                `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse               `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) Reset() {
	*x = CfgGetShopLocationTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{49}
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetTypes() *ShopLocationTypeMapsBuilder {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetBuybackSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetBuybackSystemsRequest) Reset() {
	*x = CfgGetBuybackSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemsRequest) ProtoMessage() {}

func (x *CfgGetBuybackSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemsRequest.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{50}
}

func (x *CfgGetBuybackSystemsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetBuybackSystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems *BuybackSystems `protobuf:"bytes,1,opt,name=systems,proto3" json:"systems,omitempty"`
	Auth    *AuthResponse   `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error   *ErrorResponse  `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackSystemsResponse) Reset() {
	*x = CfgGetBuybackSystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemsResponse) ProtoMessage() {}

func (x *CfgGetBuybackSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{51}
}

func (x *CfgGetBuybackSystemsResponse) GetSystems() *BuybackSystems {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *CfgGetBuybackSystemsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetBuybackSystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetShopLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetShopLocationsRequest) Reset() {
	*x = CfgGetShopLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationsRequest) ProtoMessage() {}

func (x *CfgGetShopLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationsRequest.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{52}
}

func (x *CfgGetShopLocationsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetShopLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations *ShopLocations `protobuf:"bytes,1,opt,name=locations,proto3" json:"locations,omitempty"`
	Auth      *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error     *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopLocationsResponse) Reset() {
	*x = CfgGetShopLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationsResponse) ProtoMessage() {}

func (x *CfgGetShopLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{53}
}

func (x *CfgGetShopLocationsResponse) GetLocations() *ShopLocations {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *CfgGetShopLocationsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetShopLocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetMarketsRequest) Reset() {
	*x = CfgGetMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketsRequest) ProtoMessage() {}

func (x *CfgGetMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketsRequest.ProtoReflect.Descriptor instead.
func (*CfgGetMarketsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{54}
}

func (x *CfgGetMarketsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets *Markets       `protobuf:"bytes,1,opt,name=markets,proto3" json:"markets,omitempty"`
	Auth    *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error   *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetMarketsResponse) Reset() {
	*x = CfgGetMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketsResponse) ProtoMessage() {}

func (x *CfgGetMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetMarketsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{55}
}

func (x *CfgGetMarketsResponse) GetMarkets() *Markets {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *CfgGetMarketsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetMarketsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetAuthListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainKey string       `protobuf:"bytes,1,opt,name=domain_key,json=domainKey,proto3" json:"domain_key,omitempty"` // DomainKey
	Auth      *AuthRequest `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetAuthListRequest) Reset() {
	*x = CfgGetAuthListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetAuthListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetAuthListRequest) ProtoMessage() {}

func (x *CfgGetAuthListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetAuthListRequest.ProtoReflect.Descriptor instead.
func (*CfgGetAuthListRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{56}
}

func (x *CfgGetAuthListRequest) GetDomainKey() string {
	if x != nil {
		return x.DomainKey
	}
	return ""
}

func (x *CfgGetAuthListRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetAuthListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthList *AuthList      `protobuf:"bytes,1,opt,name=auth_list,json=authList,proto3" json:"auth_list,omitempty"`
	Auth     *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetAuthListResponse) Reset() {
	*x = CfgGetAuthListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetAuthListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetAuthListResponse) ProtoMessage() {}

func (x *CfgGetAuthListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetAuthListResponse.ProtoReflect.Descriptor instead.
func (*CfgGetAuthListResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{57}
}

func (x *CfgGetAuthListResponse) GetAuthList() *AuthList {
	if x != nil {
		return x.AuthList
	}
	return nil
}

func (x *CfgGetAuthListResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetAuthListResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// anonymous or authenticated
// returns a code if save is true
type NewBuybackAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId      int32              `protobuf:"varint,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"` // SystemId
	Items         []*BasicItem       `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Save          bool               `protobuf:"varint,3,opt,name=save,proto3" json:"save,omitempty"` // whether to store the appraisal and return a code
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,4,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Auth          *AuthRequest       `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"` // optional
}

func (x *NewBuybackAppraisalRequest) Reset() {
	*x = NewBuybackAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBuybackAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBuybackAppraisalRequest) ProtoMessage() {}

func (x *NewBuybackAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBuybackAppraisalRequest.ProtoReflect.Descriptor instead.
func (*NewBuybackAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{58}
}

func (x *NewBuybackAppraisalRequest) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *NewBuybackAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *NewBuybackAppraisalRequest) GetSave() bool {
	if x != nil {
		return x.Save
	}
	return false
}

func (x *NewBuybackAppraisalRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *NewBuybackAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type NewBuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal *BuybackAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	Naming    *TypeNamingLists  `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"`
	Auth      *AuthResponse     `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error     *ErrorResponse    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NewBuybackAppraisalResponse) Reset() {
	*x = NewBuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBuybackAppraisalResponse) ProtoMessage() {}

func (x *NewBuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*NewBuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{59}
}

func (x *NewBuybackAppraisalResponse) GetAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *NewBuybackAppraisalResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *NewBuybackAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *NewBuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// authenticated
// returns a code if save is true (but doesn't add it to the purchase queue)
type NewShopAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64        `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	Items      []*BasicItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// bool save = 3; // whether to store the appraisal and return a code
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,3,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"` // AuthRequest auth = 4;
}

func (x *NewShopAppraisalRequest) Reset() {
	*x = NewShopAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewShopAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewShopAppraisalRequest) ProtoMessage() {}

func (x *NewShopAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewShopAppraisalRequest.ProtoReflect.Descriptor instead.
func (*NewShopAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{60}
}

func (x *NewShopAppraisalRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *NewShopAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *NewShopAppraisalRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

type NewShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal *ShopAppraisal     `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	Naming    *TypeNamingIndexes `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"`
	// AuthResponse auth = 3;
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NewShopAppraisalResponse) Reset() {
	*x = NewShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewShopAppraisalResponse) ProtoMessage() {}

func (x *NewShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*NewShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{61}
}

func (x *NewShopAppraisalResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *NewShopAppraisalResponse) GetNaming() *TypeNamingIndexes {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *NewShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetBuybackAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,2,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Auth          *AuthRequest       `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"` // optional, admin only
}

func (x *GetBuybackAppraisalRequest) Reset() {
	*x = GetBuybackAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuybackAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuybackAppraisalRequest) ProtoMessage() {}

func (x *GetBuybackAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuybackAppraisalRequest.ProtoReflect.Descriptor instead.
func (*GetBuybackAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{62}
}

func (x *GetBuybackAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetBuybackAppraisalRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *GetBuybackAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GetBuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal       *BuybackAppraisal  `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	HashCharacterId string             `protobuf:"bytes,2,opt,name=hash_character_id,json=hashCharacterId,proto3" json:"hash_character_id,omitempty"` // obfuscated character id
	CharacterId     int32              `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`              // admin only, 0 otherwise
	Naming          *TypeNamingIndexes `protobuf:"bytes,4,opt,name=naming,proto3" json:"naming,omitempty"`
	Auth            *AuthResponse      `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`   // admin only
	Error           *ErrorResponse     `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"` // code not exists
}

func (x *GetBuybackAppraisalResponse) Reset() {
	*x = GetBuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuybackAppraisalResponse) ProtoMessage() {}

func (x *GetBuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*GetBuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{63}
}

func (x *GetBuybackAppraisalResponse) GetAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetHashCharacterId() string {
	if x != nil {
		return x.HashCharacterId
	}
	return ""
}

func (x *GetBuybackAppraisalResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *GetBuybackAppraisalResponse) GetNaming() *TypeNamingIndexes {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetShopAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,2,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Auth          *AuthRequest       `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"` // optional, admin only
}

func (x *GetShopAppraisalRequest) Reset() {
	*x = GetShopAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopAppraisalRequest) ProtoMessage() {}

func (x *GetShopAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopAppraisalRequest.ProtoReflect.Descriptor instead.
func (*GetShopAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{64}
}

func (x *GetShopAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetShopAppraisalRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *GetShopAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GetShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal       *ShopAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	HashCharacterId string         `protobuf:"bytes,2,opt,name=hash_character_id,json=hashCharacterId,proto3" json:"hash_character_id,omitempty"` // obfuscated character id
	CharacterId     int32          `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`              // admin only, 0 otherwise
	Auth            *AuthResponse  `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`                                                // admin only, null otherwise
	Error           *ErrorResponse `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`                                              // code not exists
}

func (x *GetShopAppraisalResponse) Reset() {
	*x = GetShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopAppraisalResponse) ProtoMessage() {}

func (x *GetShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*GetShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{65}
}

func (x *GetShopAppraisalResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *GetShopAppraisalResponse) GetHashCharacterId() string {
	if x != nil {
		return x.HashCharacterId
	}
	return ""
}

func (x *GetShopAppraisalResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *GetShopAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type StatusBuybackAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeItems  bool               `protobuf:"varint,2,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,3,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Admin         bool               `protobuf:"varint,4,opt,name=admin,proto3" json:"admin,omitempty"` // whether to use admin auth
	Auth          *AuthRequest       `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *StatusBuybackAppraisalRequest) Reset() {
	*x = StatusBuybackAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusBuybackAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusBuybackAppraisalRequest) ProtoMessage() {}

func (x *StatusBuybackAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusBuybackAppraisalRequest.ProtoReflect.Descriptor instead.
func (*StatusBuybackAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{66}
}

func (x *StatusBuybackAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StatusBuybackAppraisalRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *StatusBuybackAppraisalRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *StatusBuybackAppraisalRequest) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *StatusBuybackAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type StatusBuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract *Contract        `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Naming   *TypeNamingLists `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"`
	Auth     *AuthResponse    `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusBuybackAppraisalResponse) Reset() {
	*x = StatusBuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusBuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusBuybackAppraisalResponse) ProtoMessage() {}

func (x *StatusBuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusBuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*StatusBuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{67}
}

func (x *StatusBuybackAppraisalResponse) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type StatusShopAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeItems  bool               `protobuf:"varint,2,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,3,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Admin         bool               `protobuf:"varint,4,opt,name=admin,proto3" json:"admin,omitempty"` // whether to use admin auth
	Auth          *AuthRequest       `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *StatusShopAppraisalRequest) Reset() {
	*x = StatusShopAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusShopAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusShopAppraisalRequest) ProtoMessage() {}

func (x *StatusShopAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusShopAppraisalRequest.ProtoReflect.Descriptor instead.
func (*StatusShopAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{68}
}

func (x *StatusShopAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StatusShopAppraisalRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *StatusShopAppraisalRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *StatusShopAppraisalRequest) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *StatusShopAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type StatusShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract *Contract        `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	InQueue  bool             `protobuf:"varint,2,opt,name=in_queue,json=inQueue,proto3" json:"in_queue,omitempty"` // if true, contract is always null
	Naming   *TypeNamingLists `protobuf:"bytes,3,opt,name=naming,proto3" json:"naming,omitempty"`
	Auth     *AuthResponse    `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse   `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusShopAppraisalResponse) Reset() {
	*x = StatusShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusShopAppraisalResponse) ProtoMessage() {}

func (x *StatusShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*StatusShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{69}
}

func (x *StatusShopAppraisalResponse) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetInQueue() bool {
	if x != nil {
		return x.InQueue
	}
	return false
}

func (x *StatusShopAppraisalResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopPurchasableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId    int64              `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,2,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Auth          *AuthRequest       `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopPurchasableRequest) Reset() {
	*x = ShopPurchasableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchasableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchasableRequest) ProtoMessage() {}

func (x *ShopPurchasableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchasableRequest.ProtoReflect.Descriptor instead.
func (*ShopPurchasableRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{70}
}

func (x *ShopPurchasableRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *ShopPurchasableRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *ShopPurchasableRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopPurchasableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items  []*ShopItem      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Naming *TypeNamingLists `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"`
	Auth   *AuthResponse    `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error  *ErrorResponse   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopPurchasableResponse) Reset() {
	*x = ShopPurchasableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchasableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchasableResponse) ProtoMessage() {}

func (x *ShopPurchasableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchasableResponse.ProtoReflect.Descriptor instead.
func (*ShopPurchasableResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{71}
}

func (x *ShopPurchasableResponse) GetItems() []*ShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopPurchasableResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *ShopPurchasableResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopPurchasableResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopMakePurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId    int64              `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	Items         []*BasicItem       `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,3,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Auth          *AuthRequest       `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopMakePurchaseRequest) Reset() {
	*x = ShopMakePurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopMakePurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopMakePurchaseRequest) ProtoMessage() {}

func (x *ShopMakePurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopMakePurchaseRequest.ProtoReflect.Descriptor instead.
func (*ShopMakePurchaseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{72}
}

func (x *ShopMakePurchaseRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *ShopMakePurchaseRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopMakePurchaseRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *ShopMakePurchaseRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopMakePurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal *ShopAppraisal   `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	Naming    *TypeNamingLists `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"`
	Auth      *AuthResponse    `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error     *ErrorResponse   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"` // purchase failed
}

func (x *ShopMakePurchaseResponse) Reset() {
	*x = ShopMakePurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopMakePurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopMakePurchaseResponse) ProtoMessage() {}

func (x *ShopMakePurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopMakePurchaseResponse.ProtoReflect.Descriptor instead.
func (*ShopMakePurchaseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{73}
}

func (x *ShopMakePurchaseResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *ShopMakePurchaseResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *ShopMakePurchaseResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopMakePurchaseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type UserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *UserDataRequest) Reset() {
	*x = UserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataRequest) ProtoMessage() {}

func (x *UserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataRequest.ProtoReflect.Descriptor instead.
func (*UserDataRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{74}
}

func (x *UserDataRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type UserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuybackCodes      []string       `protobuf:"bytes,1,rep,name=buyback_codes,json=buybackCodes,proto3" json:"buyback_codes,omitempty"`                 // AppraisalCode
	ShopCodes         []string       `protobuf:"bytes,2,rep,name=shop_codes,json=shopCodes,proto3" json:"shop_codes,omitempty"`                          // AppraisalCode
	CancelledPurchase int64          `protobuf:"varint,3,opt,name=cancelled_purchase,json=cancelledPurchase,proto3" json:"cancelled_purchase,omitempty"` // timestamp of last cancelled purchase
	MadePurchase      int64          `protobuf:"varint,4,opt,name=made_purchase,json=madePurchase,proto3" json:"made_purchase,omitempty"`                // timestamp of last made purchase
	Auth              *AuthResponse  `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
	Error             *ErrorResponse `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UserDataResponse) Reset() {
	*x = UserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataResponse) ProtoMessage() {}

func (x *UserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataResponse.ProtoReflect.Descriptor instead.
func (*UserDataResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{75}
}

func (x *UserDataResponse) GetBuybackCodes() []string {
	if x != nil {
		return x.BuybackCodes
	}
	return nil
}

func (x *UserDataResponse) GetShopCodes() []string {
	if x != nil {
		return x.ShopCodes
	}
	return nil
}

func (x *UserDataResponse) GetCancelledPurchase() int64 {
	if x != nil {
		return x.CancelledPurchase
	}
	return 0
}

func (x *UserDataResponse) GetMadePurchase() int64 {
	if x != nil {
		return x.MadePurchase
	}
	return 0
}

func (x *UserDataResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UserDataResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeItems         bool               `protobuf:"varint,1,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeCodeAppraisal bool               `protobuf:"varint,2,opt,name=include_code_appraisal,json=includeCodeAppraisal,proto3" json:"include_code_appraisal,omitempty"`
	IncludeNewAppraisal  bool               `protobuf:"varint,3,opt,name=include_new_appraisal,json=includeNewAppraisal,proto3" json:"include_new_appraisal,omitempty"`
	IncludeNaming        *IncludeTypeNaming `protobuf:"bytes,4,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Auth                 *AuthRequest       `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopQueueRequest) Reset() {
	*x = ShopQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopQueueRequest) ProtoMessage() {}

func (x *ShopQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopQueueRequest.ProtoReflect.Descriptor instead.
func (*ShopQueueRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{76}
}

func (x *ShopQueueRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *ShopQueueRequest) GetIncludeCodeAppraisal() bool {
	if x != nil {
		return x.IncludeCodeAppraisal
	}
	return false
}

func (x *ShopQueueRequest) GetIncludeNewAppraisal() bool {
	if x != nil {
		return x.IncludeNewAppraisal
	}
	return false
}

func (x *ShopQueueRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *ShopQueueRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue  *ShopQueue       `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Naming *TypeNamingLists `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"` // null if not requested, empty if no entries
	Auth   *AuthResponse    `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error  *ErrorResponse   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopQueueResponse) Reset() {
	*x = ShopQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopQueueResponse) ProtoMessage() {}

func (x *ShopQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopQueueResponse.ProtoReflect.Descriptor instead.
func (*ShopQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{77}
}

func (x *ShopQueueResponse) GetQueue() *ShopQueue {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *ShopQueueResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *ShopQueueResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type BuybackQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeItems         bool               `protobuf:"varint,1,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeCodeAppraisal bool               `protobuf:"varint,2,opt,name=include_code_appraisal,json=includeCodeAppraisal,proto3" json:"include_code_appraisal,omitempty"`
	IncludeNewAppraisal  bool               `protobuf:"varint,3,opt,name=include_new_appraisal,json=includeNewAppraisal,proto3" json:"include_new_appraisal,omitempty"`
	IncludeNaming        *IncludeTypeNaming `protobuf:"bytes,4,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
	Auth                 *AuthRequest       `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *BuybackQueueRequest) Reset() {
	*x = BuybackQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackQueueRequest) ProtoMessage() {}

func (x *BuybackQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackQueueRequest.ProtoReflect.Descriptor instead.
func (*BuybackQueueRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{78}
}

func (x *BuybackQueueRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *BuybackQueueRequest) GetIncludeCodeAppraisal() bool {
	if x != nil {
		return x.IncludeCodeAppraisal
	}
	return false
}

func (x *BuybackQueueRequest) GetIncludeNewAppraisal() bool {
	if x != nil {
		return x.IncludeNewAppraisal
	}
	return false
}

func (x *BuybackQueueRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

func (x *BuybackQueueRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type BuybackQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue  *BuybackQueue    `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Naming *TypeNamingLists `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"` // null if not requested, empty if no entries
	Auth   *AuthResponse    `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error  *ErrorResponse   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BuybackQueueResponse) Reset() {
	*x = BuybackQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackQueueResponse) ProtoMessage() {}

func (x *BuybackQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackQueueResponse.ProtoReflect.Descriptor instead.
func (*BuybackQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{79}
}

func (x *BuybackQueueResponse) GetQueue() *BuybackQueue {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *BuybackQueueResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *BuybackQueueResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *BuybackQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopCancelPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Auth *AuthRequest `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopCancelPurchaseRequest) Reset() {
	*x = ShopCancelPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchaseRequest) ProtoMessage() {}

func (x *ShopCancelPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchaseRequest.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{80}
}

func (x *ShopCancelPurchaseRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopCancelPurchaseRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopCancelPurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopCancelPurchaseResponse) Reset() {
	*x = ShopCancelPurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchaseResponse) ProtoMessage() {}

func (x *ShopCancelPurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchaseResponse.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchaseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{81}
}

func (x *ShopCancelPurchaseResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopCancelPurchaseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopCancelPurchasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string     `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"` // AppraisalCode
	Auth  *AuthRequest `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopCancelPurchasesRequest) Reset() {
	*x = ShopCancelPurchasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchasesRequest) ProtoMessage() {}

func (x *ShopCancelPurchasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchasesRequest.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchasesRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{82}
}

func (x *ShopCancelPurchasesRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *ShopCancelPurchasesRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopCancelPurchasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopCancelPurchasesResponse) Reset() {
	*x = ShopCancelPurchasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchasesResponse) ProtoMessage() {}

func (x *ShopCancelPurchasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchasesResponse.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchasesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{83}
}

func (x *ShopCancelPurchasesResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopCancelPurchasesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ParseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // AuthRequest auth = 2;
}

func (x *ParseRequest) Reset() {
	*x = ParseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRequest) ProtoMessage() {}

func (x *ParseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRequest.ProtoReflect.Descriptor instead.
func (*ParseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{84}
}

func (x *ParseRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ParseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnownItems   []*NamedBasicItem `protobuf:"bytes,1,rep,name=known_items,json=knownItems,proto3" json:"known_items,omitempty"`
	UnknownItems []*NamedBasicItem `protobuf:"bytes,2,rep,name=unknown_items,json=unknownItems,proto3" json:"unknown_items,omitempty"`
	// AuthResponse auth = 3;
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ParseResponse) Reset() {
	*x = ParseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseResponse) ProtoMessage() {}

func (x *ParseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseResponse.ProtoReflect.Descriptor instead.
func (*ParseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{85}
}

func (x *ParseResponse) GetKnownItems() []*NamedBasicItem {
	if x != nil {
		return x.KnownItems
	}
	return nil
}

func (x *ParseResponse) GetUnknownItems() []*NamedBasicItem {
	if x != nil {
		return x.UnknownItems
	}
	return nil
}

func (x *ParseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type SDETypeDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeNaming *IncludeTypeNaming `protobuf:"bytes,1,opt,name=include_naming,json=includeNaming,proto3" json:"include_naming,omitempty"`
}

func (x *SDETypeDataRequest) Reset() {
	*x = SDETypeDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDETypeDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDETypeDataRequest) ProtoMessage() {}

func (x *SDETypeDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDETypeDataRequest.ProtoReflect.Descriptor instead.
func (*SDETypeDataRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{86}
}

func (x *SDETypeDataRequest) GetIncludeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeNaming
	}
	return nil
}

type SDETypeDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types  []*NamedType     `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	Naming *TypeNamingLists `protobuf:"bytes,2,opt,name=naming,proto3" json:"naming,omitempty"`
	Error  *ErrorResponse   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SDETypeDataResponse) Reset() {
	*x = SDETypeDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDETypeDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDETypeDataResponse) ProtoMessage() {}

func (x *SDETypeDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDETypeDataResponse.ProtoReflect.Descriptor instead.
func (*SDETypeDataResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{87}
}

func (x *SDETypeDataResponse) GetTypes() []*NamedType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *SDETypeDataResponse) GetNaming() *TypeNamingLists {
	if x != nil {
		return x.Naming
	}
	return nil
}

func (x *SDETypeDataResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_etco_proto protoreflect.FileDescriptor

var file_etco_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x65, 0x74, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x39, 0x0a,
	0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x78, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x75,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x75, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72, 0x69,
	0x63, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x4a, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0xcd, 0x01, 0x0a, 0x17,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x62, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc8, 0x01, 0x0a, 0x16,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x5f, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdc, 0x01, 0x0a, 0x1c, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x67, 0x0a, 0x0a,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd9, 0x01, 0x0a, 0x1b, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x66, 0x0a, 0x0a, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x45, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x33, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x6d, 0x33, 0x46, 0x65, 0x65, 0x22, 0x50, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x45, 0x0a,
	0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x5d, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x5c, 0x0a, 0x0a, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a, 0x06, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa1, 0x01, 0x0a,
	0x07, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x56, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7b, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0xba, 0x01,
	0x0a, 0x11, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x14,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x6e,
	0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x65,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x06, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x40, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x59, 0x0a, 0x0e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x11, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xe4, 0x01, 0x0a, 0x10, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x22, 0xc8, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x84, 0x01, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x3f, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x22, 0xe9, 0x03, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61,
	0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xff, 0x01, 0x0a, 0x11, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x22, 0xf6, 0x01, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x0c, 0x6e, 0x65,
	0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x22, 0x51, 0x0a, 0x0c, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x8a, 0x01,
	0x0a, 0x09, 0x53, 0x68, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12,
	0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x2b, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xa1, 0x01, 0x0a, 0x2c, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xac, 0x01, 0x0a, 0x2a, 0x43, 0x66,
	0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xa0, 0x01, 0x0a, 0x2b, 0x43, 0x66, 0x67,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x1d,
	0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x35, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0x93, 0x01, 0x0a, 0x1e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x1c, 0x43,
	0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x92, 0x01, 0x0a, 0x1d, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x43,
	0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x35,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8c, 0x01, 0x0a, 0x17, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x62, 0x0a, 0x29, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x22, 0xe9, 0x01, 0x0a, 0x2a, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x61, 0x0a, 0x28, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0xe7, 0x01, 0x0a, 0x29, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x54, 0x0a, 0x1b,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0xd1, 0x01, 0x0a, 0x1c, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x53, 0x0a, 0x1a, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xd3, 0x01, 0x0a, 0x1b,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x4d, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xc3, 0x01, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x8b, 0x02, 0x0a, 0x1a, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x73, 0x61, 0x76, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x95,
	0x02, 0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x53, 0x68,
	0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xd9, 0x01, 0x0a, 0x18, 0x4e,
	0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x06, 0x6e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb7, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xe6, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x06,
	0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0x9f, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x61, 0x73,
	0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xf5, 0x01, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4e, 0x0a,
	0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8e, 0x02, 0x0a, 0x1e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf2, 0x01, 0x0a, 0x1a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xa6, 0x02, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x06,
	0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc0, 0x01, 0x0a, 0x16, 0x53, 0x68,
	0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x81, 0x02, 0x0a,
	0x17, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d,
	0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xf8, 0x01, 0x0a, 0x17, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8f, 0x02, 0x0a, 0x18,
	0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x06, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x48, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x9d, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x64, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa8, 0x02, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x70,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e,
	0x65, 0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x4e, 0x0a, 0x0e, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0xfc, 0x01, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x3d, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x36,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xab, 0x02, 0x0a, 0x13, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x34,
	0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22,
	0x82, 0x02, 0x0a, 0x14, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8f, 0x01, 0x0a,
	0x1a, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x69,
	0x0a, 0x1a, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x53, 0x68,
	0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x22, 0x0a, 0x0c,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0xdc, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x64, 0x0a, 0x12, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xc6, 0x01, 0x0a, 0x13, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x06, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0xc6,
	0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x07,
	0x12, 0x0a, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x64, 0x10, 0x0a, 0x2a, 0x5f, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f,
	0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x6c,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x03, 0x32, 0x82, 0x1a, 0x0a, 0x0c, 0x45, 0x76, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x12, 0x62, 0x0a, 0x0b, 0x53, 0x44, 0x45,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x09, 0x53, 0x68, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x26, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0c, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x29, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0xa7, 0x01, 0x0a, 0x22, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x21, 0x43, 0x66,
	0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x3e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7d, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7a, 0x0a, 0x13, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x24, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x41, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xaa, 0x01, 0x0a, 0x23, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x40, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x32, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x66, 0x67, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x70,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12,
	0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x12, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x4e, 0x65, 0x77,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6e, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x71, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d,
	0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x12, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x2d, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x16,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x33, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7a, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a,
	0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_etco_proto_rawDescOnce sync.Once
	file_etco_proto_rawDescData = file_etco_proto_rawDesc
)

func file_etco_proto_rawDescGZIP() []byte {
	file_etco_proto_rawDescOnce.Do(func() {
		file_etco_proto_rawDescData = protoimpl.X.CompressGZIP(file_etco_proto_rawDescData)
	})
	return file_etco_proto_rawDescData
}

var file_etco_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_etco_proto_msgTypes = make([]protoimpl.MessageInfo, 95)
var file_etco_proto_goTypes = []interface{}{
	(ContractStatus)(0),                                  // 0: eve_trading_co_proto.ContractStatus
	(ContractAssigneeType)(0),                            // 1: eve_trading_co_proto.ContractAssigneeType
	(*AuthRequest)(nil),                                  // 2: eve_trading_co_proto.AuthRequest
	(*AuthResponse)(nil),                                 // 3: eve_trading_co_proto.AuthResponse
	(*ErrorResponse)(nil),                                // 4: eve_trading_co_proto.ErrorResponse
	(*TypePricing)(nil),                                  // 5: eve_trading_co_proto.TypePricing
	(*BuybackTypePricing)(nil),                           // 6: eve_trading_co_proto.BuybackTypePricing
	(*ShopTypePricing)(nil),                              // 7: eve_trading_co_proto.ShopTypePricing
	(*BuybackSystemTypeBundle)(nil),                      // 8: eve_trading_co_proto.BuybackSystemTypeBundle
	(*ShopLocationTypeBundle)(nil),                       // 9: eve_trading_co_proto.ShopLocationTypeBundle
	(*BuybackSystemTypeMapsBuilder)(nil),                 // 10: eve_trading_co_proto.BuybackSystemTypeMapsBuilder
	(*ShopLocationTypeMapsBuilder)(nil),                  // 11: eve_trading_co_proto.ShopLocationTypeMapsBuilder
	(*BuybackSystem)(nil),                                // 12: eve_trading_co_proto.BuybackSystem
	(*ShopLocation)(nil),                                 // 13: eve_trading_co_proto.ShopLocation
	(*BuybackSystems)(nil),                               // 14: eve_trading_co_proto.BuybackSystems
	(*ShopLocations)(nil),                                // 15: eve_trading_co_proto.ShopLocations
	(*Market)(nil),                                       // 16: eve_trading_co_proto.Market
	(*Markets)(nil),                                      // 17: eve_trading_co_proto.Markets
	(*AuthList)(nil),                                     // 18: eve_trading_co_proto.AuthList
	(*IncludeTypeNaming)(nil),                            // 19: eve_trading_co_proto.IncludeTypeNaming
	(*TypeNamingIndexes)(nil),                            // 20: eve_trading_co_proto.TypeNamingIndexes
	(*TypeNamingLists)(nil),                              // 21: eve_trading_co_proto.TypeNamingLists
	(*NamedType)(nil),                                    // 22: eve_trading_co_proto.NamedType
	(*BasicItem)(nil),                                    // 23: eve_trading_co_proto.BasicItem
	(*NamedBasicItem)(nil),                               // 24: eve_trading_co_proto.NamedBasicItem
	(*BuybackParentItem)(nil),                            // 25: eve_trading_co_proto.BuybackParentItem
	(*BuybackChildItem)(nil),                             // 26: eve_trading_co_proto.BuybackChildItem
	(*ShopItem)(nil),                                     // 27: eve_trading_co_proto.ShopItem
	(*ContractItem)(nil),                                 // 28: eve_trading_co_proto.ContractItem
	(*Contract)(nil),                                     // 29: eve_trading_co_proto.Contract
	(*BuybackQueueEntry)(nil),                            // 30: eve_trading_co_proto.BuybackQueueEntry
	(*ShopQueueEntry)(nil),                               // 31: eve_trading_co_proto.ShopQueueEntry
	(*BuybackQueue)(nil),                                 // 32: eve_trading_co_proto.BuybackQueue
	(*ShopQueue)(nil),                                    // 33: eve_trading_co_proto.ShopQueue
	(*BuybackAppraisal)(nil),                             // 34: eve_trading_co_proto.BuybackAppraisal
	(*ShopAppraisal)(nil),                                // 35: eve_trading_co_proto.ShopAppraisal
	(*CfgMergeBuybackSystemTypeMapsBuilderRequest)(nil),  // 36: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest
	(*CfgMergeBuybackSystemTypeMapsBuilderResponse)(nil), // 37: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse
	(*CfgMergeShopLocationTypeMapsBuilderRequest)(nil),   // 38: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest
	(*CfgMergeShopLocationTypeMapsBuilderResponse)(nil),  // 39: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse
	(*CfgMergeBuybackSystemsRequest)(nil),                // 40: eve_trading_co_proto.CfgMergeBuybackSystemsRequest
	(*CfgMergeBuybackSystemsResponse)(nil),               // 41: eve_trading_co_proto.CfgMergeBuybackSystemsResponse
	(*CfgMergeShopLocationsRequest)(nil),                 // 42: eve_trading_co_proto.CfgMergeShopLocationsRequest
	(*CfgMergeShopLocationsResponse)(nil),                // 43: eve_trading_co_proto.CfgMergeShopLocationsResponse
	(*CfgMergeMarketsRequest)(nil),                       // 44: eve_trading_co_proto.CfgMergeMarketsRequest
	(*CfgMergeMarketsResponse)(nil),                      // 45: eve_trading_co_proto.CfgMergeMarketsResponse
	(*CfgSetAuthListRequest)(nil),                        // 46: eve_trading_co_proto.CfgSetAuthListRequest
	(*CfgSetAuthListResponse)(nil),                       // 47: eve_trading_co_proto.CfgSetAuthListResponse
	(*CfgGetBuybackSystemTypeMapsBuilderRequest)(nil),    // 48: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderRequest
	(*CfgGetBuybackSystemTypeMapsBuilderResponse)(nil),   // 49: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse
	(*CfgGetShopLocationTypeMapsBuilderRequest)(nil),     // 50: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderRequest
	(*CfgGetShopLocationTypeMapsBuilderResponse)(nil),    // 51: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse
	(*CfgGetBuybackSystemsRequest)(nil),                  // 52: eve_trading_co_proto.CfgGetBuybackSystemsRequest
	(*CfgGetBuybackSystemsResponse)(nil),                 // 53: eve_trading_co_proto.CfgGetBuybackSystemsResponse
	(*CfgGetShopLocationsRequest)(nil),                   // 54: eve_trading_co_proto.CfgGetShopLocationsRequest
	(*CfgGetShopLocationsResponse)(nil),                  // 55: eve_trading_co_proto.CfgGetShopLocationsResponse
	(*CfgGetMarketsRequest)(nil),                         // 56: eve_trading_co_proto.CfgGetMarketsRequest
	(*CfgGetMarketsResponse)(nil),                        // 57: eve_trading_co_proto.CfgGetMarketsResponse
	(*CfgGetAuthListRequest)(nil),                        // 58: eve_trading_co_proto.CfgGetAuthListRequest
	(*CfgGetAuthListResponse)(nil),                       // 59: eve_trading_co_proto.CfgGetAuthListResponse
	(*NewBuybackAppraisalRequest)(nil),                   // 60: eve_trading_co_proto.NewBuybackAppraisalRequest
	(*NewBuybackAppraisalResponse)(nil),                  // 61: eve_trading_co_proto.NewBuybackAppraisalResponse
	(*NewShopAppraisalRequest)(nil),                      // 62: eve_trading_co_proto.NewShopAppraisalRequest
	(*NewShopAppraisalResponse)(nil),                     // 63: eve_trading_co_proto.NewShopAppraisalResponse
	(*GetBuybackAppraisalRequest)(nil),                   // 64: eve_trading_co_proto.GetBuybackAppraisalRequest
	(*GetBuybackAppraisalResponse)(nil),                  // 65: eve_trading_co_proto.GetBuybackAppraisalResponse
	(*GetShopAppraisalRequest)(nil),                      // 66: eve_trading_co_proto.GetShopAppraisalRequest
	(*GetShopAppraisalResponse)(nil),                     // 67: eve_trading_co_proto.GetShopAppraisalResponse
	(*StatusBuybackAppraisalRequest)(nil),                // 68: eve_trading_co_proto.StatusBuybackAppraisalRequest
	(*StatusBuybackAppraisalResponse)(nil),               // 69: eve_trading_co_proto.StatusBuybackAppraisalResponse
	(*StatusShopAppraisalRequest)(nil),                   // 70: eve_trading_co_proto.StatusShopAppraisalRequest
	(*StatusShopAppraisalResponse)(nil),                  // 71: eve_trading_co_proto.StatusShopAppraisalResponse
	(*ShopPurchasableRequest)(nil),                       // 72: eve_trading_co_proto.ShopPurchasableRequest
	(*ShopPurchasableResponse)(nil),                      // 73: eve_trading_co_proto.ShopPurchasableResponse
	(*ShopMakePurchaseRequest)(nil),                      // 74: eve_trading_co_proto.ShopMakePurchaseRequest
	(*ShopMakePurchaseResponse)(nil),                     // 75: eve_trading_co_proto.ShopMakePurchaseResponse
	(*UserDataRequest)(nil),                              // 76: eve_trading_co_proto.UserDataRequest
	(*UserDataResponse)(nil),                             // 77: eve_trading_co_proto.UserDataResponse
	(*ShopQueueRequest)(nil),                             // 78: eve_trading_co_proto.ShopQueueRequest
	(*ShopQueueResponse)(nil),                            // 79: eve_trading_co_proto.ShopQueueResponse
	(*BuybackQueueRequest)(nil),                          // 80: eve_trading_co_proto.BuybackQueueRequest
	(*BuybackQueueResponse)(nil),                         // 81: eve_trading_co_proto.BuybackQueueResponse
	(*ShopCancelPurchaseRequest)(nil),                    // 82: eve_trading_co_proto.ShopCancelPurchaseRequest
	(*ShopCancelPurchaseResponse)(nil),                   // 83: eve_trading_co_proto.ShopCancelPurchaseResponse
	(*ShopCancelPurchasesRequest)(nil),                   // 84: eve_trading_co_proto.ShopCancelPurchasesRequest
	(*ShopCancelPurchasesResponse)(nil),                  // 85: eve_trading_co_proto.ShopCancelPurchasesResponse
	(*ParseRequest)(nil),                                 // 86: eve_trading_co_proto.ParseRequest
	(*ParseResponse)(nil),                                // 87: eve_trading_co_proto.ParseResponse
	(*SDETypeDataRequest)(nil),                           // 88: eve_trading_co_proto.SDETypeDataRequest
	(*SDETypeDataResponse)(nil),                          // 89: eve_trading_co_proto.SDETypeDataResponse
	nil,                                                  // 90: eve_trading_co_proto.BuybackSystemTypeBundle.InnerEntry
	nil,                                                  // 91: eve_trading_co_proto.ShopLocationTypeBundle.InnerEntry
	nil,                                                  // 92: eve_trading_co_proto.BuybackSystemTypeMapsBuilder.InnerEntry
	nil,                                                  // 93: eve_trading_co_proto.ShopLocationTypeMapsBuilder.InnerEntry
	nil,                                                  // 94: eve_trading_co_proto.BuybackSystems.InnerEntry
	nil,                                                  // 95: eve_trading_co_proto.ShopLocations.InnerEntry
	nil,                                                  // 96: eve_trading_co_proto.Markets.InnerEntry
}
var file_etco_proto_depIdxs = []int32{
	5,   // 0: eve_trading_co_proto.BuybackTypePricing.pricing:type_name -> eve_trading_co_proto.TypePricing
	5,   // 1: eve_trading_co_proto.ShopTypePricing.inner:type_name -> eve_trading_co_proto.TypePricing
	90,  // 2: eve_trading_co_proto.BuybackSystemTypeBundle.inner:type_name -> eve_trading_co_proto.BuybackSystemTypeBundle.InnerEntry
	91,  // 3: eve_trading_co_proto.ShopLocationTypeBundle.inner:type_name -> eve_trading_co_proto.ShopLocationTypeBundle.InnerEntry
	92,  // 4: eve_trading_co_proto.BuybackSystemTypeMapsBuilder.inner:type_name -> eve_trading_co_proto.BuybackSystemTypeMapsBuilder.InnerEntry
	93,  // 5: eve_trading_co_proto.ShopLocationTypeMapsBuilder.inner:type_name -> eve_trading_co_proto.ShopLocationTypeMapsBuilder.InnerEntry
	94,  // 6: eve_trading_co_proto.BuybackSystems.inner:type_name -> eve_trading_co_proto.BuybackSystems.InnerEntry
	95,  // 7: eve_trading_co_proto.ShopLocations.inner:type_name -> eve_trading_co_proto.ShopLocations.InnerEntry
	96,  // 8: eve_trading_co_proto.Markets.inner:type_name -> eve_trading_co_proto.Markets.InnerEntry
	20,  // 9: eve_trading_co_proto.NamedType.naming:type_name -> eve_trading_co_proto.TypeNamingIndexes
	26,  // 10: eve_trading_co_proto.BuybackParentItem.children:type_name -> eve_trading_co_proto.BuybackChildItem
	20,  // 11: eve_trading_co_proto.BuybackParentItem.naming:type_name -> eve_trading_co_proto.TypeNamingIndexes
	20,  // 12: eve_trading_co_proto.BuybackChildItem.naming:type_name -> eve_trading_co_proto.TypeNamingIndexes
	20,  // 13: eve_trading_co_proto.ShopItem.naming:type_name -> eve_trading_co_proto.TypeNamingIndexes
	20,  // 14: eve_trading_co_proto.ContractItem.naming:type_name -> eve_trading_co_proto.TypeNamingIndexes
	0,   // 15: eve_trading_co_proto.Contract.status:type_name -> eve_trading_co_proto.ContractStatus
	1,   // 16: eve_trading_co_proto.Contract.assignee_type:type_name -> eve_trading_co_proto.ContractAssigneeType
	28,  // 17: eve_trading_co_proto.Contract.items:type_name -> eve_trading_co_proto.ContractItem
	29,  // 18: eve_trading_co_proto.BuybackQueueEntry.contract:type_name -> eve_trading_co_proto.Contract
	34,  // 19: eve_trading_co_proto.BuybackQueueEntry.code_appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	34,  // 20: eve_trading_co_proto.BuybackQueueEntry.new_appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	29,  // 21: eve_trading_co_proto.ShopQueueEntry.contract:type_name -> eve_trading_co_proto.Contract
	35,  // 22: eve_trading_co_proto.ShopQueueEntry.code_appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	35,  // 23: eve_trading_co_proto.ShopQueueEntry.new_appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	30,  // 24: eve_trading_co_proto.BuybackQueue.entries:type_name -> eve_trading_co_proto.BuybackQueueEntry
	31,  // 25: eve_trading_co_proto.ShopQueue.entries:type_name -> eve_trading_co_proto.ShopQueueEntry
	21,  // 26: eve_trading_co_proto.ShopQueue.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	25,  // 27: eve_trading_co_proto.BuybackAppraisal.items:type_name -> eve_trading_co_proto.BuybackParentItem
	27,  // 28: eve_trading_co_proto.ShopAppraisal.items:type_name -> eve_trading_co_proto.ShopItem
	10,  // 29: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.types:type_name -> eve_trading_co_proto.BuybackSystemTypeMapsBuilder
	2,   // 30: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 31: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 32: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	11,  // 33: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest.types:type_name -> eve_trading_co_proto.ShopLocationTypeMapsBuilder
	2,   // 34: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 35: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 36: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	14,  // 37: eve_trading_co_proto.CfgMergeBuybackSystemsRequest.systems:type_name -> eve_trading_co_proto.BuybackSystems
	2,   // 38: eve_trading_co_proto.CfgMergeBuybackSystemsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 39: eve_trading_co_proto.CfgMergeBuybackSystemsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 40: eve_trading_co_proto.CfgMergeBuybackSystemsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	15,  // 41: eve_trading_co_proto.CfgMergeShopLocationsRequest.locations:type_name -> eve_trading_co_proto.ShopLocations
	2,   // 42: eve_trading_co_proto.CfgMergeShopLocationsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 43: eve_trading_co_proto.CfgMergeShopLocationsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 44: eve_trading_co_proto.CfgMergeShopLocationsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	17,  // 45: eve_trading_co_proto.CfgMergeMarketsRequest.markets:type_name -> eve_trading_co_proto.Markets
	2,   // 46: eve_trading_co_proto.CfgMergeMarketsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 47: eve_trading_co_proto.CfgMergeMarketsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 48: eve_trading_co_proto.CfgMergeMarketsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	18,  // 49: eve_trading_co_proto.CfgSetAuthListRequest.auth_list:type_name -> eve_trading_co_proto.AuthList
	2,   // 50: eve_trading_co_proto.CfgSetAuthListRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 51: eve_trading_co_proto.CfgSetAuthListResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 52: eve_trading_co_proto.CfgSetAuthListResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 53: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	10,  // 54: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.types:type_name -> eve_trading_co_proto.BuybackSystemTypeMapsBuilder
	3,   // 55: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 56: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 57: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	11,  // 58: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.types:type_name -> eve_trading_co_proto.ShopLocationTypeMapsBuilder
	3,   // 59: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 60: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 61: eve_trading_co_proto.CfgGetBuybackSystemsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	14,  // 62: eve_trading_co_proto.CfgGetBuybackSystemsResponse.systems:type_name -> eve_trading_co_proto.BuybackSystems
	3,   // 63: eve_trading_co_proto.CfgGetBuybackSystemsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 64: eve_trading_co_proto.CfgGetBuybackSystemsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 65: eve_trading_co_proto.CfgGetShopLocationsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	15,  // 66: eve_trading_co_proto.CfgGetShopLocationsResponse.locations:type_name -> eve_trading_co_proto.ShopLocations
	3,   // 67: eve_trading_co_proto.CfgGetShopLocationsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 68: eve_trading_co_proto.CfgGetShopLocationsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 69: eve_trading_co_proto.CfgGetMarketsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	17,  // 70: eve_trading_co_proto.CfgGetMarketsResponse.markets:type_name -> eve_trading_co_proto.Markets
	3,   // 71: eve_trading_co_proto.CfgGetMarketsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 72: eve_trading_co_proto.CfgGetMarketsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 73: eve_trading_co_proto.CfgGetAuthListRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	18,  // 74: eve_trading_co_proto.CfgGetAuthListResponse.auth_list:type_name -> eve_trading_co_proto.AuthList
	3,   // 75: eve_trading_co_proto.CfgGetAuthListResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 76: eve_trading_co_proto.CfgGetAuthListResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 77: eve_trading_co_proto.NewBuybackAppraisalRequest.items:type_name -> eve_trading_co_proto.BasicItem
	19,  // 78: eve_trading_co_proto.NewBuybackAppraisalRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 79: eve_trading_co_proto.NewBuybackAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	34,  // 80: eve_trading_co_proto.NewBuybackAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	21,  // 81: eve_trading_co_proto.NewBuybackAppraisalResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	3,   // 82: eve_trading_co_proto.NewBuybackAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 83: eve_trading_co_proto.NewBuybackAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 84: eve_trading_co_proto.NewShopAppraisalRequest.items:type_name -> eve_trading_co_proto.BasicItem
	19,  // 85: eve_trading_co_proto.NewShopAppraisalRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	35,  // 86: eve_trading_co_proto.NewShopAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	20,  // 87: eve_trading_co_proto.NewShopAppraisalResponse.naming:type_name -> eve_trading_co_proto.TypeNamingIndexes
	4,   // 88: eve_trading_co_proto.NewShopAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 89: eve_trading_co_proto.GetBuybackAppraisalRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 90: eve_trading_co_proto.GetBuybackAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	34,  // 91: eve_trading_co_proto.GetBuybackAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	20,  // 92: eve_trading_co_proto.GetBuybackAppraisalResponse.naming:type_name -> eve_trading_co_proto.TypeNamingIndexes
	3,   // 93: eve_trading_co_proto.GetBuybackAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 94: eve_trading_co_proto.GetBuybackAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 95: eve_trading_co_proto.GetShopAppraisalRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 96: eve_trading_co_proto.GetShopAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	35,  // 97: eve_trading_co_proto.GetShopAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	3,   // 98: eve_trading_co_proto.GetShopAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 99: eve_trading_co_proto.GetShopAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 100: eve_trading_co_proto.StatusBuybackAppraisalRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 101: eve_trading_co_proto.StatusBuybackAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	29,  // 102: eve_trading_co_proto.StatusBuybackAppraisalResponse.contract:type_name -> eve_trading_co_proto.Contract
	21,  // 103: eve_trading_co_proto.StatusBuybackAppraisalResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	3,   // 104: eve_trading_co_proto.StatusBuybackAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 105: eve_trading_co_proto.StatusBuybackAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 106: eve_trading_co_proto.StatusShopAppraisalRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 107: eve_trading_co_proto.StatusShopAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	29,  // 108: eve_trading_co_proto.StatusShopAppraisalResponse.contract:type_name -> eve_trading_co_proto.Contract
	21,  // 109: eve_trading_co_proto.StatusShopAppraisalResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	3,   // 110: eve_trading_co_proto.StatusShopAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 111: eve_trading_co_proto.StatusShopAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 112: eve_trading_co_proto.ShopPurchasableRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 113: eve_trading_co_proto.ShopPurchasableRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	27,  // 114: eve_trading_co_proto.ShopPurchasableResponse.items:type_name -> eve_trading_co_proto.ShopItem
	21,  // 115: eve_trading_co_proto.ShopPurchasableResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	3,   // 116: eve_trading_co_proto.ShopPurchasableResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 117: eve_trading_co_proto.ShopPurchasableResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 118: eve_trading_co_proto.ShopMakePurchaseRequest.items:type_name -> eve_trading_co_proto.BasicItem
	19,  // 119: eve_trading_co_proto.ShopMakePurchaseRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 120: eve_trading_co_proto.ShopMakePurchaseRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	35,  // 121: eve_trading_co_proto.ShopMakePurchaseResponse.appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	21,  // 122: eve_trading_co_proto.ShopMakePurchaseResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	3,   // 123: eve_trading_co_proto.ShopMakePurchaseResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 124: eve_trading_co_proto.ShopMakePurchaseResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 125: eve_trading_co_proto.UserDataRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 126: eve_trading_co_proto.UserDataResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 127: eve_trading_co_proto.UserDataResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 128: eve_trading_co_proto.ShopQueueRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 129: eve_trading_co_proto.ShopQueueRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	33,  // 130: eve_trading_co_proto.ShopQueueResponse.queue:type_name -> eve_trading_co_proto.ShopQueue
	21,  // 131: eve_trading_co_proto.ShopQueueResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	3,   // 132: eve_trading_co_proto.ShopQueueResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 133: eve_trading_co_proto.ShopQueueResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 134: eve_trading_co_proto.BuybackQueueRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	2,   // 135: eve_trading_co_proto.BuybackQueueRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	32,  // 136: eve_trading_co_proto.BuybackQueueResponse.queue:type_name -> eve_trading_co_proto.BuybackQueue
	21,  // 137: eve_trading_co_proto.BuybackQueueResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	3,   // 138: eve_trading_co_proto.BuybackQueueResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 139: eve_trading_co_proto.BuybackQueueResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 140: eve_trading_co_proto.ShopCancelPurchaseRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 141: eve_trading_co_proto.ShopCancelPurchaseResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 142: eve_trading_co_proto.ShopCancelPurchaseResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	2,   // 143: eve_trading_co_proto.ShopCancelPurchasesRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 144: eve_trading_co_proto.ShopCancelPurchasesResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	4,   // 145: eve_trading_co_proto.ShopCancelPurchasesResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	24,  // 146: eve_trading_co_proto.ParseResponse.known_items:type_name -> eve_trading_co_proto.NamedBasicItem
	24,  // 147: eve_trading_co_proto.ParseResponse.unknown_items:type_name -> eve_trading_co_proto.NamedBasicItem
	4,   // 148: eve_trading_co_proto.ParseResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 149: eve_trading_co_proto.SDETypeDataRequest.include_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	22,  // 150: eve_trading_co_proto.SDETypeDataResponse.types:type_name -> eve_trading_co_proto.NamedType
	21,  // 151: eve_trading_co_proto.SDETypeDataResponse.naming:type_name -> eve_trading_co_proto.TypeNamingLists
	4,   // 152: eve_trading_co_proto.SDETypeDataResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	6,   // 153: eve_trading_co_proto.BuybackSystemTypeBundle.InnerEntry.value:type_name -> eve_trading_co_proto.BuybackTypePricing
	7,   // 154: eve_trading_co_proto.ShopLocationTypeBundle.InnerEntry.value:type_name -> eve_trading_co_proto.ShopTypePricing
	8,   // 155: eve_trading_co_proto.BuybackSystemTypeMapsBuilder.InnerEntry.value:type_name -> eve_trading_co_proto.BuybackSystemTypeBundle
	9,   // 156: eve_trading_co_proto.ShopLocationTypeMapsBuilder.InnerEntry.value:type_name -> eve_trading_co_proto.ShopLocationTypeBundle
	12,  // 157: eve_trading_co_proto.BuybackSystems.InnerEntry.value:type_name -> eve_trading_co_proto.BuybackSystem
	13,  // 158: eve_trading_co_proto.ShopLocations.InnerEntry.value:type_name -> eve_trading_co_proto.ShopLocation
	16,  // 159: eve_trading_co_proto.Markets.InnerEntry.value:type_name -> eve_trading_co_proto.Market
	88,  // 160: eve_trading_co_proto.EveTradingCo.SDETypeData:input_type -> eve_trading_co_proto.SDETypeDataRequest
	78,  // 161: eve_trading_co_proto.EveTradingCo.ShopQueue:input_type -> eve_trading_co_proto.ShopQueueRequest
	80,  // 162: eve_trading_co_proto.EveTradingCo.BuybackQueue:input_type -> eve_trading_co_proto.BuybackQueueRequest
	58,  // 163: eve_trading_co_proto.EveTradingCo.CfgGetAuthList:input_type -> eve_trading_co_proto.CfgGetAuthListRequest
	48,  // 164: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystemTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderRequest
	50,  // 165: eve_trading_co_proto.EveTradingCo.CfgGetShopLocationTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderRequest
	52,  // 166: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystems:input_type -> eve_trading_co_proto.CfgGetBuybackSystemsRequest
	54,  // 167: eve_trading_co_proto.EveTradingCo.CfgGetShopLocations:input_type -> eve_trading_co_proto.CfgGetShopLocationsRequest
	56,  // 168: eve_trading_co_proto.EveTradingCo.CfgGetMarkets:input_type -> eve_trading_co_proto.CfgGetMarketsRequest
	46,  // 169: eve_trading_co_proto.EveTradingCo.CfgSetAuthList:input_type -> eve_trading_co_proto.CfgSetAuthListRequest
	36,  // 170: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystemTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest
	38,  // 171: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocationTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest
	40,  // 172: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystems:input_type -> eve_trading_co_proto.CfgMergeBuybackSystemsRequest
	42,  // 173: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocations:input_type -> eve_trading_co_proto.CfgMergeShopLocationsRequest
	44,  // 174: eve_trading_co_proto.EveTradingCo.CfgMergeMarkets:input_type -> eve_trading_co_proto.CfgMergeMarketsRequest
	84,  // 175: eve_trading_co_proto.EveTradingCo.ShopCancelPurchases:input_type -> eve_trading_co_proto.ShopCancelPurchasesRequest
	62,  // 176: eve_trading_co_proto.EveTradingCo.NewShopAppraisal:input_type -> eve_trading_co_proto.NewShopAppraisalRequest
	86,  // 177: eve_trading_co_proto.EveTradingCo.Parse:input_type -> eve_trading_co_proto.ParseRequest
	60,  // 178: eve_trading_co_proto.EveTradingCo.NewBuybackAppraisal:input_type -> eve_trading_co_proto.NewBuybackAppraisalRequest
	76,  // 179: eve_trading_co_proto.EveTradingCo.UserData:input_type -> eve_trading_co_proto.UserDataRequest
	72,  // 180: eve_trading_co_proto.EveTradingCo.ShopPurchasable:input_type -> eve_trading_co_proto.ShopPurchasableRequest
	74,  // 181: eve_trading_co_proto.EveTradingCo.ShopMakePurchase:input_type -> eve_trading_co_proto.ShopMakePurchaseRequest
	82,  // 182: eve_trading_co_proto.EveTradingCo.ShopCancelPurchase:input_type -> eve_trading_co_proto.ShopCancelPurchaseRequest
	64,  // 183: eve_trading_co_proto.EveTradingCo.GetBuybackAppraisal:input_type -> eve_trading_co_proto.GetBuybackAppraisalRequest
	66,  // 184: eve_trading_co_proto.EveTradingCo.GetShopAppraisal:input_type -> eve_trading_co_proto.GetShopAppraisalRequest
	68,  // 185: eve_trading_co_proto.EveTradingCo.StatusBuybackAppraisal:input_type -> eve_trading_co_proto.StatusBuybackAppraisalRequest
	70,  // 186: eve_trading_co_proto.EveTradingCo.StatusShopAppraisal:input_type -> eve_trading_co_proto.StatusShopAppraisalRequest
	89,  // 187: eve_trading_co_proto.EveTradingCo.SDETypeData:output_type -> eve_trading_co_proto.SDETypeDataResponse
	79,  // 188: eve_trading_co_proto.EveTradingCo.ShopQueue:output_type -> eve_trading_co_proto.ShopQueueResponse
	81,  // 189: eve_trading_co_proto.EveTradingCo.BuybackQueue:output_type -> eve_trading_co_proto.BuybackQueueResponse
	59,  // 190: eve_trading_co_proto.EveTradingCo.CfgGetAuthList:output_type -> eve_trading_co_proto.CfgGetAuthListResponse
	49,  // 191: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystemTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse
	51,  // 192: eve_trading_co_proto.EveTradingCo.CfgGetShopLocationTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse
	53,  // 193: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystems:output_type -> eve_trading_co_proto.CfgGetBuybackSystemsResponse
	55,  // 194: eve_trading_co_proto.EveTradingCo.CfgGetShopLocations:output_type -> eve_trading_co_proto.CfgGetShopLocationsResponse
	57,  // 195: eve_trading_co_proto.EveTradingCo.CfgGetMarkets:output_type -> eve_trading_co_proto.CfgGetMarketsResponse
	47,  // 196: eve_trading_co_proto.EveTradingCo.CfgSetAuthList:output_type -> eve_trading_co_proto.CfgSetAuthListResponse
	37,  // 197: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystemTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse
	39,  // 198: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocationTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse
	41,  // 199: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystems:output_type -> eve_trading_co_proto.CfgMergeBuybackSystemsResponse
	43,  // 200: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocations:output_type -> eve_trading_co_proto.CfgMergeShopLocationsResponse
	45,  // 201: eve_trading_co_proto.EveTradingCo.CfgMergeMarkets:output_type -> eve_trading_co_proto.CfgMergeMarketsResponse
	85,  // 202: eve_trading_co_proto.EveTradingCo.ShopCancelPurchases:output_type -> eve_trading_co_proto.ShopCancelPurchasesResponse
	63,  // 203: eve_trading_co_proto.EveTradingCo.NewShopAppraisal:output_type -> eve_trading_co_proto.NewShopAppraisalResponse
	87,  // 204: eve_trading_co_proto.EveTradingCo.Parse:output_type -> eve_trading_co_proto.ParseResponse
	61,  // 205: eve_trading_co_proto.EveTradingCo.NewBuybackAppraisal:output_type -> eve_trading_co_proto.NewBuybackAppraisalResponse
	77,  // 206: eve_trading_co_proto.EveTradingCo.UserData:output_type -> eve_trading_co_proto.UserDataResponse
	73,  // 207: eve_trading_co_proto.EveTradingCo.ShopPurchasable:output_type -> eve_trading_co_proto.ShopPurchasableResponse
	75,  // 208: eve_trading_co_proto.EveTradingCo.ShopMakePurchase:output_type -> eve_trading_co_proto.ShopMakePurchaseResponse
	83,  // 209: eve_trading_co_proto.EveTradingCo.ShopCancelPurchase:output_type -> eve_trading_co_proto.ShopCancelPurchaseResponse
	65,  // 210: eve_trading_co_proto.EveTradingCo.GetBuybackAppraisal:output_type -> eve_trading_co_proto.GetBuybackAppraisalResponse
	67,  // 211: eve_trading_co_proto.EveTradingCo.GetShopAppraisal:output_type -> eve_trading_co_proto.GetShopAppraisalResponse
	69,  // 212: eve_trading_co_proto.EveTradingCo.StatusBuybackAppraisal:output_type -> eve_trading_co_proto.StatusBuybackAppraisalResponse
	71,  // 213: eve_trading_co_proto.EveTradingCo.StatusShopAppraisal:output_type -> eve_trading_co_proto.StatusShopAppraisalResponse
	187, // [187:214] is the sub-list for method output_type
	160, // [160:187] is the sub-list for method input_type
	160, // [160:160] is the sub-list for extension type_name
	160, // [160:160] is the sub-list for extension extendee
	0,   // [0:160] is the sub-list for field type_name
}

func init() { file_etco_proto_init() }
func file_etco_proto_init() {
	if File_etco_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_etco_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackSystemTypeBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocationTypeBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackSystemTypeMapsBuilder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocationTypeMapsBuilder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackSystems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Market); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Markets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncludeTypeNaming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeNamingIndexes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeNamingLists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedBasicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackParentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackChildItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackAppraisal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopAppraisal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgSetAuthListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgSetAuthListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetAuthListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetAuthListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBuybackAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewShopAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuybackAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusBuybackAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusBuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusShopAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchasableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchasableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopMakePurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopMakePurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDETypeDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDETypeDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_etco_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   95,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_etco_proto_goTypes,
		DependencyIndexes: file_etco_proto_depIdxs,
		EnumInfos:         file_etco_proto_enumTypes,
		MessageInfos:      file_etco_proto_msgTypes,
	}.Build()
	File_etco_proto = out.File
	file_etco_proto_rawDesc = nil
	file_etco_proto_goTypes = nil
	file_etco_proto_depIdxs = nil
}
