// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.22.0
// source: etco.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EveTradingCoClient is the client API for EveTradingCo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EveTradingCoClient interface {
	// every published type with a market group
	AllTypes(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TypesResponse, error)
	AllNamedTypes(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NamedTypesResponse, error)
	// requested published types with a market group
	NamedTypes(ctx context.Context, in *NamedTypesRequest, opts ...grpc.CallOption) (*NamedTypesResponse, error)
	// every available buyback system
	AllBuybackSystems(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemsResponse, error)
	// every system
	AllSystems(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemsResponse, error)
	// requested systems
	Systems(ctx context.Context, in *SystemsRequest, opts ...grpc.CallOption) (*SystemsResponse, error)
	// every haul route
	AllHaulRoutes(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*HaulRoutesResponse, error)
	// every available shop location
	AllShopLocations(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllShopLocationsResponse, error)
	// requested locations
	Locations(ctx context.Context, in *LocationsRequest, opts ...grpc.CallOption) (*LocationsResponse, error)
	// logs into the requested app (users will only ever use the Auth app)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// parses an input string into a list of named basic items
	Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error)
	// retrieves information about the given entity
	CharacterInfo(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*CharacterInfoResponse, error)
	CorporationInfo(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*CorporationInfoResponse, error)
	AllianceInfo(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*AllianceInfoResponse, error)
	// creates a new appraisal that is not saved and will not be retrievable later
	NewBuybackAppraisal(ctx context.Context, in *NewAppraisalRequest, opts ...grpc.CallOption) (*BuybackAppraisalResponse, error)
	NewShopAppraisal(ctx context.Context, in *NewAppraisalRequest, opts ...grpc.CallOption) (*ShopAppraisalResponse, error)
	NewHaulAppraisal(ctx context.Context, in *NewHaulAppraisalRequest, opts ...grpc.CallOption) (*HaulAppraisalResponse, error)
	// retrieves info about the character associated with the given token + app
	TokenInfo(ctx context.Context, in *TokenInfoRequest, opts ...grpc.CallOption) (*TokenInfoResponse, error)
	// retrieves the contract queue (appraisal codes with an extant contract)
	BuybackContractQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*BuybackContractQueueResponse, error)
	ShopContractQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*ShopContractQueueResponse, error)
	HaulContractQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*HaulContractQueueResponse, error)
	// retrieves the purchase queue (appraisal codes in the purchase queue with no contract)
	PurchaseQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*PurchaseQueueResponse, error)
	// retrieves the purchase queue for the specified location
	LocationPurchaseQueue(ctx context.Context, in *LocationPurchaseQueueRequest, opts ...grpc.CallOption) (*LocationPurchaseQueueResponse, error)
	// deletes the specified codes from the purchase queue
	DeletePurchases(ctx context.Context, in *DeletePurchasesRequest, opts ...grpc.CallOption) (*DeletePurchasesResponse, error)
	// cancels an existing purchase order
	// admin should use DeletePurchases instead
	CancelPurchase(ctx context.Context, in *CancelPurchaseRequest, opts ...grpc.CallOption) (*CancelPurchaseResponse, error)
	// retrieves the appraisal codes for the given character
	UserBuybackAppraisalCodes(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserAppraisalCodesResponse, error)
	UserShopAppraisalCodes(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserAppraisalCodesResponse, error)
	UserHaulAppraisalCodes(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserAppraisalCodesResponse, error)
	// retrieves the time of the last action for the given character
	UserMadePurchase(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserTimePurchaseResponse, error)
	UserCancelledPurchase(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserTimePurchaseResponse, error)
	// creates a new appraisal that is saved and will be retrievable later
	SaveBuybackAppraisal(ctx context.Context, in *SaveAppraisalRequest, opts ...grpc.CallOption) (*BuybackAppraisalResponse, error)
	SaveShopAppraisal(ctx context.Context, in *SaveAppraisalRequest, opts ...grpc.CallOption) (*ShopAppraisalResponse, error)
	SaveHaulAppraisal(ctx context.Context, in *SaveHaulAppraisalRequest, opts ...grpc.CallOption) (*HaulAppraisalResponse, error)
	// retrieves the available purchasable items for the given location
	ShopInventory(ctx context.Context, in *ShopInventoryRequest, opts ...grpc.CallOption) (*ShopInventoryResponse, error)
	// retrieves the current status of the appraisal
	StatusBuybackAppraisal(ctx context.Context, in *StatusAppraisalRequest, opts ...grpc.CallOption) (*StatusAppraisalResponse, error)
	StatusShopAppraisal(ctx context.Context, in *StatusAppraisalRequest, opts ...grpc.CallOption) (*StatusAppraisalResponse, error)
	StatusHaulAppraisal(ctx context.Context, in *StatusAppraisalRequest, opts ...grpc.CallOption) (*StatusAppraisalResponse, error)
	// retrieves the appraisal for the given code
	GetBuybackAppraisal(ctx context.Context, in *GetAppraisalRequest, opts ...grpc.CallOption) (*GetBuybackAppraisalResponse, error)
	GetShopAppraisal(ctx context.Context, in *GetAppraisalRequest, opts ...grpc.CallOption) (*GetShopAppraisalResponse, error)
	GetHaulAppraisal(ctx context.Context, in *GetAppraisalRequest, opts ...grpc.CallOption) (*GetHaulAppraisalResponse, error)
	// Get the requested config data
	CfgGetUserAuthList(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error)
	CfgGetAdminAuthList(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error)
	CfgGetBuybackSystemTypeMapsBuilder(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error)
	CfgGetShopLocationTypeMapsBuilder(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetShopLocationTypeMapsBuilderResponse, error)
	CfgGetHaulRouteTypeMapsBuilder(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetHaulRouteTypeMapsBuilderResponse, error)
	CfgGetBuybackSystems(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemsResponse, error)
	CfgGetShopLocations(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetShopLocationsResponse, error)
	CfgGetHaulRoutes(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetHaulRoutesResponse, error)
	CfgGetMarkets(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetMarketsResponse, error)
	CfgGetMarketNames(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetMarketNamesResponse, error)
	CfgGetBuybackBundleKeys(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetBuybackBundleKeysResponse, error)
	CfgGetShopBundleKeys(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetShopBundleKeysResponse, error)
	CfgGetHaulBundleKeys(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetHaulBundleKeysResponse, error)
	CfgGetConstData(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetConstDataResponse, error)
	// Replace existing config data with the given config data
	CfgSetUserAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgSetAdminAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgSetConstData(ctx context.Context, in *CfgSetConstDataRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	// Merge the given config data into the existing config data
	CfgMergeBuybackSystemTypeMapsBuilder(ctx context.Context, in *CfgMergeBuybackSystemTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgMergeShopLocationTypeMapsBuilder(ctx context.Context, in *CfgMergeShopLocationTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgMergeHaulRouteTypeMapsBuilder(ctx context.Context, in *CfgMergeHaulRouteTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgMergeBuybackSystems(ctx context.Context, in *CfgMergeBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgMergeShopLocations(ctx context.Context, in *CfgMergeShopLocationsRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgMergeHaulRoutes(ctx context.Context, in *CfgMergeHaulRoutesRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
	CfgMergeMarkets(ctx context.Context, in *CfgMergeMarketsRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error)
}

type eveTradingCoClient struct {
	cc grpc.ClientConnInterface
}

func NewEveTradingCoClient(cc grpc.ClientConnInterface) EveTradingCoClient {
	return &eveTradingCoClient{cc}
}

func (c *eveTradingCoClient) AllTypes(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TypesResponse, error) {
	out := new(TypesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/AllTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AllNamedTypes(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NamedTypesResponse, error) {
	out := new(NamedTypesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/AllNamedTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NamedTypes(ctx context.Context, in *NamedTypesRequest, opts ...grpc.CallOption) (*NamedTypesResponse, error) {
	out := new(NamedTypesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/NamedTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AllBuybackSystems(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemsResponse, error) {
	out := new(SystemsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/AllBuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AllSystems(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemsResponse, error) {
	out := new(SystemsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/AllSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) Systems(ctx context.Context, in *SystemsRequest, opts ...grpc.CallOption) (*SystemsResponse, error) {
	out := new(SystemsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/Systems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AllHaulRoutes(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*HaulRoutesResponse, error) {
	out := new(HaulRoutesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/AllHaulRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AllShopLocations(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllShopLocationsResponse, error) {
	out := new(AllShopLocationsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/AllShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) Locations(ctx context.Context, in *LocationsRequest, opts ...grpc.CallOption) (*LocationsResponse, error) {
	out := new(LocationsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/Locations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error) {
	out := new(ParseResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/Parse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CharacterInfo(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*CharacterInfoResponse, error) {
	out := new(CharacterInfoResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CharacterInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CorporationInfo(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*CorporationInfoResponse, error) {
	out := new(CorporationInfoResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CorporationInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AllianceInfo(ctx context.Context, in *EntityInfoRequest, opts ...grpc.CallOption) (*AllianceInfoResponse, error) {
	out := new(AllianceInfoResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/AllianceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NewBuybackAppraisal(ctx context.Context, in *NewAppraisalRequest, opts ...grpc.CallOption) (*BuybackAppraisalResponse, error) {
	out := new(BuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/NewBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NewShopAppraisal(ctx context.Context, in *NewAppraisalRequest, opts ...grpc.CallOption) (*ShopAppraisalResponse, error) {
	out := new(ShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/NewShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NewHaulAppraisal(ctx context.Context, in *NewHaulAppraisalRequest, opts ...grpc.CallOption) (*HaulAppraisalResponse, error) {
	out := new(HaulAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/NewHaulAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) TokenInfo(ctx context.Context, in *TokenInfoRequest, opts ...grpc.CallOption) (*TokenInfoResponse, error) {
	out := new(TokenInfoResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/TokenInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) BuybackContractQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*BuybackContractQueueResponse, error) {
	out := new(BuybackContractQueueResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/BuybackContractQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopContractQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*ShopContractQueueResponse, error) {
	out := new(ShopContractQueueResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/ShopContractQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) HaulContractQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*HaulContractQueueResponse, error) {
	out := new(HaulContractQueueResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/HaulContractQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) PurchaseQueue(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*PurchaseQueueResponse, error) {
	out := new(PurchaseQueueResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/PurchaseQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) LocationPurchaseQueue(ctx context.Context, in *LocationPurchaseQueueRequest, opts ...grpc.CallOption) (*LocationPurchaseQueueResponse, error) {
	out := new(LocationPurchaseQueueResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/LocationPurchaseQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) DeletePurchases(ctx context.Context, in *DeletePurchasesRequest, opts ...grpc.CallOption) (*DeletePurchasesResponse, error) {
	out := new(DeletePurchasesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/DeletePurchases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CancelPurchase(ctx context.Context, in *CancelPurchaseRequest, opts ...grpc.CallOption) (*CancelPurchaseResponse, error) {
	out := new(CancelPurchaseResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CancelPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) UserBuybackAppraisalCodes(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserAppraisalCodesResponse, error) {
	out := new(UserAppraisalCodesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/UserBuybackAppraisalCodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) UserShopAppraisalCodes(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserAppraisalCodesResponse, error) {
	out := new(UserAppraisalCodesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/UserShopAppraisalCodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) UserHaulAppraisalCodes(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserAppraisalCodesResponse, error) {
	out := new(UserAppraisalCodesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/UserHaulAppraisalCodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) UserMadePurchase(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserTimePurchaseResponse, error) {
	out := new(UserTimePurchaseResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/UserMadePurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) UserCancelledPurchase(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserTimePurchaseResponse, error) {
	out := new(UserTimePurchaseResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/UserCancelledPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) SaveBuybackAppraisal(ctx context.Context, in *SaveAppraisalRequest, opts ...grpc.CallOption) (*BuybackAppraisalResponse, error) {
	out := new(BuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/SaveBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) SaveShopAppraisal(ctx context.Context, in *SaveAppraisalRequest, opts ...grpc.CallOption) (*ShopAppraisalResponse, error) {
	out := new(ShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/SaveShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) SaveHaulAppraisal(ctx context.Context, in *SaveHaulAppraisalRequest, opts ...grpc.CallOption) (*HaulAppraisalResponse, error) {
	out := new(HaulAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/SaveHaulAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopInventory(ctx context.Context, in *ShopInventoryRequest, opts ...grpc.CallOption) (*ShopInventoryResponse, error) {
	out := new(ShopInventoryResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/ShopInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) StatusBuybackAppraisal(ctx context.Context, in *StatusAppraisalRequest, opts ...grpc.CallOption) (*StatusAppraisalResponse, error) {
	out := new(StatusAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/StatusBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) StatusShopAppraisal(ctx context.Context, in *StatusAppraisalRequest, opts ...grpc.CallOption) (*StatusAppraisalResponse, error) {
	out := new(StatusAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/StatusShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) StatusHaulAppraisal(ctx context.Context, in *StatusAppraisalRequest, opts ...grpc.CallOption) (*StatusAppraisalResponse, error) {
	out := new(StatusAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/StatusHaulAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) GetBuybackAppraisal(ctx context.Context, in *GetAppraisalRequest, opts ...grpc.CallOption) (*GetBuybackAppraisalResponse, error) {
	out := new(GetBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/GetBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) GetShopAppraisal(ctx context.Context, in *GetAppraisalRequest, opts ...grpc.CallOption) (*GetShopAppraisalResponse, error) {
	out := new(GetShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/GetShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) GetHaulAppraisal(ctx context.Context, in *GetAppraisalRequest, opts ...grpc.CallOption) (*GetHaulAppraisalResponse, error) {
	out := new(GetHaulAppraisalResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/GetHaulAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetUserAuthList(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error) {
	out := new(CfgGetAuthListResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetUserAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetAdminAuthList(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error) {
	out := new(CfgGetAuthListResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetAdminAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackSystemTypeMapsBuilder(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error) {
	out := new(CfgGetBuybackSystemTypeMapsBuilderResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetBuybackSystemTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopLocationTypeMapsBuilder(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetShopLocationTypeMapsBuilderResponse, error) {
	out := new(CfgGetShopLocationTypeMapsBuilderResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetShopLocationTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetHaulRouteTypeMapsBuilder(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetHaulRouteTypeMapsBuilderResponse, error) {
	out := new(CfgGetHaulRouteTypeMapsBuilderResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetHaulRouteTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackSystems(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemsResponse, error) {
	out := new(CfgGetBuybackSystemsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetBuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopLocations(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetShopLocationsResponse, error) {
	out := new(CfgGetShopLocationsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetHaulRoutes(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetHaulRoutesResponse, error) {
	out := new(CfgGetHaulRoutesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetHaulRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetMarkets(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetMarketsResponse, error) {
	out := new(CfgGetMarketsResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetMarketNames(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetMarketNamesResponse, error) {
	out := new(CfgGetMarketNamesResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetMarketNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackBundleKeys(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetBuybackBundleKeysResponse, error) {
	out := new(CfgGetBuybackBundleKeysResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetBuybackBundleKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopBundleKeys(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetShopBundleKeysResponse, error) {
	out := new(CfgGetShopBundleKeysResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetShopBundleKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetHaulBundleKeys(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetHaulBundleKeysResponse, error) {
	out := new(CfgGetHaulBundleKeysResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetHaulBundleKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetConstData(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*CfgGetConstDataResponse, error) {
	out := new(CfgGetConstDataResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgGetConstData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgSetUserAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgSetUserAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgSetAdminAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgSetAdminAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgSetConstData(ctx context.Context, in *CfgSetConstDataRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgSetConstData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeBuybackSystemTypeMapsBuilder(ctx context.Context, in *CfgMergeBuybackSystemTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgMergeBuybackSystemTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeShopLocationTypeMapsBuilder(ctx context.Context, in *CfgMergeShopLocationTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgMergeShopLocationTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeHaulRouteTypeMapsBuilder(ctx context.Context, in *CfgMergeHaulRouteTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgMergeHaulRouteTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeBuybackSystems(ctx context.Context, in *CfgMergeBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgMergeBuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeShopLocations(ctx context.Context, in *CfgMergeShopLocationsRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgMergeShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeHaulRoutes(ctx context.Context, in *CfgMergeHaulRoutesRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgMergeHaulRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeMarkets(ctx context.Context, in *CfgMergeMarketsRequest, opts ...grpc.CallOption) (*CfgUpdateResponse, error) {
	out := new(CfgUpdateResponse)
	err := c.cc.Invoke(ctx, "/etco_proto.EveTradingCo/CfgMergeMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EveTradingCoServer is the server API for EveTradingCo service.
// All implementations should embed UnimplementedEveTradingCoServer
// for forward compatibility
type EveTradingCoServer interface {
	// every published type with a market group
	AllTypes(context.Context, *EmptyRequest) (*TypesResponse, error)
	AllNamedTypes(context.Context, *EmptyRequest) (*NamedTypesResponse, error)
	// requested published types with a market group
	NamedTypes(context.Context, *NamedTypesRequest) (*NamedTypesResponse, error)
	// every available buyback system
	AllBuybackSystems(context.Context, *EmptyRequest) (*SystemsResponse, error)
	// every system
	AllSystems(context.Context, *EmptyRequest) (*SystemsResponse, error)
	// requested systems
	Systems(context.Context, *SystemsRequest) (*SystemsResponse, error)
	// every haul route
	AllHaulRoutes(context.Context, *EmptyRequest) (*HaulRoutesResponse, error)
	// every available shop location
	AllShopLocations(context.Context, *EmptyRequest) (*AllShopLocationsResponse, error)
	// requested locations
	Locations(context.Context, *LocationsRequest) (*LocationsResponse, error)
	// logs into the requested app (users will only ever use the Auth app)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// parses an input string into a list of named basic items
	Parse(context.Context, *ParseRequest) (*ParseResponse, error)
	// retrieves information about the given entity
	CharacterInfo(context.Context, *EntityInfoRequest) (*CharacterInfoResponse, error)
	CorporationInfo(context.Context, *EntityInfoRequest) (*CorporationInfoResponse, error)
	AllianceInfo(context.Context, *EntityInfoRequest) (*AllianceInfoResponse, error)
	// creates a new appraisal that is not saved and will not be retrievable later
	NewBuybackAppraisal(context.Context, *NewAppraisalRequest) (*BuybackAppraisalResponse, error)
	NewShopAppraisal(context.Context, *NewAppraisalRequest) (*ShopAppraisalResponse, error)
	NewHaulAppraisal(context.Context, *NewHaulAppraisalRequest) (*HaulAppraisalResponse, error)
	// retrieves info about the character associated with the given token + app
	TokenInfo(context.Context, *TokenInfoRequest) (*TokenInfoResponse, error)
	// retrieves the contract queue (appraisal codes with an extant contract)
	BuybackContractQueue(context.Context, *BasicRequest) (*BuybackContractQueueResponse, error)
	ShopContractQueue(context.Context, *BasicRequest) (*ShopContractQueueResponse, error)
	HaulContractQueue(context.Context, *BasicRequest) (*HaulContractQueueResponse, error)
	// retrieves the purchase queue (appraisal codes in the purchase queue with no contract)
	PurchaseQueue(context.Context, *BasicRequest) (*PurchaseQueueResponse, error)
	// retrieves the purchase queue for the specified location
	LocationPurchaseQueue(context.Context, *LocationPurchaseQueueRequest) (*LocationPurchaseQueueResponse, error)
	// deletes the specified codes from the purchase queue
	DeletePurchases(context.Context, *DeletePurchasesRequest) (*DeletePurchasesResponse, error)
	// cancels an existing purchase order
	// admin should use DeletePurchases instead
	CancelPurchase(context.Context, *CancelPurchaseRequest) (*CancelPurchaseResponse, error)
	// retrieves the appraisal codes for the given character
	UserBuybackAppraisalCodes(context.Context, *UserDataRequest) (*UserAppraisalCodesResponse, error)
	UserShopAppraisalCodes(context.Context, *UserDataRequest) (*UserAppraisalCodesResponse, error)
	UserHaulAppraisalCodes(context.Context, *UserDataRequest) (*UserAppraisalCodesResponse, error)
	// retrieves the time of the last action for the given character
	UserMadePurchase(context.Context, *UserDataRequest) (*UserTimePurchaseResponse, error)
	UserCancelledPurchase(context.Context, *UserDataRequest) (*UserTimePurchaseResponse, error)
	// creates a new appraisal that is saved and will be retrievable later
	SaveBuybackAppraisal(context.Context, *SaveAppraisalRequest) (*BuybackAppraisalResponse, error)
	SaveShopAppraisal(context.Context, *SaveAppraisalRequest) (*ShopAppraisalResponse, error)
	SaveHaulAppraisal(context.Context, *SaveHaulAppraisalRequest) (*HaulAppraisalResponse, error)
	// retrieves the available purchasable items for the given location
	ShopInventory(context.Context, *ShopInventoryRequest) (*ShopInventoryResponse, error)
	// retrieves the current status of the appraisal
	StatusBuybackAppraisal(context.Context, *StatusAppraisalRequest) (*StatusAppraisalResponse, error)
	StatusShopAppraisal(context.Context, *StatusAppraisalRequest) (*StatusAppraisalResponse, error)
	StatusHaulAppraisal(context.Context, *StatusAppraisalRequest) (*StatusAppraisalResponse, error)
	// retrieves the appraisal for the given code
	GetBuybackAppraisal(context.Context, *GetAppraisalRequest) (*GetBuybackAppraisalResponse, error)
	GetShopAppraisal(context.Context, *GetAppraisalRequest) (*GetShopAppraisalResponse, error)
	GetHaulAppraisal(context.Context, *GetAppraisalRequest) (*GetHaulAppraisalResponse, error)
	// Get the requested config data
	CfgGetUserAuthList(context.Context, *BasicRequest) (*CfgGetAuthListResponse, error)
	CfgGetAdminAuthList(context.Context, *BasicRequest) (*CfgGetAuthListResponse, error)
	CfgGetBuybackSystemTypeMapsBuilder(context.Context, *BasicRequest) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error)
	CfgGetShopLocationTypeMapsBuilder(context.Context, *BasicRequest) (*CfgGetShopLocationTypeMapsBuilderResponse, error)
	CfgGetHaulRouteTypeMapsBuilder(context.Context, *BasicRequest) (*CfgGetHaulRouteTypeMapsBuilderResponse, error)
	CfgGetBuybackSystems(context.Context, *BasicRequest) (*CfgGetBuybackSystemsResponse, error)
	CfgGetShopLocations(context.Context, *BasicRequest) (*CfgGetShopLocationsResponse, error)
	CfgGetHaulRoutes(context.Context, *BasicRequest) (*CfgGetHaulRoutesResponse, error)
	CfgGetMarkets(context.Context, *BasicRequest) (*CfgGetMarketsResponse, error)
	CfgGetMarketNames(context.Context, *BasicRequest) (*CfgGetMarketNamesResponse, error)
	CfgGetBuybackBundleKeys(context.Context, *BasicRequest) (*CfgGetBuybackBundleKeysResponse, error)
	CfgGetShopBundleKeys(context.Context, *BasicRequest) (*CfgGetShopBundleKeysResponse, error)
	CfgGetHaulBundleKeys(context.Context, *BasicRequest) (*CfgGetHaulBundleKeysResponse, error)
	CfgGetConstData(context.Context, *BasicRequest) (*CfgGetConstDataResponse, error)
	// Replace existing config data with the given config data
	CfgSetUserAuthList(context.Context, *CfgSetAuthListRequest) (*CfgUpdateResponse, error)
	CfgSetAdminAuthList(context.Context, *CfgSetAuthListRequest) (*CfgUpdateResponse, error)
	CfgSetConstData(context.Context, *CfgSetConstDataRequest) (*CfgUpdateResponse, error)
	// Merge the given config data into the existing config data
	CfgMergeBuybackSystemTypeMapsBuilder(context.Context, *CfgMergeBuybackSystemTypeMapsBuilderRequest) (*CfgUpdateResponse, error)
	CfgMergeShopLocationTypeMapsBuilder(context.Context, *CfgMergeShopLocationTypeMapsBuilderRequest) (*CfgUpdateResponse, error)
	CfgMergeHaulRouteTypeMapsBuilder(context.Context, *CfgMergeHaulRouteTypeMapsBuilderRequest) (*CfgUpdateResponse, error)
	CfgMergeBuybackSystems(context.Context, *CfgMergeBuybackSystemsRequest) (*CfgUpdateResponse, error)
	CfgMergeShopLocations(context.Context, *CfgMergeShopLocationsRequest) (*CfgUpdateResponse, error)
	CfgMergeHaulRoutes(context.Context, *CfgMergeHaulRoutesRequest) (*CfgUpdateResponse, error)
	CfgMergeMarkets(context.Context, *CfgMergeMarketsRequest) (*CfgUpdateResponse, error)
}

// UnimplementedEveTradingCoServer should be embedded to have forward compatible implementations.
type UnimplementedEveTradingCoServer struct {
}

func (UnimplementedEveTradingCoServer) AllTypes(context.Context, *EmptyRequest) (*TypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllTypes not implemented")
}
func (UnimplementedEveTradingCoServer) AllNamedTypes(context.Context, *EmptyRequest) (*NamedTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllNamedTypes not implemented")
}
func (UnimplementedEveTradingCoServer) NamedTypes(context.Context, *NamedTypesRequest) (*NamedTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NamedTypes not implemented")
}
func (UnimplementedEveTradingCoServer) AllBuybackSystems(context.Context, *EmptyRequest) (*SystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllBuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) AllSystems(context.Context, *EmptyRequest) (*SystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllSystems not implemented")
}
func (UnimplementedEveTradingCoServer) Systems(context.Context, *SystemsRequest) (*SystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Systems not implemented")
}
func (UnimplementedEveTradingCoServer) AllHaulRoutes(context.Context, *EmptyRequest) (*HaulRoutesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllHaulRoutes not implemented")
}
func (UnimplementedEveTradingCoServer) AllShopLocations(context.Context, *EmptyRequest) (*AllShopLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) Locations(context.Context, *LocationsRequest) (*LocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Locations not implemented")
}
func (UnimplementedEveTradingCoServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedEveTradingCoServer) Parse(context.Context, *ParseRequest) (*ParseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Parse not implemented")
}
func (UnimplementedEveTradingCoServer) CharacterInfo(context.Context, *EntityInfoRequest) (*CharacterInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CharacterInfo not implemented")
}
func (UnimplementedEveTradingCoServer) CorporationInfo(context.Context, *EntityInfoRequest) (*CorporationInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CorporationInfo not implemented")
}
func (UnimplementedEveTradingCoServer) AllianceInfo(context.Context, *EntityInfoRequest) (*AllianceInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllianceInfo not implemented")
}
func (UnimplementedEveTradingCoServer) NewBuybackAppraisal(context.Context, *NewAppraisalRequest) (*BuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) NewShopAppraisal(context.Context, *NewAppraisalRequest) (*ShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) NewHaulAppraisal(context.Context, *NewHaulAppraisalRequest) (*HaulAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewHaulAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) TokenInfo(context.Context, *TokenInfoRequest) (*TokenInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TokenInfo not implemented")
}
func (UnimplementedEveTradingCoServer) BuybackContractQueue(context.Context, *BasicRequest) (*BuybackContractQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuybackContractQueue not implemented")
}
func (UnimplementedEveTradingCoServer) ShopContractQueue(context.Context, *BasicRequest) (*ShopContractQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopContractQueue not implemented")
}
func (UnimplementedEveTradingCoServer) HaulContractQueue(context.Context, *BasicRequest) (*HaulContractQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HaulContractQueue not implemented")
}
func (UnimplementedEveTradingCoServer) PurchaseQueue(context.Context, *BasicRequest) (*PurchaseQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurchaseQueue not implemented")
}
func (UnimplementedEveTradingCoServer) LocationPurchaseQueue(context.Context, *LocationPurchaseQueueRequest) (*LocationPurchaseQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LocationPurchaseQueue not implemented")
}
func (UnimplementedEveTradingCoServer) DeletePurchases(context.Context, *DeletePurchasesRequest) (*DeletePurchasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePurchases not implemented")
}
func (UnimplementedEveTradingCoServer) CancelPurchase(context.Context, *CancelPurchaseRequest) (*CancelPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelPurchase not implemented")
}
func (UnimplementedEveTradingCoServer) UserBuybackAppraisalCodes(context.Context, *UserDataRequest) (*UserAppraisalCodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserBuybackAppraisalCodes not implemented")
}
func (UnimplementedEveTradingCoServer) UserShopAppraisalCodes(context.Context, *UserDataRequest) (*UserAppraisalCodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserShopAppraisalCodes not implemented")
}
func (UnimplementedEveTradingCoServer) UserHaulAppraisalCodes(context.Context, *UserDataRequest) (*UserAppraisalCodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserHaulAppraisalCodes not implemented")
}
func (UnimplementedEveTradingCoServer) UserMadePurchase(context.Context, *UserDataRequest) (*UserTimePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserMadePurchase not implemented")
}
func (UnimplementedEveTradingCoServer) UserCancelledPurchase(context.Context, *UserDataRequest) (*UserTimePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCancelledPurchase not implemented")
}
func (UnimplementedEveTradingCoServer) SaveBuybackAppraisal(context.Context, *SaveAppraisalRequest) (*BuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) SaveShopAppraisal(context.Context, *SaveAppraisalRequest) (*ShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) SaveHaulAppraisal(context.Context, *SaveHaulAppraisalRequest) (*HaulAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveHaulAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) ShopInventory(context.Context, *ShopInventoryRequest) (*ShopInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopInventory not implemented")
}
func (UnimplementedEveTradingCoServer) StatusBuybackAppraisal(context.Context, *StatusAppraisalRequest) (*StatusAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatusBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) StatusShopAppraisal(context.Context, *StatusAppraisalRequest) (*StatusAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatusShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) StatusHaulAppraisal(context.Context, *StatusAppraisalRequest) (*StatusAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatusHaulAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) GetBuybackAppraisal(context.Context, *GetAppraisalRequest) (*GetBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) GetShopAppraisal(context.Context, *GetAppraisalRequest) (*GetShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) GetHaulAppraisal(context.Context, *GetAppraisalRequest) (*GetHaulAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHaulAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetUserAuthList(context.Context, *BasicRequest) (*CfgGetAuthListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetUserAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetAdminAuthList(context.Context, *BasicRequest) (*CfgGetAuthListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetAdminAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackSystemTypeMapsBuilder(context.Context, *BasicRequest) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackSystemTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopLocationTypeMapsBuilder(context.Context, *BasicRequest) (*CfgGetShopLocationTypeMapsBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopLocationTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetHaulRouteTypeMapsBuilder(context.Context, *BasicRequest) (*CfgGetHaulRouteTypeMapsBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetHaulRouteTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackSystems(context.Context, *BasicRequest) (*CfgGetBuybackSystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopLocations(context.Context, *BasicRequest) (*CfgGetShopLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetHaulRoutes(context.Context, *BasicRequest) (*CfgGetHaulRoutesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetHaulRoutes not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetMarkets(context.Context, *BasicRequest) (*CfgGetMarketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetMarkets not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetMarketNames(context.Context, *BasicRequest) (*CfgGetMarketNamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetMarketNames not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackBundleKeys(context.Context, *BasicRequest) (*CfgGetBuybackBundleKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackBundleKeys not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopBundleKeys(context.Context, *BasicRequest) (*CfgGetShopBundleKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopBundleKeys not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetHaulBundleKeys(context.Context, *BasicRequest) (*CfgGetHaulBundleKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetHaulBundleKeys not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetConstData(context.Context, *BasicRequest) (*CfgGetConstDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetConstData not implemented")
}
func (UnimplementedEveTradingCoServer) CfgSetUserAuthList(context.Context, *CfgSetAuthListRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgSetUserAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) CfgSetAdminAuthList(context.Context, *CfgSetAuthListRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgSetAdminAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) CfgSetConstData(context.Context, *CfgSetConstDataRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgSetConstData not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeBuybackSystemTypeMapsBuilder(context.Context, *CfgMergeBuybackSystemTypeMapsBuilderRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeBuybackSystemTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeShopLocationTypeMapsBuilder(context.Context, *CfgMergeShopLocationTypeMapsBuilderRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeShopLocationTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeHaulRouteTypeMapsBuilder(context.Context, *CfgMergeHaulRouteTypeMapsBuilderRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeHaulRouteTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeBuybackSystems(context.Context, *CfgMergeBuybackSystemsRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeBuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeShopLocations(context.Context, *CfgMergeShopLocationsRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeHaulRoutes(context.Context, *CfgMergeHaulRoutesRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeHaulRoutes not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeMarkets(context.Context, *CfgMergeMarketsRequest) (*CfgUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeMarkets not implemented")
}

// UnsafeEveTradingCoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EveTradingCoServer will
// result in compilation errors.
type UnsafeEveTradingCoServer interface {
	mustEmbedUnimplementedEveTradingCoServer()
}

func RegisterEveTradingCoServer(s grpc.ServiceRegistrar, srv EveTradingCoServer) {
	s.RegisterService(&EveTradingCo_ServiceDesc, srv)
}

func _EveTradingCo_AllTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/AllTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllTypes(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AllNamedTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllNamedTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/AllNamedTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllNamedTypes(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NamedTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamedTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NamedTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/NamedTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NamedTypes(ctx, req.(*NamedTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AllBuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllBuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/AllBuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllBuybackSystems(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AllSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/AllSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllSystems(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_Systems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).Systems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/Systems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).Systems(ctx, req.(*SystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AllHaulRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllHaulRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/AllHaulRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllHaulRoutes(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AllShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/AllShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllShopLocations(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_Locations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).Locations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/Locations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).Locations(ctx, req.(*LocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_Parse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).Parse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/Parse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).Parse(ctx, req.(*ParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CharacterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CharacterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CharacterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CharacterInfo(ctx, req.(*EntityInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CorporationInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CorporationInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CorporationInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CorporationInfo(ctx, req.(*EntityInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AllianceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllianceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/AllianceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllianceInfo(ctx, req.(*EntityInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NewBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NewBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/NewBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NewBuybackAppraisal(ctx, req.(*NewAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NewShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NewShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/NewShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NewShopAppraisal(ctx, req.(*NewAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NewHaulAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewHaulAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NewHaulAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/NewHaulAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NewHaulAppraisal(ctx, req.(*NewHaulAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_TokenInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).TokenInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/TokenInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).TokenInfo(ctx, req.(*TokenInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_BuybackContractQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).BuybackContractQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/BuybackContractQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).BuybackContractQueue(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopContractQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopContractQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/ShopContractQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopContractQueue(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_HaulContractQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).HaulContractQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/HaulContractQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).HaulContractQueue(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_PurchaseQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).PurchaseQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/PurchaseQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).PurchaseQueue(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_LocationPurchaseQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationPurchaseQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).LocationPurchaseQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/LocationPurchaseQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).LocationPurchaseQueue(ctx, req.(*LocationPurchaseQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_DeletePurchases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePurchasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).DeletePurchases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/DeletePurchases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).DeletePurchases(ctx, req.(*DeletePurchasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CancelPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelPurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CancelPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CancelPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CancelPurchase(ctx, req.(*CancelPurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_UserBuybackAppraisalCodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).UserBuybackAppraisalCodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/UserBuybackAppraisalCodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).UserBuybackAppraisalCodes(ctx, req.(*UserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_UserShopAppraisalCodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).UserShopAppraisalCodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/UserShopAppraisalCodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).UserShopAppraisalCodes(ctx, req.(*UserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_UserHaulAppraisalCodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).UserHaulAppraisalCodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/UserHaulAppraisalCodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).UserHaulAppraisalCodes(ctx, req.(*UserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_UserMadePurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).UserMadePurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/UserMadePurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).UserMadePurchase(ctx, req.(*UserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_UserCancelledPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).UserCancelledPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/UserCancelledPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).UserCancelledPurchase(ctx, req.(*UserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_SaveBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).SaveBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/SaveBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).SaveBuybackAppraisal(ctx, req.(*SaveAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_SaveShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).SaveShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/SaveShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).SaveShopAppraisal(ctx, req.(*SaveAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_SaveHaulAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveHaulAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).SaveHaulAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/SaveHaulAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).SaveHaulAppraisal(ctx, req.(*SaveHaulAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/ShopInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopInventory(ctx, req.(*ShopInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_StatusBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).StatusBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/StatusBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).StatusBuybackAppraisal(ctx, req.(*StatusAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_StatusShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).StatusShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/StatusShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).StatusShopAppraisal(ctx, req.(*StatusAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_StatusHaulAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).StatusHaulAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/StatusHaulAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).StatusHaulAppraisal(ctx, req.(*StatusAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_GetBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).GetBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/GetBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).GetBuybackAppraisal(ctx, req.(*GetAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_GetShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).GetShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/GetShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).GetShopAppraisal(ctx, req.(*GetAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_GetHaulAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).GetHaulAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/GetHaulAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).GetHaulAppraisal(ctx, req.(*GetAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetUserAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetUserAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetUserAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetUserAuthList(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetAdminAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetAdminAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetAdminAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetAdminAuthList(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackSystemTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackSystemTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetBuybackSystemTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackSystemTypeMapsBuilder(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopLocationTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopLocationTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetShopLocationTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopLocationTypeMapsBuilder(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetHaulRouteTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetHaulRouteTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetHaulRouteTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetHaulRouteTypeMapsBuilder(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetBuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackSystems(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopLocations(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetHaulRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetHaulRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetHaulRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetHaulRoutes(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetMarkets(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetMarketNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetMarketNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetMarketNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetMarketNames(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackBundleKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackBundleKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetBuybackBundleKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackBundleKeys(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopBundleKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopBundleKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetShopBundleKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopBundleKeys(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetHaulBundleKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetHaulBundleKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetHaulBundleKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetHaulBundleKeys(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetConstData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetConstData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgGetConstData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetConstData(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgSetUserAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgSetAuthListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgSetUserAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgSetUserAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgSetUserAuthList(ctx, req.(*CfgSetAuthListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgSetAdminAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgSetAuthListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgSetAdminAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgSetAdminAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgSetAdminAuthList(ctx, req.(*CfgSetAuthListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgSetConstData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgSetConstDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgSetConstData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgSetConstData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgSetConstData(ctx, req.(*CfgSetConstDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeBuybackSystemTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeBuybackSystemTypeMapsBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystemTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgMergeBuybackSystemTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystemTypeMapsBuilder(ctx, req.(*CfgMergeBuybackSystemTypeMapsBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeShopLocationTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeShopLocationTypeMapsBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeShopLocationTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgMergeShopLocationTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeShopLocationTypeMapsBuilder(ctx, req.(*CfgMergeShopLocationTypeMapsBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeHaulRouteTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeHaulRouteTypeMapsBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeHaulRouteTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgMergeHaulRouteTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeHaulRouteTypeMapsBuilder(ctx, req.(*CfgMergeHaulRouteTypeMapsBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeBuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeBuybackSystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgMergeBuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystems(ctx, req.(*CfgMergeBuybackSystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeShopLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgMergeShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeShopLocations(ctx, req.(*CfgMergeShopLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeHaulRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeHaulRoutesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeHaulRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgMergeHaulRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeHaulRoutes(ctx, req.(*CfgMergeHaulRoutesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeMarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etco_proto.EveTradingCo/CfgMergeMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeMarkets(ctx, req.(*CfgMergeMarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EveTradingCo_ServiceDesc is the grpc.ServiceDesc for EveTradingCo service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EveTradingCo_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "etco_proto.EveTradingCo",
	HandlerType: (*EveTradingCoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AllTypes",
			Handler:    _EveTradingCo_AllTypes_Handler,
		},
		{
			MethodName: "AllNamedTypes",
			Handler:    _EveTradingCo_AllNamedTypes_Handler,
		},
		{
			MethodName: "NamedTypes",
			Handler:    _EveTradingCo_NamedTypes_Handler,
		},
		{
			MethodName: "AllBuybackSystems",
			Handler:    _EveTradingCo_AllBuybackSystems_Handler,
		},
		{
			MethodName: "AllSystems",
			Handler:    _EveTradingCo_AllSystems_Handler,
		},
		{
			MethodName: "Systems",
			Handler:    _EveTradingCo_Systems_Handler,
		},
		{
			MethodName: "AllHaulRoutes",
			Handler:    _EveTradingCo_AllHaulRoutes_Handler,
		},
		{
			MethodName: "AllShopLocations",
			Handler:    _EveTradingCo_AllShopLocations_Handler,
		},
		{
			MethodName: "Locations",
			Handler:    _EveTradingCo_Locations_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _EveTradingCo_Login_Handler,
		},
		{
			MethodName: "Parse",
			Handler:    _EveTradingCo_Parse_Handler,
		},
		{
			MethodName: "CharacterInfo",
			Handler:    _EveTradingCo_CharacterInfo_Handler,
		},
		{
			MethodName: "CorporationInfo",
			Handler:    _EveTradingCo_CorporationInfo_Handler,
		},
		{
			MethodName: "AllianceInfo",
			Handler:    _EveTradingCo_AllianceInfo_Handler,
		},
		{
			MethodName: "NewBuybackAppraisal",
			Handler:    _EveTradingCo_NewBuybackAppraisal_Handler,
		},
		{
			MethodName: "NewShopAppraisal",
			Handler:    _EveTradingCo_NewShopAppraisal_Handler,
		},
		{
			MethodName: "NewHaulAppraisal",
			Handler:    _EveTradingCo_NewHaulAppraisal_Handler,
		},
		{
			MethodName: "TokenInfo",
			Handler:    _EveTradingCo_TokenInfo_Handler,
		},
		{
			MethodName: "BuybackContractQueue",
			Handler:    _EveTradingCo_BuybackContractQueue_Handler,
		},
		{
			MethodName: "ShopContractQueue",
			Handler:    _EveTradingCo_ShopContractQueue_Handler,
		},
		{
			MethodName: "HaulContractQueue",
			Handler:    _EveTradingCo_HaulContractQueue_Handler,
		},
		{
			MethodName: "PurchaseQueue",
			Handler:    _EveTradingCo_PurchaseQueue_Handler,
		},
		{
			MethodName: "LocationPurchaseQueue",
			Handler:    _EveTradingCo_LocationPurchaseQueue_Handler,
		},
		{
			MethodName: "DeletePurchases",
			Handler:    _EveTradingCo_DeletePurchases_Handler,
		},
		{
			MethodName: "CancelPurchase",
			Handler:    _EveTradingCo_CancelPurchase_Handler,
		},
		{
			MethodName: "UserBuybackAppraisalCodes",
			Handler:    _EveTradingCo_UserBuybackAppraisalCodes_Handler,
		},
		{
			MethodName: "UserShopAppraisalCodes",
			Handler:    _EveTradingCo_UserShopAppraisalCodes_Handler,
		},
		{
			MethodName: "UserHaulAppraisalCodes",
			Handler:    _EveTradingCo_UserHaulAppraisalCodes_Handler,
		},
		{
			MethodName: "UserMadePurchase",
			Handler:    _EveTradingCo_UserMadePurchase_Handler,
		},
		{
			MethodName: "UserCancelledPurchase",
			Handler:    _EveTradingCo_UserCancelledPurchase_Handler,
		},
		{
			MethodName: "SaveBuybackAppraisal",
			Handler:    _EveTradingCo_SaveBuybackAppraisal_Handler,
		},
		{
			MethodName: "SaveShopAppraisal",
			Handler:    _EveTradingCo_SaveShopAppraisal_Handler,
		},
		{
			MethodName: "SaveHaulAppraisal",
			Handler:    _EveTradingCo_SaveHaulAppraisal_Handler,
		},
		{
			MethodName: "ShopInventory",
			Handler:    _EveTradingCo_ShopInventory_Handler,
		},
		{
			MethodName: "StatusBuybackAppraisal",
			Handler:    _EveTradingCo_StatusBuybackAppraisal_Handler,
		},
		{
			MethodName: "StatusShopAppraisal",
			Handler:    _EveTradingCo_StatusShopAppraisal_Handler,
		},
		{
			MethodName: "StatusHaulAppraisal",
			Handler:    _EveTradingCo_StatusHaulAppraisal_Handler,
		},
		{
			MethodName: "GetBuybackAppraisal",
			Handler:    _EveTradingCo_GetBuybackAppraisal_Handler,
		},
		{
			MethodName: "GetShopAppraisal",
			Handler:    _EveTradingCo_GetShopAppraisal_Handler,
		},
		{
			MethodName: "GetHaulAppraisal",
			Handler:    _EveTradingCo_GetHaulAppraisal_Handler,
		},
		{
			MethodName: "CfgGetUserAuthList",
			Handler:    _EveTradingCo_CfgGetUserAuthList_Handler,
		},
		{
			MethodName: "CfgGetAdminAuthList",
			Handler:    _EveTradingCo_CfgGetAdminAuthList_Handler,
		},
		{
			MethodName: "CfgGetBuybackSystemTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgGetBuybackSystemTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgGetShopLocationTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgGetShopLocationTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgGetHaulRouteTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgGetHaulRouteTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgGetBuybackSystems",
			Handler:    _EveTradingCo_CfgGetBuybackSystems_Handler,
		},
		{
			MethodName: "CfgGetShopLocations",
			Handler:    _EveTradingCo_CfgGetShopLocations_Handler,
		},
		{
			MethodName: "CfgGetHaulRoutes",
			Handler:    _EveTradingCo_CfgGetHaulRoutes_Handler,
		},
		{
			MethodName: "CfgGetMarkets",
			Handler:    _EveTradingCo_CfgGetMarkets_Handler,
		},
		{
			MethodName: "CfgGetMarketNames",
			Handler:    _EveTradingCo_CfgGetMarketNames_Handler,
		},
		{
			MethodName: "CfgGetBuybackBundleKeys",
			Handler:    _EveTradingCo_CfgGetBuybackBundleKeys_Handler,
		},
		{
			MethodName: "CfgGetShopBundleKeys",
			Handler:    _EveTradingCo_CfgGetShopBundleKeys_Handler,
		},
		{
			MethodName: "CfgGetHaulBundleKeys",
			Handler:    _EveTradingCo_CfgGetHaulBundleKeys_Handler,
		},
		{
			MethodName: "CfgGetConstData",
			Handler:    _EveTradingCo_CfgGetConstData_Handler,
		},
		{
			MethodName: "CfgSetUserAuthList",
			Handler:    _EveTradingCo_CfgSetUserAuthList_Handler,
		},
		{
			MethodName: "CfgSetAdminAuthList",
			Handler:    _EveTradingCo_CfgSetAdminAuthList_Handler,
		},
		{
			MethodName: "CfgSetConstData",
			Handler:    _EveTradingCo_CfgSetConstData_Handler,
		},
		{
			MethodName: "CfgMergeBuybackSystemTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgMergeBuybackSystemTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgMergeShopLocationTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgMergeShopLocationTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgMergeHaulRouteTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgMergeHaulRouteTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgMergeBuybackSystems",
			Handler:    _EveTradingCo_CfgMergeBuybackSystems_Handler,
		},
		{
			MethodName: "CfgMergeShopLocations",
			Handler:    _EveTradingCo_CfgMergeShopLocations_Handler,
		},
		{
			MethodName: "CfgMergeHaulRoutes",
			Handler:    _EveTradingCo_CfgMergeHaulRoutes_Handler,
		},
		{
			MethodName: "CfgMergeMarkets",
			Handler:    _EveTradingCo_CfgMergeMarkets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "etco.proto",
}
