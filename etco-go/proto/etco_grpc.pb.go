// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.22.0
// source: etco.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EveTradingCoClient is the client API for EveTradingCo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EveTradingCoClient interface {
	// lists every SDE type that is published and has a market group
	SDETypeData(ctx context.Context, in *SDETypeDataRequest, opts ...grpc.CallOption) (*SDETypeDataResponse, error)
	NamedSDETypeData(ctx context.Context, in *NamedSDETypeDataRequest, opts ...grpc.CallOption) (*NamedSDETypeDataResponse, error)
	// returns a list of all valid shop locations
	ShopLocations(ctx context.Context, in *ShopLocationsRequest, opts ...grpc.CallOption) (*ShopLocationsResponse, error)
	// returns a list of all valid buyback systems
	BuybackSystems(ctx context.Context, in *BuybackSystemsRequest, opts ...grpc.CallOption) (*BuybackSystemsResponse, error)
	// returns a list of all systems
	SDESystems(ctx context.Context, in *SDESystemsRequest, opts ...grpc.CallOption) (*SDESystemsResponse, error)
	// simply returns whether the user is an admin
	IsAdmin(ctx context.Context, in *IsAdminRequest, opts ...grpc.CallOption) (*IsAdminResponse, error)
	// lists the purchase order queue (purchase orders with no contract)
	ShopPurchaseQueue(ctx context.Context, in *ShopPurchaseQueueRequest, opts ...grpc.CallOption) (*ShopPurchaseQueueResponse, error)
	// lists active contracts, and, optionally, their original appraisals, new prices, and location info
	ShopContractQueue(ctx context.Context, in *ShopContractQueueRequest, opts ...grpc.CallOption) (*ShopContractQueueResponse, error)
	BuybackContractQueue(ctx context.Context, in *BuybackContractQueueRequest, opts ...grpc.CallOption) (*BuybackContractQueueResponse, error)
	// lists the request config data
	CfgGetAuthList(ctx context.Context, in *CfgGetAuthListRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error)
	CfgGetBuybackSystemTypeMapsBuilder(ctx context.Context, in *CfgGetBuybackSystemTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error)
	CfgGetShopLocationTypeMapsBuilder(ctx context.Context, in *CfgGetShopLocationTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgGetShopLocationTypeMapsBuilderResponse, error)
	CfgGetBuybackSystems(ctx context.Context, in *CfgGetBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemsResponse, error)
	CfgGetShopLocations(ctx context.Context, in *CfgGetShopLocationsRequest, opts ...grpc.CallOption) (*CfgGetShopLocationsResponse, error)
	CfgGetMarkets(ctx context.Context, in *CfgGetMarketsRequest, opts ...grpc.CallOption) (*CfgGetMarketsResponse, error)
	CfgGetMarketNames(ctx context.Context, in *CfgGetMarketNamesRequest, opts ...grpc.CallOption) (*CfgGetMarketNamesResponse, error)
	CfgGetBuybackBundleKeys(ctx context.Context, in *CfgGetBuybackBundleKeysRequest, opts ...grpc.CallOption) (*CfgGetBuybackBundleKeysResponse, error)
	CfgGetShopBundleKeys(ctx context.Context, in *CfgGetShopBundleKeysRequest, opts ...grpc.CallOption) (*CfgGetShopBundleKeysResponse, error)
	CfgGetConstData(ctx context.Context, in *CfgGetConstDataRequest, opts ...grpc.CallOption) (*CfgGetConstDataResponse, error)
	// replaces the existing config data with the given config data
	CfgSetAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgSetAuthListResponse, error)
	CfgSetConstData(ctx context.Context, in *CfgSetConstDataRequest, opts ...grpc.CallOption) (*CfgSetConstDataResponse, error)
	// merges the given config data into the existing config data
	CfgMergeBuybackSystemTypeMapsBuilder(ctx context.Context, in *CfgMergeBuybackSystemTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemTypeMapsBuilderResponse, error)
	CfgMergeShopLocationTypeMapsBuilder(ctx context.Context, in *CfgMergeShopLocationTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgMergeShopLocationTypeMapsBuilderResponse, error)
	CfgMergeBuybackSystems(ctx context.Context, in *CfgMergeBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemsResponse, error)
	CfgMergeShopLocations(ctx context.Context, in *CfgMergeShopLocationsRequest, opts ...grpc.CallOption) (*CfgMergeShopLocationsResponse, error)
	CfgMergeMarkets(ctx context.Context, in *CfgMergeMarketsRequest, opts ...grpc.CallOption) (*CfgMergeMarketsResponse, error)
	// cancels the purchase orders for the given codes
	ShopDeletePurchases(ctx context.Context, in *ShopDeletePurchasesRequest, opts ...grpc.CallOption) (*ShopDeletePurchasesResponse, error)
	// logs into the requested app
	EsiAppLogin(ctx context.Context, in *EsiAppLoginRequest, opts ...grpc.CallOption) (*EsiAppLoginResponse, error)
	// returns entity info for the given entity id
	CharacterInfo(ctx context.Context, in *CharacterInfoRequest, opts ...grpc.CallOption) (*CharacterInfoResponse, error)
	CorporationInfo(ctx context.Context, in *CorporationInfoRequest, opts ...grpc.CallOption) (*CorporationInfoResponse, error)
	AllianceInfo(ctx context.Context, in *AllianceInfoRequest, opts ...grpc.CallOption) (*AllianceInfoResponse, error)
	// parses an input string into a list of named basic items
	Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error)
	// returns a buyback appraisal for the provided items and its code (if saved)
	NewBuybackAppraisal(ctx context.Context, in *NewBuybackAppraisalRequest, opts ...grpc.CallOption) (*NewBuybackAppraisalResponse, error)
	// returns a shop appraisal for the provided items
	NewShopAppraisal(ctx context.Context, in *NewShopAppraisalRequest, opts ...grpc.CallOption) (*NewShopAppraisalResponse, error)
	// returns the users appraisal codes
	UserData(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserDataResponse, error)
	// returns purchasable items for the given location
	ShopInventory(ctx context.Context, in *ShopInventoryRequest, opts ...grpc.CallOption) (*ShopInventoryResponse, error)
	// places a purchase order for the given items and location
	ShopMakePurchase(ctx context.Context, in *ShopMakePurchaseRequest, opts ...grpc.CallOption) (*ShopMakePurchaseResponse, error)
	// cancel the purchase order for the given code
	ShopCancelPurchase(ctx context.Context, in *ShopCancelPurchaseRequest, opts ...grpc.CallOption) (*ShopCancelPurchaseResponse, error)
	// returns the appraisal for the given code
	GetBuybackAppraisal(ctx context.Context, in *GetBuybackAppraisalRequest, opts ...grpc.CallOption) (*GetBuybackAppraisalResponse, error)
	GetShopAppraisal(ctx context.Context, in *GetShopAppraisalRequest, opts ...grpc.CallOption) (*GetShopAppraisalResponse, error)
	// returns the status for the given code
	// only the character that made the appraisal is authenticated (unless admin is true)
	StatusBuybackAppraisal(ctx context.Context, in *StatusBuybackAppraisalRequest, opts ...grpc.CallOption) (*StatusBuybackAppraisalResponse, error)
	StatusShopAppraisal(ctx context.Context, in *StatusShopAppraisalRequest, opts ...grpc.CallOption) (*StatusShopAppraisalResponse, error)
}

type eveTradingCoClient struct {
	cc grpc.ClientConnInterface
}

func NewEveTradingCoClient(cc grpc.ClientConnInterface) EveTradingCoClient {
	return &eveTradingCoClient{cc}
}

func (c *eveTradingCoClient) SDETypeData(ctx context.Context, in *SDETypeDataRequest, opts ...grpc.CallOption) (*SDETypeDataResponse, error) {
	out := new(SDETypeDataResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/SDETypeData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NamedSDETypeData(ctx context.Context, in *NamedSDETypeDataRequest, opts ...grpc.CallOption) (*NamedSDETypeDataResponse, error) {
	out := new(NamedSDETypeDataResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/NamedSDETypeData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopLocations(ctx context.Context, in *ShopLocationsRequest, opts ...grpc.CallOption) (*ShopLocationsResponse, error) {
	out := new(ShopLocationsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) BuybackSystems(ctx context.Context, in *BuybackSystemsRequest, opts ...grpc.CallOption) (*BuybackSystemsResponse, error) {
	out := new(BuybackSystemsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/BuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) SDESystems(ctx context.Context, in *SDESystemsRequest, opts ...grpc.CallOption) (*SDESystemsResponse, error) {
	out := new(SDESystemsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/SDESystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) IsAdmin(ctx context.Context, in *IsAdminRequest, opts ...grpc.CallOption) (*IsAdminResponse, error) {
	out := new(IsAdminResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/IsAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopPurchaseQueue(ctx context.Context, in *ShopPurchaseQueueRequest, opts ...grpc.CallOption) (*ShopPurchaseQueueResponse, error) {
	out := new(ShopPurchaseQueueResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopPurchaseQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopContractQueue(ctx context.Context, in *ShopContractQueueRequest, opts ...grpc.CallOption) (*ShopContractQueueResponse, error) {
	out := new(ShopContractQueueResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopContractQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) BuybackContractQueue(ctx context.Context, in *BuybackContractQueueRequest, opts ...grpc.CallOption) (*BuybackContractQueueResponse, error) {
	out := new(BuybackContractQueueResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/BuybackContractQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetAuthList(ctx context.Context, in *CfgGetAuthListRequest, opts ...grpc.CallOption) (*CfgGetAuthListResponse, error) {
	out := new(CfgGetAuthListResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackSystemTypeMapsBuilder(ctx context.Context, in *CfgGetBuybackSystemTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error) {
	out := new(CfgGetBuybackSystemTypeMapsBuilderResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackSystemTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopLocationTypeMapsBuilder(ctx context.Context, in *CfgGetShopLocationTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgGetShopLocationTypeMapsBuilderResponse, error) {
	out := new(CfgGetShopLocationTypeMapsBuilderResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetShopLocationTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackSystems(ctx context.Context, in *CfgGetBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgGetBuybackSystemsResponse, error) {
	out := new(CfgGetBuybackSystemsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopLocations(ctx context.Context, in *CfgGetShopLocationsRequest, opts ...grpc.CallOption) (*CfgGetShopLocationsResponse, error) {
	out := new(CfgGetShopLocationsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetMarkets(ctx context.Context, in *CfgGetMarketsRequest, opts ...grpc.CallOption) (*CfgGetMarketsResponse, error) {
	out := new(CfgGetMarketsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetMarketNames(ctx context.Context, in *CfgGetMarketNamesRequest, opts ...grpc.CallOption) (*CfgGetMarketNamesResponse, error) {
	out := new(CfgGetMarketNamesResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetMarketNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetBuybackBundleKeys(ctx context.Context, in *CfgGetBuybackBundleKeysRequest, opts ...grpc.CallOption) (*CfgGetBuybackBundleKeysResponse, error) {
	out := new(CfgGetBuybackBundleKeysResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackBundleKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetShopBundleKeys(ctx context.Context, in *CfgGetShopBundleKeysRequest, opts ...grpc.CallOption) (*CfgGetShopBundleKeysResponse, error) {
	out := new(CfgGetShopBundleKeysResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetShopBundleKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgGetConstData(ctx context.Context, in *CfgGetConstDataRequest, opts ...grpc.CallOption) (*CfgGetConstDataResponse, error) {
	out := new(CfgGetConstDataResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgGetConstData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgSetAuthList(ctx context.Context, in *CfgSetAuthListRequest, opts ...grpc.CallOption) (*CfgSetAuthListResponse, error) {
	out := new(CfgSetAuthListResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgSetAuthList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgSetConstData(ctx context.Context, in *CfgSetConstDataRequest, opts ...grpc.CallOption) (*CfgSetConstDataResponse, error) {
	out := new(CfgSetConstDataResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgSetConstData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeBuybackSystemTypeMapsBuilder(ctx context.Context, in *CfgMergeBuybackSystemTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemTypeMapsBuilderResponse, error) {
	out := new(CfgMergeBuybackSystemTypeMapsBuilderResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackSystemTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeShopLocationTypeMapsBuilder(ctx context.Context, in *CfgMergeShopLocationTypeMapsBuilderRequest, opts ...grpc.CallOption) (*CfgMergeShopLocationTypeMapsBuilderResponse, error) {
	out := new(CfgMergeShopLocationTypeMapsBuilderResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeShopLocationTypeMapsBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeBuybackSystems(ctx context.Context, in *CfgMergeBuybackSystemsRequest, opts ...grpc.CallOption) (*CfgMergeBuybackSystemsResponse, error) {
	out := new(CfgMergeBuybackSystemsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeShopLocations(ctx context.Context, in *CfgMergeShopLocationsRequest, opts ...grpc.CallOption) (*CfgMergeShopLocationsResponse, error) {
	out := new(CfgMergeShopLocationsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeShopLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CfgMergeMarkets(ctx context.Context, in *CfgMergeMarketsRequest, opts ...grpc.CallOption) (*CfgMergeMarketsResponse, error) {
	out := new(CfgMergeMarketsResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CfgMergeMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopDeletePurchases(ctx context.Context, in *ShopDeletePurchasesRequest, opts ...grpc.CallOption) (*ShopDeletePurchasesResponse, error) {
	out := new(ShopDeletePurchasesResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopDeletePurchases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) EsiAppLogin(ctx context.Context, in *EsiAppLoginRequest, opts ...grpc.CallOption) (*EsiAppLoginResponse, error) {
	out := new(EsiAppLoginResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/EsiAppLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CharacterInfo(ctx context.Context, in *CharacterInfoRequest, opts ...grpc.CallOption) (*CharacterInfoResponse, error) {
	out := new(CharacterInfoResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CharacterInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) CorporationInfo(ctx context.Context, in *CorporationInfoRequest, opts ...grpc.CallOption) (*CorporationInfoResponse, error) {
	out := new(CorporationInfoResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/CorporationInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) AllianceInfo(ctx context.Context, in *AllianceInfoRequest, opts ...grpc.CallOption) (*AllianceInfoResponse, error) {
	out := new(AllianceInfoResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/AllianceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error) {
	out := new(ParseResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/Parse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NewBuybackAppraisal(ctx context.Context, in *NewBuybackAppraisalRequest, opts ...grpc.CallOption) (*NewBuybackAppraisalResponse, error) {
	out := new(NewBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/NewBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) NewShopAppraisal(ctx context.Context, in *NewShopAppraisalRequest, opts ...grpc.CallOption) (*NewShopAppraisalResponse, error) {
	out := new(NewShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/NewShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) UserData(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserDataResponse, error) {
	out := new(UserDataResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/UserData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopInventory(ctx context.Context, in *ShopInventoryRequest, opts ...grpc.CallOption) (*ShopInventoryResponse, error) {
	out := new(ShopInventoryResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopMakePurchase(ctx context.Context, in *ShopMakePurchaseRequest, opts ...grpc.CallOption) (*ShopMakePurchaseResponse, error) {
	out := new(ShopMakePurchaseResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopMakePurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) ShopCancelPurchase(ctx context.Context, in *ShopCancelPurchaseRequest, opts ...grpc.CallOption) (*ShopCancelPurchaseResponse, error) {
	out := new(ShopCancelPurchaseResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/ShopCancelPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) GetBuybackAppraisal(ctx context.Context, in *GetBuybackAppraisalRequest, opts ...grpc.CallOption) (*GetBuybackAppraisalResponse, error) {
	out := new(GetBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/GetBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) GetShopAppraisal(ctx context.Context, in *GetShopAppraisalRequest, opts ...grpc.CallOption) (*GetShopAppraisalResponse, error) {
	out := new(GetShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/GetShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) StatusBuybackAppraisal(ctx context.Context, in *StatusBuybackAppraisalRequest, opts ...grpc.CallOption) (*StatusBuybackAppraisalResponse, error) {
	out := new(StatusBuybackAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/StatusBuybackAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eveTradingCoClient) StatusShopAppraisal(ctx context.Context, in *StatusShopAppraisalRequest, opts ...grpc.CallOption) (*StatusShopAppraisalResponse, error) {
	out := new(StatusShopAppraisalResponse)
	err := c.cc.Invoke(ctx, "/eve_trading_co_proto.EveTradingCo/StatusShopAppraisal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EveTradingCoServer is the server API for EveTradingCo service.
// All implementations must embed UnimplementedEveTradingCoServer
// for forward compatibility
type EveTradingCoServer interface {
	// lists every SDE type that is published and has a market group
	SDETypeData(context.Context, *SDETypeDataRequest) (*SDETypeDataResponse, error)
	NamedSDETypeData(context.Context, *NamedSDETypeDataRequest) (*NamedSDETypeDataResponse, error)
	// returns a list of all valid shop locations
	ShopLocations(context.Context, *ShopLocationsRequest) (*ShopLocationsResponse, error)
	// returns a list of all valid buyback systems
	BuybackSystems(context.Context, *BuybackSystemsRequest) (*BuybackSystemsResponse, error)
	// returns a list of all systems
	SDESystems(context.Context, *SDESystemsRequest) (*SDESystemsResponse, error)
	// simply returns whether the user is an admin
	IsAdmin(context.Context, *IsAdminRequest) (*IsAdminResponse, error)
	// lists the purchase order queue (purchase orders with no contract)
	ShopPurchaseQueue(context.Context, *ShopPurchaseQueueRequest) (*ShopPurchaseQueueResponse, error)
	// lists active contracts, and, optionally, their original appraisals, new prices, and location info
	ShopContractQueue(context.Context, *ShopContractQueueRequest) (*ShopContractQueueResponse, error)
	BuybackContractQueue(context.Context, *BuybackContractQueueRequest) (*BuybackContractQueueResponse, error)
	// lists the request config data
	CfgGetAuthList(context.Context, *CfgGetAuthListRequest) (*CfgGetAuthListResponse, error)
	CfgGetBuybackSystemTypeMapsBuilder(context.Context, *CfgGetBuybackSystemTypeMapsBuilderRequest) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error)
	CfgGetShopLocationTypeMapsBuilder(context.Context, *CfgGetShopLocationTypeMapsBuilderRequest) (*CfgGetShopLocationTypeMapsBuilderResponse, error)
	CfgGetBuybackSystems(context.Context, *CfgGetBuybackSystemsRequest) (*CfgGetBuybackSystemsResponse, error)
	CfgGetShopLocations(context.Context, *CfgGetShopLocationsRequest) (*CfgGetShopLocationsResponse, error)
	CfgGetMarkets(context.Context, *CfgGetMarketsRequest) (*CfgGetMarketsResponse, error)
	CfgGetMarketNames(context.Context, *CfgGetMarketNamesRequest) (*CfgGetMarketNamesResponse, error)
	CfgGetBuybackBundleKeys(context.Context, *CfgGetBuybackBundleKeysRequest) (*CfgGetBuybackBundleKeysResponse, error)
	CfgGetShopBundleKeys(context.Context, *CfgGetShopBundleKeysRequest) (*CfgGetShopBundleKeysResponse, error)
	CfgGetConstData(context.Context, *CfgGetConstDataRequest) (*CfgGetConstDataResponse, error)
	// replaces the existing config data with the given config data
	CfgSetAuthList(context.Context, *CfgSetAuthListRequest) (*CfgSetAuthListResponse, error)
	CfgSetConstData(context.Context, *CfgSetConstDataRequest) (*CfgSetConstDataResponse, error)
	// merges the given config data into the existing config data
	CfgMergeBuybackSystemTypeMapsBuilder(context.Context, *CfgMergeBuybackSystemTypeMapsBuilderRequest) (*CfgMergeBuybackSystemTypeMapsBuilderResponse, error)
	CfgMergeShopLocationTypeMapsBuilder(context.Context, *CfgMergeShopLocationTypeMapsBuilderRequest) (*CfgMergeShopLocationTypeMapsBuilderResponse, error)
	CfgMergeBuybackSystems(context.Context, *CfgMergeBuybackSystemsRequest) (*CfgMergeBuybackSystemsResponse, error)
	CfgMergeShopLocations(context.Context, *CfgMergeShopLocationsRequest) (*CfgMergeShopLocationsResponse, error)
	CfgMergeMarkets(context.Context, *CfgMergeMarketsRequest) (*CfgMergeMarketsResponse, error)
	// cancels the purchase orders for the given codes
	ShopDeletePurchases(context.Context, *ShopDeletePurchasesRequest) (*ShopDeletePurchasesResponse, error)
	// logs into the requested app
	EsiAppLogin(context.Context, *EsiAppLoginRequest) (*EsiAppLoginResponse, error)
	// returns entity info for the given entity id
	CharacterInfo(context.Context, *CharacterInfoRequest) (*CharacterInfoResponse, error)
	CorporationInfo(context.Context, *CorporationInfoRequest) (*CorporationInfoResponse, error)
	AllianceInfo(context.Context, *AllianceInfoRequest) (*AllianceInfoResponse, error)
	// parses an input string into a list of named basic items
	Parse(context.Context, *ParseRequest) (*ParseResponse, error)
	// returns a buyback appraisal for the provided items and its code (if saved)
	NewBuybackAppraisal(context.Context, *NewBuybackAppraisalRequest) (*NewBuybackAppraisalResponse, error)
	// returns a shop appraisal for the provided items
	NewShopAppraisal(context.Context, *NewShopAppraisalRequest) (*NewShopAppraisalResponse, error)
	// returns the users appraisal codes
	UserData(context.Context, *UserDataRequest) (*UserDataResponse, error)
	// returns purchasable items for the given location
	ShopInventory(context.Context, *ShopInventoryRequest) (*ShopInventoryResponse, error)
	// places a purchase order for the given items and location
	ShopMakePurchase(context.Context, *ShopMakePurchaseRequest) (*ShopMakePurchaseResponse, error)
	// cancel the purchase order for the given code
	ShopCancelPurchase(context.Context, *ShopCancelPurchaseRequest) (*ShopCancelPurchaseResponse, error)
	// returns the appraisal for the given code
	GetBuybackAppraisal(context.Context, *GetBuybackAppraisalRequest) (*GetBuybackAppraisalResponse, error)
	GetShopAppraisal(context.Context, *GetShopAppraisalRequest) (*GetShopAppraisalResponse, error)
	// returns the status for the given code
	// only the character that made the appraisal is authenticated (unless admin is true)
	StatusBuybackAppraisal(context.Context, *StatusBuybackAppraisalRequest) (*StatusBuybackAppraisalResponse, error)
	StatusShopAppraisal(context.Context, *StatusShopAppraisalRequest) (*StatusShopAppraisalResponse, error)
	mustEmbedUnimplementedEveTradingCoServer()
}

// UnimplementedEveTradingCoServer must be embedded to have forward compatible implementations.
type UnimplementedEveTradingCoServer struct {
}

func (UnimplementedEveTradingCoServer) SDETypeData(context.Context, *SDETypeDataRequest) (*SDETypeDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SDETypeData not implemented")
}
func (UnimplementedEveTradingCoServer) NamedSDETypeData(context.Context, *NamedSDETypeDataRequest) (*NamedSDETypeDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NamedSDETypeData not implemented")
}
func (UnimplementedEveTradingCoServer) ShopLocations(context.Context, *ShopLocationsRequest) (*ShopLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) BuybackSystems(context.Context, *BuybackSystemsRequest) (*BuybackSystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) SDESystems(context.Context, *SDESystemsRequest) (*SDESystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SDESystems not implemented")
}
func (UnimplementedEveTradingCoServer) IsAdmin(context.Context, *IsAdminRequest) (*IsAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsAdmin not implemented")
}
func (UnimplementedEveTradingCoServer) ShopPurchaseQueue(context.Context, *ShopPurchaseQueueRequest) (*ShopPurchaseQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopPurchaseQueue not implemented")
}
func (UnimplementedEveTradingCoServer) ShopContractQueue(context.Context, *ShopContractQueueRequest) (*ShopContractQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopContractQueue not implemented")
}
func (UnimplementedEveTradingCoServer) BuybackContractQueue(context.Context, *BuybackContractQueueRequest) (*BuybackContractQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuybackContractQueue not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetAuthList(context.Context, *CfgGetAuthListRequest) (*CfgGetAuthListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackSystemTypeMapsBuilder(context.Context, *CfgGetBuybackSystemTypeMapsBuilderRequest) (*CfgGetBuybackSystemTypeMapsBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackSystemTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopLocationTypeMapsBuilder(context.Context, *CfgGetShopLocationTypeMapsBuilderRequest) (*CfgGetShopLocationTypeMapsBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopLocationTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackSystems(context.Context, *CfgGetBuybackSystemsRequest) (*CfgGetBuybackSystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopLocations(context.Context, *CfgGetShopLocationsRequest) (*CfgGetShopLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetMarkets(context.Context, *CfgGetMarketsRequest) (*CfgGetMarketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetMarkets not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetMarketNames(context.Context, *CfgGetMarketNamesRequest) (*CfgGetMarketNamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetMarketNames not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetBuybackBundleKeys(context.Context, *CfgGetBuybackBundleKeysRequest) (*CfgGetBuybackBundleKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetBuybackBundleKeys not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetShopBundleKeys(context.Context, *CfgGetShopBundleKeysRequest) (*CfgGetShopBundleKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetShopBundleKeys not implemented")
}
func (UnimplementedEveTradingCoServer) CfgGetConstData(context.Context, *CfgGetConstDataRequest) (*CfgGetConstDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgGetConstData not implemented")
}
func (UnimplementedEveTradingCoServer) CfgSetAuthList(context.Context, *CfgSetAuthListRequest) (*CfgSetAuthListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgSetAuthList not implemented")
}
func (UnimplementedEveTradingCoServer) CfgSetConstData(context.Context, *CfgSetConstDataRequest) (*CfgSetConstDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgSetConstData not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeBuybackSystemTypeMapsBuilder(context.Context, *CfgMergeBuybackSystemTypeMapsBuilderRequest) (*CfgMergeBuybackSystemTypeMapsBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeBuybackSystemTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeShopLocationTypeMapsBuilder(context.Context, *CfgMergeShopLocationTypeMapsBuilderRequest) (*CfgMergeShopLocationTypeMapsBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeShopLocationTypeMapsBuilder not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeBuybackSystems(context.Context, *CfgMergeBuybackSystemsRequest) (*CfgMergeBuybackSystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeBuybackSystems not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeShopLocations(context.Context, *CfgMergeShopLocationsRequest) (*CfgMergeShopLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeShopLocations not implemented")
}
func (UnimplementedEveTradingCoServer) CfgMergeMarkets(context.Context, *CfgMergeMarketsRequest) (*CfgMergeMarketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CfgMergeMarkets not implemented")
}
func (UnimplementedEveTradingCoServer) ShopDeletePurchases(context.Context, *ShopDeletePurchasesRequest) (*ShopDeletePurchasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopDeletePurchases not implemented")
}
func (UnimplementedEveTradingCoServer) EsiAppLogin(context.Context, *EsiAppLoginRequest) (*EsiAppLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EsiAppLogin not implemented")
}
func (UnimplementedEveTradingCoServer) CharacterInfo(context.Context, *CharacterInfoRequest) (*CharacterInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CharacterInfo not implemented")
}
func (UnimplementedEveTradingCoServer) CorporationInfo(context.Context, *CorporationInfoRequest) (*CorporationInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CorporationInfo not implemented")
}
func (UnimplementedEveTradingCoServer) AllianceInfo(context.Context, *AllianceInfoRequest) (*AllianceInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllianceInfo not implemented")
}
func (UnimplementedEveTradingCoServer) Parse(context.Context, *ParseRequest) (*ParseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Parse not implemented")
}
func (UnimplementedEveTradingCoServer) NewBuybackAppraisal(context.Context, *NewBuybackAppraisalRequest) (*NewBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) NewShopAppraisal(context.Context, *NewShopAppraisalRequest) (*NewShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) UserData(context.Context, *UserDataRequest) (*UserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserData not implemented")
}
func (UnimplementedEveTradingCoServer) ShopInventory(context.Context, *ShopInventoryRequest) (*ShopInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopInventory not implemented")
}
func (UnimplementedEveTradingCoServer) ShopMakePurchase(context.Context, *ShopMakePurchaseRequest) (*ShopMakePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopMakePurchase not implemented")
}
func (UnimplementedEveTradingCoServer) ShopCancelPurchase(context.Context, *ShopCancelPurchaseRequest) (*ShopCancelPurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopCancelPurchase not implemented")
}
func (UnimplementedEveTradingCoServer) GetBuybackAppraisal(context.Context, *GetBuybackAppraisalRequest) (*GetBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) GetShopAppraisal(context.Context, *GetShopAppraisalRequest) (*GetShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) StatusBuybackAppraisal(context.Context, *StatusBuybackAppraisalRequest) (*StatusBuybackAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatusBuybackAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) StatusShopAppraisal(context.Context, *StatusShopAppraisalRequest) (*StatusShopAppraisalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatusShopAppraisal not implemented")
}
func (UnimplementedEveTradingCoServer) mustEmbedUnimplementedEveTradingCoServer() {}

// UnsafeEveTradingCoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EveTradingCoServer will
// result in compilation errors.
type UnsafeEveTradingCoServer interface {
	mustEmbedUnimplementedEveTradingCoServer()
}

func RegisterEveTradingCoServer(s grpc.ServiceRegistrar, srv EveTradingCoServer) {
	s.RegisterService(&EveTradingCo_ServiceDesc, srv)
}

func _EveTradingCo_SDETypeData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SDETypeDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).SDETypeData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/SDETypeData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).SDETypeData(ctx, req.(*SDETypeDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NamedSDETypeData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamedSDETypeDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NamedSDETypeData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/NamedSDETypeData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NamedSDETypeData(ctx, req.(*NamedSDETypeDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopLocations(ctx, req.(*ShopLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_BuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuybackSystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).BuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/BuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).BuybackSystems(ctx, req.(*BuybackSystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_SDESystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SDESystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).SDESystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/SDESystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).SDESystems(ctx, req.(*SDESystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_IsAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).IsAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/IsAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).IsAdmin(ctx, req.(*IsAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopPurchaseQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopPurchaseQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopPurchaseQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopPurchaseQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopPurchaseQueue(ctx, req.(*ShopPurchaseQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopContractQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopContractQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopContractQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopContractQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopContractQueue(ctx, req.(*ShopContractQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_BuybackContractQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuybackContractQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).BuybackContractQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/BuybackContractQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).BuybackContractQueue(ctx, req.(*BuybackContractQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetAuthListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetAuthList(ctx, req.(*CfgGetAuthListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackSystemTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetBuybackSystemTypeMapsBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackSystemTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackSystemTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackSystemTypeMapsBuilder(ctx, req.(*CfgGetBuybackSystemTypeMapsBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopLocationTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetShopLocationTypeMapsBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopLocationTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetShopLocationTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopLocationTypeMapsBuilder(ctx, req.(*CfgGetShopLocationTypeMapsBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetBuybackSystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackSystems(ctx, req.(*CfgGetBuybackSystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetShopLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopLocations(ctx, req.(*CfgGetShopLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetMarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetMarkets(ctx, req.(*CfgGetMarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetMarketNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetMarketNamesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetMarketNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetMarketNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetMarketNames(ctx, req.(*CfgGetMarketNamesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetBuybackBundleKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetBuybackBundleKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetBuybackBundleKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetBuybackBundleKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetBuybackBundleKeys(ctx, req.(*CfgGetBuybackBundleKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetShopBundleKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetShopBundleKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetShopBundleKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetShopBundleKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetShopBundleKeys(ctx, req.(*CfgGetShopBundleKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgGetConstData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgGetConstDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgGetConstData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgGetConstData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgGetConstData(ctx, req.(*CfgGetConstDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgSetAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgSetAuthListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgSetAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgSetAuthList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgSetAuthList(ctx, req.(*CfgSetAuthListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgSetConstData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgSetConstDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgSetConstData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgSetConstData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgSetConstData(ctx, req.(*CfgSetConstDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeBuybackSystemTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeBuybackSystemTypeMapsBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystemTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackSystemTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystemTypeMapsBuilder(ctx, req.(*CfgMergeBuybackSystemTypeMapsBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeShopLocationTypeMapsBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeShopLocationTypeMapsBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeShopLocationTypeMapsBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeShopLocationTypeMapsBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeShopLocationTypeMapsBuilder(ctx, req.(*CfgMergeShopLocationTypeMapsBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeBuybackSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeBuybackSystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeBuybackSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeBuybackSystems(ctx, req.(*CfgMergeBuybackSystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeShopLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeShopLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeShopLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeShopLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeShopLocations(ctx, req.(*CfgMergeShopLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CfgMergeMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgMergeMarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CfgMergeMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CfgMergeMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CfgMergeMarkets(ctx, req.(*CfgMergeMarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopDeletePurchases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopDeletePurchasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopDeletePurchases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopDeletePurchases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopDeletePurchases(ctx, req.(*ShopDeletePurchasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_EsiAppLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EsiAppLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).EsiAppLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/EsiAppLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).EsiAppLogin(ctx, req.(*EsiAppLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CharacterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CharacterInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CharacterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CharacterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CharacterInfo(ctx, req.(*CharacterInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_CorporationInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CorporationInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).CorporationInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/CorporationInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).CorporationInfo(ctx, req.(*CorporationInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_AllianceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllianceInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).AllianceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/AllianceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).AllianceInfo(ctx, req.(*AllianceInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_Parse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).Parse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/Parse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).Parse(ctx, req.(*ParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NewBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NewBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/NewBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NewBuybackAppraisal(ctx, req.(*NewBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_NewShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).NewShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/NewShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).NewShopAppraisal(ctx, req.(*NewShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_UserData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).UserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/UserData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).UserData(ctx, req.(*UserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopInventory(ctx, req.(*ShopInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopMakePurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopMakePurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopMakePurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopMakePurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopMakePurchase(ctx, req.(*ShopMakePurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_ShopCancelPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopCancelPurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).ShopCancelPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/ShopCancelPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).ShopCancelPurchase(ctx, req.(*ShopCancelPurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_GetBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).GetBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/GetBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).GetBuybackAppraisal(ctx, req.(*GetBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_GetShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).GetShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/GetShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).GetShopAppraisal(ctx, req.(*GetShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_StatusBuybackAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusBuybackAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).StatusBuybackAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/StatusBuybackAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).StatusBuybackAppraisal(ctx, req.(*StatusBuybackAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EveTradingCo_StatusShopAppraisal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusShopAppraisalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EveTradingCoServer).StatusShopAppraisal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eve_trading_co_proto.EveTradingCo/StatusShopAppraisal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EveTradingCoServer).StatusShopAppraisal(ctx, req.(*StatusShopAppraisalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EveTradingCo_ServiceDesc is the grpc.ServiceDesc for EveTradingCo service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EveTradingCo_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eve_trading_co_proto.EveTradingCo",
	HandlerType: (*EveTradingCoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SDETypeData",
			Handler:    _EveTradingCo_SDETypeData_Handler,
		},
		{
			MethodName: "NamedSDETypeData",
			Handler:    _EveTradingCo_NamedSDETypeData_Handler,
		},
		{
			MethodName: "ShopLocations",
			Handler:    _EveTradingCo_ShopLocations_Handler,
		},
		{
			MethodName: "BuybackSystems",
			Handler:    _EveTradingCo_BuybackSystems_Handler,
		},
		{
			MethodName: "SDESystems",
			Handler:    _EveTradingCo_SDESystems_Handler,
		},
		{
			MethodName: "IsAdmin",
			Handler:    _EveTradingCo_IsAdmin_Handler,
		},
		{
			MethodName: "ShopPurchaseQueue",
			Handler:    _EveTradingCo_ShopPurchaseQueue_Handler,
		},
		{
			MethodName: "ShopContractQueue",
			Handler:    _EveTradingCo_ShopContractQueue_Handler,
		},
		{
			MethodName: "BuybackContractQueue",
			Handler:    _EveTradingCo_BuybackContractQueue_Handler,
		},
		{
			MethodName: "CfgGetAuthList",
			Handler:    _EveTradingCo_CfgGetAuthList_Handler,
		},
		{
			MethodName: "CfgGetBuybackSystemTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgGetBuybackSystemTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgGetShopLocationTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgGetShopLocationTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgGetBuybackSystems",
			Handler:    _EveTradingCo_CfgGetBuybackSystems_Handler,
		},
		{
			MethodName: "CfgGetShopLocations",
			Handler:    _EveTradingCo_CfgGetShopLocations_Handler,
		},
		{
			MethodName: "CfgGetMarkets",
			Handler:    _EveTradingCo_CfgGetMarkets_Handler,
		},
		{
			MethodName: "CfgGetMarketNames",
			Handler:    _EveTradingCo_CfgGetMarketNames_Handler,
		},
		{
			MethodName: "CfgGetBuybackBundleKeys",
			Handler:    _EveTradingCo_CfgGetBuybackBundleKeys_Handler,
		},
		{
			MethodName: "CfgGetShopBundleKeys",
			Handler:    _EveTradingCo_CfgGetShopBundleKeys_Handler,
		},
		{
			MethodName: "CfgGetConstData",
			Handler:    _EveTradingCo_CfgGetConstData_Handler,
		},
		{
			MethodName: "CfgSetAuthList",
			Handler:    _EveTradingCo_CfgSetAuthList_Handler,
		},
		{
			MethodName: "CfgSetConstData",
			Handler:    _EveTradingCo_CfgSetConstData_Handler,
		},
		{
			MethodName: "CfgMergeBuybackSystemTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgMergeBuybackSystemTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgMergeShopLocationTypeMapsBuilder",
			Handler:    _EveTradingCo_CfgMergeShopLocationTypeMapsBuilder_Handler,
		},
		{
			MethodName: "CfgMergeBuybackSystems",
			Handler:    _EveTradingCo_CfgMergeBuybackSystems_Handler,
		},
		{
			MethodName: "CfgMergeShopLocations",
			Handler:    _EveTradingCo_CfgMergeShopLocations_Handler,
		},
		{
			MethodName: "CfgMergeMarkets",
			Handler:    _EveTradingCo_CfgMergeMarkets_Handler,
		},
		{
			MethodName: "ShopDeletePurchases",
			Handler:    _EveTradingCo_ShopDeletePurchases_Handler,
		},
		{
			MethodName: "EsiAppLogin",
			Handler:    _EveTradingCo_EsiAppLogin_Handler,
		},
		{
			MethodName: "CharacterInfo",
			Handler:    _EveTradingCo_CharacterInfo_Handler,
		},
		{
			MethodName: "CorporationInfo",
			Handler:    _EveTradingCo_CorporationInfo_Handler,
		},
		{
			MethodName: "AllianceInfo",
			Handler:    _EveTradingCo_AllianceInfo_Handler,
		},
		{
			MethodName: "Parse",
			Handler:    _EveTradingCo_Parse_Handler,
		},
		{
			MethodName: "NewBuybackAppraisal",
			Handler:    _EveTradingCo_NewBuybackAppraisal_Handler,
		},
		{
			MethodName: "NewShopAppraisal",
			Handler:    _EveTradingCo_NewShopAppraisal_Handler,
		},
		{
			MethodName: "UserData",
			Handler:    _EveTradingCo_UserData_Handler,
		},
		{
			MethodName: "ShopInventory",
			Handler:    _EveTradingCo_ShopInventory_Handler,
		},
		{
			MethodName: "ShopMakePurchase",
			Handler:    _EveTradingCo_ShopMakePurchase_Handler,
		},
		{
			MethodName: "ShopCancelPurchase",
			Handler:    _EveTradingCo_ShopCancelPurchase_Handler,
		},
		{
			MethodName: "GetBuybackAppraisal",
			Handler:    _EveTradingCo_GetBuybackAppraisal_Handler,
		},
		{
			MethodName: "GetShopAppraisal",
			Handler:    _EveTradingCo_GetShopAppraisal_Handler,
		},
		{
			MethodName: "StatusBuybackAppraisal",
			Handler:    _EveTradingCo_StatusBuybackAppraisal_Handler,
		},
		{
			MethodName: "StatusShopAppraisal",
			Handler:    _EveTradingCo_StatusShopAppraisal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "etco.proto",
}
