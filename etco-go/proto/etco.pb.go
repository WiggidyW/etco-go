// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: etco.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_EC_OK              ErrorCode = 0
	ErrorCode_EC_SERVER_ERROR    ErrorCode = 1
	ErrorCode_EC_INVALID_REQUEST ErrorCode = 2
	ErrorCode_EC_INVALID_MERGE   ErrorCode = 3
	ErrorCode_EC_BOOTSTRAP_UNSET ErrorCode = 4
	ErrorCode_EC_NOT_FOUND       ErrorCode = 5
	ErrorCode_EC_TOKEN_INVALID   ErrorCode = 6
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "EC_OK",
		1: "EC_SERVER_ERROR",
		2: "EC_INVALID_REQUEST",
		3: "EC_INVALID_MERGE",
		4: "EC_BOOTSTRAP_UNSET",
		5: "EC_NOT_FOUND",
		6: "EC_TOKEN_INVALID",
	}
	ErrorCode_value = map[string]int32{
		"EC_OK":              0,
		"EC_SERVER_ERROR":    1,
		"EC_INVALID_REQUEST": 2,
		"EC_INVALID_MERGE":   3,
		"EC_BOOTSTRAP_UNSET": 4,
		"EC_NOT_FOUND":       5,
		"EC_TOKEN_INVALID":   6,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{0}
}

type EsiApp int32

const (
	EsiApp_EA_AUTH           EsiApp = 0
	EsiApp_EA_MARKETS        EsiApp = 1
	EsiApp_EA_CORPORATION    EsiApp = 2
	EsiApp_EA_STRUCTURE_INFO EsiApp = 3
)

// Enum value maps for EsiApp.
var (
	EsiApp_name = map[int32]string{
		0: "EA_AUTH",
		1: "EA_MARKETS",
		2: "EA_CORPORATION",
		3: "EA_STRUCTURE_INFO",
	}
	EsiApp_value = map[string]int32{
		"EA_AUTH":           0,
		"EA_MARKETS":        1,
		"EA_CORPORATION":    2,
		"EA_STRUCTURE_INFO": 3,
	}
)

func (x EsiApp) Enum() *EsiApp {
	p := new(EsiApp)
	*p = x
	return p
}

func (x EsiApp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EsiApp) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[1].Descriptor()
}

func (EsiApp) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[1]
}

func (x EsiApp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EsiApp.Descriptor instead.
func (EsiApp) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{1}
}

type MakePurchaseStatus int32

const (
	MakePurchaseStatus_MPS_NONE                           MakePurchaseStatus = 0
	MakePurchaseStatus_MPS_SUCCESS                        MakePurchaseStatus = 1
	MakePurchaseStatus_MPS_COOLDOWN_LIMIT                 MakePurchaseStatus = 2
	MakePurchaseStatus_MPS_MAX_ACTIVE_LIMIT               MakePurchaseStatus = 3
	MakePurchaseStatus_MPS_ITEMS_REJECTED                 MakePurchaseStatus = 4
	MakePurchaseStatus_MPS_ITEMS_UNAVAILABLE              MakePurchaseStatus = 5
	MakePurchaseStatus_MPS_ITEMS_REJECTED_AND_UNAVAILABLE MakePurchaseStatus = 6
)

// Enum value maps for MakePurchaseStatus.
var (
	MakePurchaseStatus_name = map[int32]string{
		0: "MPS_NONE",
		1: "MPS_SUCCESS",
		2: "MPS_COOLDOWN_LIMIT",
		3: "MPS_MAX_ACTIVE_LIMIT",
		4: "MPS_ITEMS_REJECTED",
		5: "MPS_ITEMS_UNAVAILABLE",
		6: "MPS_ITEMS_REJECTED_AND_UNAVAILABLE",
	}
	MakePurchaseStatus_value = map[string]int32{
		"MPS_NONE":                           0,
		"MPS_SUCCESS":                        1,
		"MPS_COOLDOWN_LIMIT":                 2,
		"MPS_MAX_ACTIVE_LIMIT":               3,
		"MPS_ITEMS_REJECTED":                 4,
		"MPS_ITEMS_UNAVAILABLE":              5,
		"MPS_ITEMS_REJECTED_AND_UNAVAILABLE": 6,
	}
)

func (x MakePurchaseStatus) Enum() *MakePurchaseStatus {
	p := new(MakePurchaseStatus)
	*p = x
	return p
}

func (x MakePurchaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MakePurchaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[2].Descriptor()
}

func (MakePurchaseStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[2]
}

func (x MakePurchaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MakePurchaseStatus.Descriptor instead.
func (MakePurchaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{2}
}

type CancelPurchaseStatus int32

const (
	CancelPurchaseStatus_CPS_SUCCESS                      CancelPurchaseStatus = 0
	CancelPurchaseStatus_CPS_COOLDOWN_LIMIT               CancelPurchaseStatus = 1
	CancelPurchaseStatus_CPS_NOT_FOUND                    CancelPurchaseStatus = 2
	CancelPurchaseStatus_CPS_COOLDOWN_LIMIT_AND_NOT_FOUND CancelPurchaseStatus = 3
	CancelPurchaseStatus_CPS_NOT_ACTIVE                   CancelPurchaseStatus = 4
)

// Enum value maps for CancelPurchaseStatus.
var (
	CancelPurchaseStatus_name = map[int32]string{
		0: "CPS_SUCCESS",
		1: "CPS_COOLDOWN_LIMIT",
		2: "CPS_NOT_FOUND",
		3: "CPS_COOLDOWN_LIMIT_AND_NOT_FOUND",
		4: "CPS_NOT_ACTIVE",
	}
	CancelPurchaseStatus_value = map[string]int32{
		"CPS_SUCCESS":                      0,
		"CPS_COOLDOWN_LIMIT":               1,
		"CPS_NOT_FOUND":                    2,
		"CPS_COOLDOWN_LIMIT_AND_NOT_FOUND": 3,
		"CPS_NOT_ACTIVE":                   4,
	}
)

func (x CancelPurchaseStatus) Enum() *CancelPurchaseStatus {
	p := new(CancelPurchaseStatus)
	*p = x
	return p
}

func (x CancelPurchaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelPurchaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[3].Descriptor()
}

func (CancelPurchaseStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[3]
}

func (x CancelPurchaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelPurchaseStatus.Descriptor instead.
func (CancelPurchaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{3}
}

type ContractStatus int32

const (
	ContractStatus_CS_UNKNOWN             ContractStatus = 0
	ContractStatus_CS_OUTSTANDING         ContractStatus = 1
	ContractStatus_CS_IN_PROGRESS         ContractStatus = 2
	ContractStatus_CS_FINISHED_ISSUER     ContractStatus = 3
	ContractStatus_CS_FINISHED_CONTRACTOR ContractStatus = 4
	ContractStatus_CS_FINISHED            ContractStatus = 5
	ContractStatus_CS_CANCELLED           ContractStatus = 6
	ContractStatus_CS_REJECTED            ContractStatus = 7
	ContractStatus_CS_FAILED              ContractStatus = 8
	ContractStatus_CS_DELETED             ContractStatus = 9
	ContractStatus_CS_REVERSED            ContractStatus = 10
)

// Enum value maps for ContractStatus.
var (
	ContractStatus_name = map[int32]string{
		0:  "CS_UNKNOWN",
		1:  "CS_OUTSTANDING",
		2:  "CS_IN_PROGRESS",
		3:  "CS_FINISHED_ISSUER",
		4:  "CS_FINISHED_CONTRACTOR",
		5:  "CS_FINISHED",
		6:  "CS_CANCELLED",
		7:  "CS_REJECTED",
		8:  "CS_FAILED",
		9:  "CS_DELETED",
		10: "CS_REVERSED",
	}
	ContractStatus_value = map[string]int32{
		"CS_UNKNOWN":             0,
		"CS_OUTSTANDING":         1,
		"CS_IN_PROGRESS":         2,
		"CS_FINISHED_ISSUER":     3,
		"CS_FINISHED_CONTRACTOR": 4,
		"CS_FINISHED":            5,
		"CS_CANCELLED":           6,
		"CS_REJECTED":            7,
		"CS_FAILED":              8,
		"CS_DELETED":             9,
		"CS_REVERSED":            10,
	}
)

func (x ContractStatus) Enum() *ContractStatus {
	p := new(ContractStatus)
	*p = x
	return p
}

func (x ContractStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[4].Descriptor()
}

func (ContractStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[4]
}

func (x ContractStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractStatus.Descriptor instead.
func (ContractStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{4}
}

type EntityKind int32

const (
	EntityKind_EK_UNKNOWN     EntityKind = 0
	EntityKind_EK_CHARACTER   EntityKind = 1
	EntityKind_EK_CORPORATION EntityKind = 2
	EntityKind_EK_ALLIANCE    EntityKind = 3
)

// Enum value maps for EntityKind.
var (
	EntityKind_name = map[int32]string{
		0: "EK_UNKNOWN",
		1: "EK_CHARACTER",
		2: "EK_CORPORATION",
		3: "EK_ALLIANCE",
	}
	EntityKind_value = map[string]int32{
		"EK_UNKNOWN":     0,
		"EK_CHARACTER":   1,
		"EK_CORPORATION": 2,
		"EK_ALLIANCE":    3,
	}
)

func (x EntityKind) Enum() *EntityKind {
	p := new(EntityKind)
	*p = x
	return p
}

func (x EntityKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityKind) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[5].Descriptor()
}

func (EntityKind) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[5]
}

func (x EntityKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityKind.Descriptor instead.
func (EntityKind) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{5}
}

type AppraisalStatus int32

const (
	AppraisalStatus_AS_UNDEFINED      AppraisalStatus = 0
	AppraisalStatus_AS_CONTRACT       AppraisalStatus = 1
	AppraisalStatus_AS_PURCHASE_QUEUE AppraisalStatus = 2
)

// Enum value maps for AppraisalStatus.
var (
	AppraisalStatus_name = map[int32]string{
		0: "AS_UNDEFINED",
		1: "AS_CONTRACT",
		2: "AS_PURCHASE_QUEUE",
	}
	AppraisalStatus_value = map[string]int32{
		"AS_UNDEFINED":      0,
		"AS_CONTRACT":       1,
		"AS_PURCHASE_QUEUE": 2,
	}
)

func (x AppraisalStatus) Enum() *AppraisalStatus {
	p := new(AppraisalStatus)
	*p = x
	return p
}

func (x AppraisalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppraisalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[6].Descriptor()
}

func (AppraisalStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[6]
}

func (x AppraisalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppraisalStatus.Descriptor instead.
func (AppraisalStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{6}
}

type HaulRewardStrategy int32

const (
	HaulRewardStrategy_HRS_INVALID    HaulRewardStrategy = 0 // server will return error if this value is a parameter anywhere
	HaulRewardStrategy_HRS_LESSER_OF  HaulRewardStrategy = 1 // lesser of collateral or m3fee
	HaulRewardStrategy_HRS_GREATER_OF HaulRewardStrategy = 2 // greater of collateral or m3fee
	HaulRewardStrategy_HRS_SUM        HaulRewardStrategy = 3 // sum of collateral and m3fee
)

// Enum value maps for HaulRewardStrategy.
var (
	HaulRewardStrategy_name = map[int32]string{
		0: "HRS_INVALID",
		1: "HRS_LESSER_OF",
		2: "HRS_GREATER_OF",
		3: "HRS_SUM",
	}
	HaulRewardStrategy_value = map[string]int32{
		"HRS_INVALID":    0,
		"HRS_LESSER_OF":  1,
		"HRS_GREATER_OF": 2,
		"HRS_SUM":        3,
	}
)

func (x HaulRewardStrategy) Enum() *HaulRewardStrategy {
	p := new(HaulRewardStrategy)
	*p = x
	return p
}

func (x HaulRewardStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HaulRewardStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[7].Descriptor()
}

func (HaulRewardStrategy) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[7]
}

func (x HaulRewardStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HaulRewardStrategy.Descriptor instead.
func (HaulRewardStrategy) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{7}
}

type HaulRewardKind int32

const (
	HaulRewardKind_HRK_INVALID               HaulRewardKind = 0
	HaulRewardKind_HRK_COLLATERAL            HaulRewardKind = 1
	HaulRewardKind_HRK_M3FEE                 HaulRewardKind = 2
	HaulRewardKind_HRK_SUM                   HaulRewardKind = 3 // collateral + m3 fee
	HaulRewardKind_HRK_MIN_REWARD_COLLATERAL HaulRewardKind = 4
	HaulRewardKind_HRK_MIN_REWARD_M3FEE      HaulRewardKind = 5
	HaulRewardKind_HRK_MIN_REWARD_SUM        HaulRewardKind = 6
	HaulRewardKind_HRK_MAX_REWARD_COLLATERAL HaulRewardKind = 7
	HaulRewardKind_HRK_MAX_REWARD_M3FEE      HaulRewardKind = 8
	HaulRewardKind_HRK_MAX_REWARD_SUM        HaulRewardKind = 9
)

// Enum value maps for HaulRewardKind.
var (
	HaulRewardKind_name = map[int32]string{
		0: "HRK_INVALID",
		1: "HRK_COLLATERAL",
		2: "HRK_M3FEE",
		3: "HRK_SUM",
		4: "HRK_MIN_REWARD_COLLATERAL",
		5: "HRK_MIN_REWARD_M3FEE",
		6: "HRK_MIN_REWARD_SUM",
		7: "HRK_MAX_REWARD_COLLATERAL",
		8: "HRK_MAX_REWARD_M3FEE",
		9: "HRK_MAX_REWARD_SUM",
	}
	HaulRewardKind_value = map[string]int32{
		"HRK_INVALID":               0,
		"HRK_COLLATERAL":            1,
		"HRK_M3FEE":                 2,
		"HRK_SUM":                   3,
		"HRK_MIN_REWARD_COLLATERAL": 4,
		"HRK_MIN_REWARD_M3FEE":      5,
		"HRK_MIN_REWARD_SUM":        6,
		"HRK_MAX_REWARD_COLLATERAL": 7,
		"HRK_MAX_REWARD_M3FEE":      8,
		"HRK_MAX_REWARD_SUM":        9,
	}
)

func (x HaulRewardKind) Enum() *HaulRewardKind {
	p := new(HaulRewardKind)
	*p = x
	return p
}

func (x HaulRewardKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HaulRewardKind) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[8].Descriptor()
}

func (HaulRewardKind) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[8]
}

func (x HaulRewardKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HaulRewardKind.Descriptor instead.
func (HaulRewardKind) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{8}
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{0}
}

type BasicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *BasicRequest) Reset() {
	*x = BasicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicRequest) ProtoMessage() {}

func (x *BasicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicRequest.ProtoReflect.Descriptor instead.
func (*BasicRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{1}
}

func (x *BasicRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string    `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`                          // error message
	Code  ErrorCode `protobuf:"varint,2,opt,name=code,proto3,enum=etco_proto.ErrorCode" json:"code,omitempty"` // error code
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ErrorResponse) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_EC_OK
}

type NamedTypeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId                int32   `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	TypeStrIndex          int32   `protobuf:"varint,2,opt,name=type_str_index,json=typeStrIndex,proto3" json:"type_str_index,omitempty"`
	CategoryStrIndex      int32   `protobuf:"varint,3,opt,name=category_str_index,json=categoryStrIndex,proto3" json:"category_str_index,omitempty"`
	GroupStrIndex         int32   `protobuf:"varint,4,opt,name=group_str_index,json=groupStrIndex,proto3" json:"group_str_index,omitempty"`
	MarketGroupStrIndexes []int32 `protobuf:"varint,5,rep,packed,name=market_group_str_indexes,json=marketGroupStrIndexes,proto3" json:"market_group_str_indexes,omitempty"`
}

func (x *NamedTypeId) Reset() {
	*x = NamedTypeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedTypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedTypeId) ProtoMessage() {}

func (x *NamedTypeId) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedTypeId.ProtoReflect.Descriptor instead.
func (*NamedTypeId) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{3}
}

func (x *NamedTypeId) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *NamedTypeId) GetTypeStrIndex() int32 {
	if x != nil {
		return x.TypeStrIndex
	}
	return 0
}

func (x *NamedTypeId) GetCategoryStrIndex() int32 {
	if x != nil {
		return x.CategoryStrIndex
	}
	return 0
}

func (x *NamedTypeId) GetGroupStrIndex() int32 {
	if x != nil {
		return x.GroupStrIndex
	}
	return 0
}

func (x *NamedTypeId) GetMarketGroupStrIndexes() []int32 {
	if x != nil {
		return x.MarketGroupStrIndexes
	}
	return nil
}

type BasicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   int32 `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *BasicItem) Reset() {
	*x = BasicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicItem) ProtoMessage() {}

func (x *BasicItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicItem.ProtoReflect.Descriptor instead.
func (*BasicItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{4}
}

func (x *BasicItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *BasicItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type NamedBasicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   *NamedTypeId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64        `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *NamedBasicItem) Reset() {
	*x = NamedBasicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedBasicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedBasicItem) ProtoMessage() {}

func (x *NamedBasicItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedBasicItem.ProtoReflect.Descriptor instead.
func (*NamedBasicItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{5}
}

func (x *NamedBasicItem) GetTypeId() *NamedTypeId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (x *NamedBasicItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ShopLocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationInfo *LocationInfo `protobuf:"bytes,1,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
	TaxRate      float64       `protobuf:"fixed64,2,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"` // tax rate (0-1)
}

func (x *ShopLocationInfo) Reset() {
	*x = ShopLocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocationInfo) ProtoMessage() {}

func (x *ShopLocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocationInfo.ProtoReflect.Descriptor instead.
func (*ShopLocationInfo) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{6}
}

func (x *ShopLocationInfo) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *ShopLocationInfo) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

type LocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId         int64       `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	LocationStrIndex   int32       `protobuf:"varint,2,opt,name=location_str_index,json=locationStrIndex,proto3" json:"location_str_index,omitempty"`
	IsStructure        bool        `protobuf:"varint,3,opt,name=is_structure,json=isStructure,proto3" json:"is_structure,omitempty"`
	ForbiddenStructure bool        `protobuf:"varint,4,opt,name=forbidden_structure,json=forbiddenStructure,proto3" json:"forbidden_structure,omitempty"`
	SystemInfo         *SystemInfo `protobuf:"bytes,5,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
}

func (x *LocationInfo) Reset() {
	*x = LocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationInfo) ProtoMessage() {}

func (x *LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationInfo.ProtoReflect.Descriptor instead.
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{7}
}

func (x *LocationInfo) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *LocationInfo) GetLocationStrIndex() int32 {
	if x != nil {
		return x.LocationStrIndex
	}
	return 0
}

func (x *LocationInfo) GetIsStructure() bool {
	if x != nil {
		return x.IsStructure
	}
	return false
}

func (x *LocationInfo) GetForbiddenStructure() bool {
	if x != nil {
		return x.ForbiddenStructure
	}
	return false
}

func (x *LocationInfo) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

type SystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId       int32 `protobuf:"varint,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	SystemStrIndex int32 `protobuf:"varint,2,opt,name=system_str_index,json=systemStrIndex,proto3" json:"system_str_index,omitempty"`
	RegionId       int32 `protobuf:"varint,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	RegionStrIndex int32 `protobuf:"varint,4,opt,name=region_str_index,json=regionStrIndex,proto3" json:"region_str_index,omitempty"`
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{8}
}

func (x *SystemInfo) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *SystemInfo) GetSystemStrIndex() int32 {
	if x != nil {
		return x.SystemStrIndex
	}
	return 0
}

func (x *SystemInfo) GetRegionId() int32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *SystemInfo) GetRegionStrIndex() int32 {
	if x != nil {
		return x.RegionStrIndex
	}
	return 0
}

type HaulRouteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartSystemInfo *SystemInfo `protobuf:"bytes,1,opt,name=start_system_info,json=startSystemInfo,proto3" json:"start_system_info,omitempty"`
	EndSystemInfo   *SystemInfo `protobuf:"bytes,2,opt,name=end_system_info,json=endSystemInfo,proto3" json:"end_system_info,omitempty"`
}

func (x *HaulRouteInfo) Reset() {
	*x = HaulRouteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaulRouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaulRouteInfo) ProtoMessage() {}

func (x *HaulRouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaulRouteInfo.ProtoReflect.Descriptor instead.
func (*HaulRouteInfo) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{9}
}

func (x *HaulRouteInfo) GetStartSystemInfo() *SystemInfo {
	if x != nil {
		return x.StartSystemInfo
	}
	return nil
}

func (x *HaulRouteInfo) GetEndSystemInfo() *SystemInfo {
	if x != nil {
		return x.EndSystemInfo
	}
	return nil
}

type CodeAndLocationId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                // AppraisalCode
	LocationId int64  `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
}

func (x *CodeAndLocationId) Reset() {
	*x = CodeAndLocationId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeAndLocationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeAndLocationId) ProtoMessage() {}

func (x *CodeAndLocationId) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeAndLocationId.ProtoReflect.Descriptor instead.
func (*CodeAndLocationId) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{10}
}

func (x *CodeAndLocationId) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeAndLocationId) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type HaulAppraisal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rejected       bool           `protobuf:"varint,1,opt,name=rejected,proto3" json:"rejected,omitempty"`
	Code           string         `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`  // AppraisalCode
	Time           int64          `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"` // time of the appraisal
	Items          []*HaulItem    `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	Version        string         `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                             // version of the pricing scheme
	CharacterId    int32          `protobuf:"varint,6,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 0 if anonymous or unauthorized to see
	RouteInfo      *HaulRouteInfo `protobuf:"bytes,7,opt,name=route_info,json=routeInfo,proto3" json:"route_info,omitempty"`
	Price          float64        `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"` // collateral
	Tax            float64        `protobuf:"fixed64,9,opt,name=tax,proto3" json:"tax,omitempty"`
	TaxRate        float64        `protobuf:"fixed64,10,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`                      // tax rate (0-1)
	FeePerM3       float64        `protobuf:"fixed64,11,opt,name=fee_per_m3,json=feePerM3,proto3" json:"fee_per_m3,omitempty"`                 // fee per m3
	CollateralRate float64        `protobuf:"fixed64,12,opt,name=collateral_rate,json=collateralRate,proto3" json:"collateral_rate,omitempty"` // collateral rate (0-1)
	Reward         float64        `protobuf:"fixed64,13,opt,name=reward,proto3" json:"reward,omitempty"`                                       // reward
	RewardKind     HaulRewardKind `protobuf:"varint,14,opt,name=reward_kind,json=rewardKind,proto3,enum=etco_proto.HaulRewardKind" json:"reward_kind,omitempty"`
}

func (x *HaulAppraisal) Reset() {
	*x = HaulAppraisal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaulAppraisal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaulAppraisal) ProtoMessage() {}

func (x *HaulAppraisal) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaulAppraisal.ProtoReflect.Descriptor instead.
func (*HaulAppraisal) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{11}
}

func (x *HaulAppraisal) GetRejected() bool {
	if x != nil {
		return x.Rejected
	}
	return false
}

func (x *HaulAppraisal) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *HaulAppraisal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *HaulAppraisal) GetItems() []*HaulItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *HaulAppraisal) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HaulAppraisal) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *HaulAppraisal) GetRouteInfo() *HaulRouteInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

func (x *HaulAppraisal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *HaulAppraisal) GetTax() float64 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *HaulAppraisal) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

func (x *HaulAppraisal) GetFeePerM3() float64 {
	if x != nil {
		return x.FeePerM3
	}
	return 0
}

func (x *HaulAppraisal) GetCollateralRate() float64 {
	if x != nil {
		return x.CollateralRate
	}
	return 0
}

func (x *HaulAppraisal) GetReward() float64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *HaulAppraisal) GetRewardKind() HaulRewardKind {
	if x != nil {
		return x.RewardKind
	}
	return HaulRewardKind_HRK_INVALID
}

type HaulItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId              *NamedTypeId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity            int64        `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit        float64      `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	DescriptionStrIndex int32        `protobuf:"varint,4,opt,name=description_str_index,json=descriptionStrIndex,proto3" json:"description_str_index,omitempty"`
	FeePerUnit          float64      `protobuf:"fixed64,5,opt,name=fee_per_unit,json=feePerUnit,proto3" json:"fee_per_unit,omitempty"` // m3 fee per 1 unit
}

func (x *HaulItem) Reset() {
	*x = HaulItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaulItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaulItem) ProtoMessage() {}

func (x *HaulItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaulItem.ProtoReflect.Descriptor instead.
func (*HaulItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{12}
}

func (x *HaulItem) GetTypeId() *NamedTypeId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (x *HaulItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *HaulItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *HaulItem) GetDescriptionStrIndex() int32 {
	if x != nil {
		return x.DescriptionStrIndex
	}
	return 0
}

func (x *HaulItem) GetFeePerUnit() float64 {
	if x != nil {
		return x.FeePerUnit
	}
	return 0
}

type BuybackAppraisal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rejected    bool                 `protobuf:"varint,1,opt,name=rejected,proto3" json:"rejected,omitempty"`
	Code        string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`  // AppraisalCode
	Time        int64                `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"` // time of the appraisal
	Items       []*BuybackParentItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	Version     string               `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                             // version of the pricing scheme
	CharacterId int32                `protobuf:"varint,6,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 0 if anonymous or unauthorized to see
	SystemInfo  *SystemInfo          `protobuf:"bytes,7,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
	Price       float64              `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"` // sum of []parent.price_total
	Tax         float64              `protobuf:"fixed64,9,opt,name=tax,proto3" json:"tax,omitempty"`
	TaxRate     float64              `protobuf:"fixed64,10,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`      // tax rate (0-1)
	Fee         float64              `protobuf:"fixed64,11,opt,name=fee,proto3" json:"fee,omitempty"`                             // sum of item fees
	FeePerM3    float64              `protobuf:"fixed64,12,opt,name=fee_per_m3,json=feePerM3,proto3" json:"fee_per_m3,omitempty"` // fee per m3
}

func (x *BuybackAppraisal) Reset() {
	*x = BuybackAppraisal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackAppraisal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackAppraisal) ProtoMessage() {}

func (x *BuybackAppraisal) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackAppraisal.ProtoReflect.Descriptor instead.
func (*BuybackAppraisal) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{13}
}

func (x *BuybackAppraisal) GetRejected() bool {
	if x != nil {
		return x.Rejected
	}
	return false
}

func (x *BuybackAppraisal) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BuybackAppraisal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *BuybackAppraisal) GetItems() []*BuybackParentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BuybackAppraisal) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BuybackAppraisal) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *BuybackAppraisal) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

func (x *BuybackAppraisal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BuybackAppraisal) GetTax() float64 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *BuybackAppraisal) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

func (x *BuybackAppraisal) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *BuybackAppraisal) GetFeePerM3() float64 {
	if x != nil {
		return x.FeePerM3
	}
	return 0
}

type BuybackParentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId              *NamedTypeId        `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity            int64               `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit        float64             `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	DescriptionStrIndex int32               `protobuf:"varint,4,opt,name=description_str_index,json=descriptionStrIndex,proto3" json:"description_str_index,omitempty"`
	FeePerUnit          float64             `protobuf:"fixed64,5,opt,name=fee_per_unit,json=feePerUnit,proto3" json:"fee_per_unit,omitempty"`
	Children            []*BuybackChildItem `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *BuybackParentItem) Reset() {
	*x = BuybackParentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackParentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackParentItem) ProtoMessage() {}

func (x *BuybackParentItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackParentItem.ProtoReflect.Descriptor instead.
func (*BuybackParentItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{14}
}

func (x *BuybackParentItem) GetTypeId() *NamedTypeId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (x *BuybackParentItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BuybackParentItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *BuybackParentItem) GetDescriptionStrIndex() int32 {
	if x != nil {
		return x.DescriptionStrIndex
	}
	return 0
}

func (x *BuybackParentItem) GetFeePerUnit() float64 {
	if x != nil {
		return x.FeePerUnit
	}
	return 0
}

func (x *BuybackParentItem) GetChildren() []*BuybackChildItem {
	if x != nil {
		return x.Children
	}
	return nil
}

type BuybackChildItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId              *NamedTypeId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	QuantityPerParent   float64      `protobuf:"fixed64,2,opt,name=quantity_per_parent,json=quantityPerParent,proto3" json:"quantity_per_parent,omitempty"`
	PricePerUnit        float64      `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	DescriptionStrIndex int32        `protobuf:"varint,4,opt,name=description_str_index,json=descriptionStrIndex,proto3" json:"description_str_index,omitempty"`
}

func (x *BuybackChildItem) Reset() {
	*x = BuybackChildItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackChildItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackChildItem) ProtoMessage() {}

func (x *BuybackChildItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackChildItem.ProtoReflect.Descriptor instead.
func (*BuybackChildItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{15}
}

func (x *BuybackChildItem) GetTypeId() *NamedTypeId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (x *BuybackChildItem) GetQuantityPerParent() float64 {
	if x != nil {
		return x.QuantityPerParent
	}
	return 0
}

func (x *BuybackChildItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *BuybackChildItem) GetDescriptionStrIndex() int32 {
	if x != nil {
		return x.DescriptionStrIndex
	}
	return 0
}

type ShopAppraisal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rejected     bool          `protobuf:"varint,1,opt,name=rejected,proto3" json:"rejected,omitempty"`
	Code         string        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`  // AppraisalCode
	Time         int64         `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"` // time of the appraisal
	Items        []*ShopItem   `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	Version      string        `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                             // version of the pricing scheme
	CharacterId  int32         `protobuf:"varint,6,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 0 if anonymous or unauthorized to see
	LocationInfo *LocationInfo `protobuf:"bytes,7,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
	Price        float64       `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"` // sum of []item.price_total
	Tax          float64       `protobuf:"fixed64,9,opt,name=tax,proto3" json:"tax,omitempty"`
	TaxRate      float64       `protobuf:"fixed64,10,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"` // tax rate (0-1)
}

func (x *ShopAppraisal) Reset() {
	*x = ShopAppraisal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopAppraisal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopAppraisal) ProtoMessage() {}

func (x *ShopAppraisal) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopAppraisal.ProtoReflect.Descriptor instead.
func (*ShopAppraisal) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{16}
}

func (x *ShopAppraisal) GetRejected() bool {
	if x != nil {
		return x.Rejected
	}
	return false
}

func (x *ShopAppraisal) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopAppraisal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ShopAppraisal) GetItems() []*ShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopAppraisal) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ShopAppraisal) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ShopAppraisal) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *ShopAppraisal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ShopAppraisal) GetTax() float64 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *ShopAppraisal) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId              *NamedTypeId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity            int64        `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit        float64      `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	DescriptionStrIndex int32        `protobuf:"varint,4,opt,name=description_str_index,json=descriptionStrIndex,proto3" json:"description_str_index,omitempty"`
}

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{17}
}

func (x *ShopItem) GetTypeId() *NamedTypeId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (x *ShopItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ShopItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *ShopItem) GetDescriptionStrIndex() int32 {
	if x != nil {
		return x.DescriptionStrIndex
	}
	return 0
}

type PurchaseQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes        []string      `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
	LocationInfo *LocationInfo `protobuf:"bytes,2,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
}

func (x *PurchaseQueue) Reset() {
	*x = PurchaseQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseQueue) ProtoMessage() {}

func (x *PurchaseQueue) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseQueue.ProtoReflect.Descriptor instead.
func (*PurchaseQueue) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{18}
}

func (x *PurchaseQueue) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *PurchaseQueue) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId        int32          `protobuf:"varint,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Status            ContractStatus `protobuf:"varint,2,opt,name=status,proto3,enum=etco_proto.ContractStatus" json:"status,omitempty"`
	Issued            int64          `protobuf:"varint,3,opt,name=issued,proto3" json:"issued,omitempty"`
	Expires           int64          `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`
	StartLocationInfo *LocationInfo  `protobuf:"bytes,5,opt,name=start_location_info,json=startLocationInfo,proto3" json:"start_location_info,omitempty"` // null unless haul contract
	LocationInfo      *LocationInfo  `protobuf:"bytes,6,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
	Price             float64        `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	Reward            float64        `protobuf:"fixed64,8,opt,name=reward,proto3" json:"reward,omitempty"`
	EntityKind        EntityKind     `protobuf:"varint,9,opt,name=entity_kind,json=entityKind,proto3,enum=etco_proto.EntityKind" json:"entity_kind,omitempty"`
	EntityId          int32          `protobuf:"varint,10,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{19}
}

func (x *Contract) GetContractId() int32 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *Contract) GetStatus() ContractStatus {
	if x != nil {
		return x.Status
	}
	return ContractStatus_CS_UNKNOWN
}

func (x *Contract) GetIssued() int64 {
	if x != nil {
		return x.Issued
	}
	return 0
}

func (x *Contract) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *Contract) GetStartLocationInfo() *LocationInfo {
	if x != nil {
		return x.StartLocationInfo
	}
	return nil
}

func (x *Contract) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *Contract) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Contract) GetReward() float64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *Contract) GetEntityKind() EntityKind {
	if x != nil {
		return x.EntityKind
	}
	return EntityKind_EK_UNKNOWN
}

func (x *Contract) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type BuybackContractQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Contract  *Contract         `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Appraisal *BuybackAppraisal `protobuf:"bytes,3,opt,name=appraisal,proto3" json:"appraisal,omitempty"` // items are empty
}

func (x *BuybackContractQueueEntry) Reset() {
	*x = BuybackContractQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContractQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContractQueueEntry) ProtoMessage() {}

func (x *BuybackContractQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContractQueueEntry.ProtoReflect.Descriptor instead.
func (*BuybackContractQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{20}
}

func (x *BuybackContractQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BuybackContractQueueEntry) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *BuybackContractQueueEntry) GetAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

type ShopContractQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Contract  *Contract      `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Appraisal *ShopAppraisal `protobuf:"bytes,3,opt,name=appraisal,proto3" json:"appraisal,omitempty"` // items are empty
}

func (x *ShopContractQueueEntry) Reset() {
	*x = ShopContractQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopContractQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopContractQueueEntry) ProtoMessage() {}

func (x *ShopContractQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopContractQueueEntry.ProtoReflect.Descriptor instead.
func (*ShopContractQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{21}
}

func (x *ShopContractQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopContractQueueEntry) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ShopContractQueueEntry) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

type HaulContractQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Contract  *Contract      `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Appraisal *HaulAppraisal `protobuf:"bytes,3,opt,name=appraisal,proto3" json:"appraisal,omitempty"` // items are empty
}

func (x *HaulContractQueueEntry) Reset() {
	*x = HaulContractQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaulContractQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaulContractQueueEntry) ProtoMessage() {}

func (x *HaulContractQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaulContractQueueEntry.ProtoReflect.Descriptor instead.
func (*HaulContractQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{22}
}

func (x *HaulContractQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *HaulContractQueueEntry) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *HaulContractQueueEntry) GetAppraisal() *HaulAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

type CfgTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBuy      bool   `protobuf:"varint,1,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`
	Percentile uint32 `protobuf:"varint,2,opt,name=percentile,proto3" json:"percentile,omitempty"`
	Modifier   uint32 `protobuf:"varint,3,opt,name=modifier,proto3" json:"modifier,omitempty"`
	Market     string `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"` // MarketKey
}

func (x *CfgTypePricing) Reset() {
	*x = CfgTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgTypePricing) ProtoMessage() {}

func (x *CfgTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgTypePricing.ProtoReflect.Descriptor instead.
func (*CfgTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{23}
}

func (x *CfgTypePricing) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *CfgTypePricing) GetPercentile() uint32 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *CfgTypePricing) GetModifier() uint32 {
	if x != nil {
		return x.Modifier
	}
	return 0
}

func (x *CfgTypePricing) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type CfgBuybackTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// at least one of these must be set
	Pricing                *CfgTypePricing `protobuf:"bytes,1,opt,name=pricing,proto3" json:"pricing,omitempty"`
	ReprocessingEfficiency uint32          `protobuf:"varint,2,opt,name=reprocessing_efficiency,json=reprocessingEfficiency,proto3" json:"reprocessing_efficiency,omitempty"` // 0 - 100
}

func (x *CfgBuybackTypePricing) Reset() {
	*x = CfgBuybackTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgBuybackTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgBuybackTypePricing) ProtoMessage() {}

func (x *CfgBuybackTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgBuybackTypePricing.ProtoReflect.Descriptor instead.
func (*CfgBuybackTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{24}
}

func (x *CfgBuybackTypePricing) GetPricing() *CfgTypePricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

func (x *CfgBuybackTypePricing) GetReprocessingEfficiency() uint32 {
	if x != nil {
		return x.ReprocessingEfficiency
	}
	return 0
}

// wrapper for TypePricing
type CfgShopTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner *CfgTypePricing `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *CfgShopTypePricing) Reset() {
	*x = CfgShopTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgShopTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgShopTypePricing) ProtoMessage() {}

func (x *CfgShopTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgShopTypePricing.ProtoReflect.Descriptor instead.
func (*CfgShopTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{25}
}

func (x *CfgShopTypePricing) GetInner() *CfgTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for TypePricing
type CfgHaulTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner *CfgTypePricing `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *CfgHaulTypePricing) Reset() {
	*x = CfgHaulTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgHaulTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgHaulTypePricing) ProtoMessage() {}

func (x *CfgHaulTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgHaulTypePricing.ProtoReflect.Descriptor instead.
func (*CfgHaulTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{26}
}

func (x *CfgHaulTypePricing) GetInner() *CfgTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<BuybackTypeMapKey, BuybackTypeValue>
type CfgBuybackSystemTypeBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*CfgBuybackTypePricing `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CfgBuybackSystemTypeBundle) Reset() {
	*x = CfgBuybackSystemTypeBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgBuybackSystemTypeBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgBuybackSystemTypeBundle) ProtoMessage() {}

func (x *CfgBuybackSystemTypeBundle) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgBuybackSystemTypeBundle.ProtoReflect.Descriptor instead.
func (*CfgBuybackSystemTypeBundle) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{27}
}

func (x *CfgBuybackSystemTypeBundle) GetInner() map[string]*CfgBuybackTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<ShopTypeMapKey, ShopTypeValue>
type CfgShopLocationTypeBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*CfgShopTypePricing `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CfgShopLocationTypeBundle) Reset() {
	*x = CfgShopLocationTypeBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgShopLocationTypeBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgShopLocationTypeBundle) ProtoMessage() {}

func (x *CfgShopLocationTypeBundle) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgShopLocationTypeBundle.ProtoReflect.Descriptor instead.
func (*CfgShopLocationTypeBundle) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{28}
}

func (x *CfgShopLocationTypeBundle) GetInner() map[string]*CfgShopTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<HaulTypeMapKey, HaulTypeValue>
type CfgHaulRouteTypeBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*CfgHaulTypePricing `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CfgHaulRouteTypeBundle) Reset() {
	*x = CfgHaulRouteTypeBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgHaulRouteTypeBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgHaulRouteTypeBundle) ProtoMessage() {}

func (x *CfgHaulRouteTypeBundle) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgHaulRouteTypeBundle.ProtoReflect.Descriptor instead.
func (*CfgHaulRouteTypeBundle) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{29}
}

func (x *CfgHaulRouteTypeBundle) GetInner() map[string]*CfgHaulTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

type CfgBuybackSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKey string  `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3" json:"bundle_key,omitempty"` // BuybackSystemBundleKey
	M3Fee     float64 `protobuf:"fixed64,2,opt,name=m3_fee,json=m3Fee,proto3" json:"m3_fee,omitempty"`           // fee per m3
	TaxRate   float64 `protobuf:"fixed64,3,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`     // tax rate (0-1)
}

func (x *CfgBuybackSystem) Reset() {
	*x = CfgBuybackSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgBuybackSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgBuybackSystem) ProtoMessage() {}

func (x *CfgBuybackSystem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgBuybackSystem.ProtoReflect.Descriptor instead.
func (*CfgBuybackSystem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{30}
}

func (x *CfgBuybackSystem) GetBundleKey() string {
	if x != nil {
		return x.BundleKey
	}
	return ""
}

func (x *CfgBuybackSystem) GetM3Fee() float64 {
	if x != nil {
		return x.M3Fee
	}
	return 0
}

func (x *CfgBuybackSystem) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

type CfgShopLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKey   string   `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3" json:"bundle_key,omitempty"`       // ShopLocationBundleKey
	BannedFlags []string `protobuf:"bytes,2,rep,name=banned_flags,json=bannedFlags,proto3" json:"banned_flags,omitempty"` // banned asset flags
	TaxRate     float64  `protobuf:"fixed64,3,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`           // tax rate (0-1)
}

func (x *CfgShopLocation) Reset() {
	*x = CfgShopLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgShopLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgShopLocation) ProtoMessage() {}

func (x *CfgShopLocation) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgShopLocation.ProtoReflect.Descriptor instead.
func (*CfgShopLocation) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{31}
}

func (x *CfgShopLocation) GetBundleKey() string {
	if x != nil {
		return x.BundleKey
	}
	return ""
}

func (x *CfgShopLocation) GetBannedFlags() []string {
	if x != nil {
		return x.BannedFlags
	}
	return nil
}

func (x *CfgShopLocation) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

type CfgHaulRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKey      string             `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3" json:"bundle_key,omitempty"`                 // HaulRouteBundleKey
	MaxVolume      uint32             `protobuf:"varint,2,opt,name=max_volume,json=maxVolume,proto3" json:"max_volume,omitempty"`                // max volume per haul
	MinReward      uint64             `protobuf:"varint,3,opt,name=min_reward,json=minReward,proto3" json:"min_reward,omitempty"`                // min reward per haul
	MaxReward      uint64             `protobuf:"varint,4,opt,name=max_reward,json=maxReward,proto3" json:"max_reward,omitempty"`                // max reward per haul
	TaxRate        uint32             `protobuf:"varint,5,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`                      // tax rate (0 = 0%, 100 = 1.00%, 10000 = 100.00%, 5555 = 55.55%)
	M3Fee          uint32             `protobuf:"varint,6,opt,name=m3_fee,json=m3Fee,proto3" json:"m3_fee,omitempty"`                            // fee per m3
	CollateralRate uint32             `protobuf:"varint,7,opt,name=collateral_rate,json=collateralRate,proto3" json:"collateral_rate,omitempty"` // collateral rate (0 = 0%, 100 = 1.00%, 10000 = 100.00%, 5555 = 55.55%)
	RewardStrategy HaulRewardStrategy `protobuf:"varint,8,opt,name=reward_strategy,json=rewardStrategy,proto3,enum=etco_proto.HaulRewardStrategy" json:"reward_strategy,omitempty"`
}

func (x *CfgHaulRoute) Reset() {
	*x = CfgHaulRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgHaulRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgHaulRoute) ProtoMessage() {}

func (x *CfgHaulRoute) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgHaulRoute.ProtoReflect.Descriptor instead.
func (*CfgHaulRoute) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{32}
}

func (x *CfgHaulRoute) GetBundleKey() string {
	if x != nil {
		return x.BundleKey
	}
	return ""
}

func (x *CfgHaulRoute) GetMaxVolume() uint32 {
	if x != nil {
		return x.MaxVolume
	}
	return 0
}

func (x *CfgHaulRoute) GetMinReward() uint64 {
	if x != nil {
		return x.MinReward
	}
	return 0
}

func (x *CfgHaulRoute) GetMaxReward() uint64 {
	if x != nil {
		return x.MaxReward
	}
	return 0
}

func (x *CfgHaulRoute) GetTaxRate() uint32 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

func (x *CfgHaulRoute) GetM3Fee() uint32 {
	if x != nil {
		return x.M3Fee
	}
	return 0
}

func (x *CfgHaulRoute) GetCollateralRate() uint32 {
	if x != nil {
		return x.CollateralRate
	}
	return 0
}

func (x *CfgHaulRoute) GetRewardStrategy() HaulRewardStrategy {
	if x != nil {
		return x.RewardStrategy
	}
	return HaulRewardStrategy_HRS_INVALID
}

type CfgMarket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // web token
	LocationId   int64  `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	IsStructure  bool   `protobuf:"varint,3,opt,name=is_structure,json=isStructure,proto3" json:"is_structure,omitempty"`
}

func (x *CfgMarket) Reset() {
	*x = CfgMarket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMarket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMarket) ProtoMessage() {}

func (x *CfgMarket) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMarket.ProtoReflect.Descriptor instead.
func (*CfgMarket) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{33}
}

func (x *CfgMarket) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *CfgMarket) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *CfgMarket) GetIsStructure() bool {
	if x != nil {
		return x.IsStructure
	}
	return false
}

type CfgConstData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseMaxActive            int32  `protobuf:"varint,1,opt,name=purchase_max_active,json=purchaseMaxActive,proto3" json:"purchase_max_active,omitempty"`
	MakePurchaseCooldown         int32  `protobuf:"varint,2,opt,name=make_purchase_cooldown,json=makePurchaseCooldown,proto3" json:"make_purchase_cooldown,omitempty"`
	CancelPurchaseCooldown       int32  `protobuf:"varint,3,opt,name=cancel_purchase_cooldown,json=cancelPurchaseCooldown,proto3" json:"cancel_purchase_cooldown,omitempty"`
	CorporationWebRefreshToken   string `protobuf:"bytes,4,opt,name=corporation_web_refresh_token,json=corporationWebRefreshToken,proto3" json:"corporation_web_refresh_token,omitempty"`
	StructureInfoWebRefreshToken string `protobuf:"bytes,5,opt,name=structure_info_web_refresh_token,json=structureInfoWebRefreshToken,proto3" json:"structure_info_web_refresh_token,omitempty"`
	DiscordChannel               string `protobuf:"bytes,6,opt,name=discord_channel,json=discordChannel,proto3" json:"discord_channel,omitempty"`
	BuybackContractNotifications bool   `protobuf:"varint,7,opt,name=buyback_contract_notifications,json=buybackContractNotifications,proto3" json:"buyback_contract_notifications,omitempty"`
	ShopContractNotifications    bool   `protobuf:"varint,8,opt,name=shop_contract_notifications,json=shopContractNotifications,proto3" json:"shop_contract_notifications,omitempty"`
	HaulContractNotifications    bool   `protobuf:"varint,9,opt,name=haul_contract_notifications,json=haulContractNotifications,proto3" json:"haul_contract_notifications,omitempty"`
	PurchaseNotifications        bool   `protobuf:"varint,10,opt,name=purchase_notifications,json=purchaseNotifications,proto3" json:"purchase_notifications,omitempty"`
}

func (x *CfgConstData) Reset() {
	*x = CfgConstData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgConstData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgConstData) ProtoMessage() {}

func (x *CfgConstData) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgConstData.ProtoReflect.Descriptor instead.
func (*CfgConstData) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{34}
}

func (x *CfgConstData) GetPurchaseMaxActive() int32 {
	if x != nil {
		return x.PurchaseMaxActive
	}
	return 0
}

func (x *CfgConstData) GetMakePurchaseCooldown() int32 {
	if x != nil {
		return x.MakePurchaseCooldown
	}
	return 0
}

func (x *CfgConstData) GetCancelPurchaseCooldown() int32 {
	if x != nil {
		return x.CancelPurchaseCooldown
	}
	return 0
}

func (x *CfgConstData) GetCorporationWebRefreshToken() string {
	if x != nil {
		return x.CorporationWebRefreshToken
	}
	return ""
}

func (x *CfgConstData) GetStructureInfoWebRefreshToken() string {
	if x != nil {
		return x.StructureInfoWebRefreshToken
	}
	return ""
}

func (x *CfgConstData) GetDiscordChannel() string {
	if x != nil {
		return x.DiscordChannel
	}
	return ""
}

func (x *CfgConstData) GetBuybackContractNotifications() bool {
	if x != nil {
		return x.BuybackContractNotifications
	}
	return false
}

func (x *CfgConstData) GetShopContractNotifications() bool {
	if x != nil {
		return x.ShopContractNotifications
	}
	return false
}

func (x *CfgConstData) GetHaulContractNotifications() bool {
	if x != nil {
		return x.HaulContractNotifications
	}
	return false
}

func (x *CfgConstData) GetPurchaseNotifications() bool {
	if x != nil {
		return x.PurchaseNotifications
	}
	return false
}

// list of valid IDs for authentication
type CfgAuthList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authentication is checked in this exact order, stopping on first match
	BannedCharacterIds   []int32 `protobuf:"varint,1,rep,packed,name=banned_character_ids,json=bannedCharacterIds,proto3" json:"banned_character_ids,omitempty"`       // denied
	PermitCharacterIds   []int32 `protobuf:"varint,2,rep,packed,name=permit_character_ids,json=permitCharacterIds,proto3" json:"permit_character_ids,omitempty"`       // allowed
	BannedCorporationIds []int32 `protobuf:"varint,3,rep,packed,name=banned_corporation_ids,json=bannedCorporationIds,proto3" json:"banned_corporation_ids,omitempty"` // denied
	PermitCorporationIds []int32 `protobuf:"varint,4,rep,packed,name=permit_corporation_ids,json=permitCorporationIds,proto3" json:"permit_corporation_ids,omitempty"` // allowed
	PermitAllianceIds    []int32 `protobuf:"varint,5,rep,packed,name=permit_alliance_ids,json=permitAllianceIds,proto3" json:"permit_alliance_ids,omitempty"`          // allowed
}

func (x *CfgAuthList) Reset() {
	*x = CfgAuthList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgAuthList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgAuthList) ProtoMessage() {}

func (x *CfgAuthList) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgAuthList.ProtoReflect.Descriptor instead.
func (*CfgAuthList) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{35}
}

func (x *CfgAuthList) GetBannedCharacterIds() []int32 {
	if x != nil {
		return x.BannedCharacterIds
	}
	return nil
}

func (x *CfgAuthList) GetPermitCharacterIds() []int32 {
	if x != nil {
		return x.PermitCharacterIds
	}
	return nil
}

func (x *CfgAuthList) GetBannedCorporationIds() []int32 {
	if x != nil {
		return x.BannedCorporationIds
	}
	return nil
}

func (x *CfgAuthList) GetPermitCorporationIds() []int32 {
	if x != nil {
		return x.PermitCorporationIds
	}
	return nil
}

func (x *CfgAuthList) GetPermitAllianceIds() []int32 {
	if x != nil {
		return x.PermitAllianceIds
	}
	return nil
}

type TypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []int32        `protobuf:"varint,1,rep,packed,name=types,proto3" json:"types,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TypesResponse) Reset() {
	*x = TypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypesResponse) ProtoMessage() {}

func (x *TypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypesResponse.ProtoReflect.Descriptor instead.
func (*TypesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{36}
}

func (x *TypesResponse) GetTypes() []int32 {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *TypesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type NamedTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []int32 `protobuf:"varint,1,rep,packed,name=types,proto3" json:"types,omitempty"`
}

func (x *NamedTypesRequest) Reset() {
	*x = NamedTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedTypesRequest) ProtoMessage() {}

func (x *NamedTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedTypesRequest.ProtoReflect.Descriptor instead.
func (*NamedTypesRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{37}
}

func (x *NamedTypesRequest) GetTypes() []int32 {
	if x != nil {
		return x.Types
	}
	return nil
}

type NamedTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []*NamedTypeId `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"` // same order as request
	Strs  []string       `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"` // any invalid type_ids
}

func (x *NamedTypesResponse) Reset() {
	*x = NamedTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedTypesResponse) ProtoMessage() {}

func (x *NamedTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedTypesResponse.ProtoReflect.Descriptor instead.
func (*NamedTypesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{38}
}

func (x *NamedTypesResponse) GetTypes() []*NamedTypeId {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *NamedTypesResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *NamedTypesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type SystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems []int32 `protobuf:"varint,1,rep,packed,name=systems,proto3" json:"systems,omitempty"`
}

func (x *SystemsRequest) Reset() {
	*x = SystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemsRequest) ProtoMessage() {}

func (x *SystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemsRequest.ProtoReflect.Descriptor instead.
func (*SystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{39}
}

func (x *SystemsRequest) GetSystems() []int32 {
	if x != nil {
		return x.Systems
	}
	return nil
}

type SystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems []*SystemInfo  `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"` // same order as request
	Strs    []string       `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Error   *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SystemsResponse) Reset() {
	*x = SystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemsResponse) ProtoMessage() {}

func (x *SystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemsResponse.ProtoReflect.Descriptor instead.
func (*SystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{40}
}

func (x *SystemsResponse) GetSystems() []*SystemInfo {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *SystemsResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *SystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type HaulRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*HaulRouteInfo `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	Strs   []string         `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Error  *ErrorResponse   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *HaulRoutesResponse) Reset() {
	*x = HaulRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaulRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaulRoutesResponse) ProtoMessage() {}

func (x *HaulRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaulRoutesResponse.ProtoReflect.Descriptor instead.
func (*HaulRoutesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{41}
}

func (x *HaulRoutesResponse) GetRoutes() []*HaulRouteInfo {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *HaulRoutesResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *HaulRoutesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type AssetFlagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags []string       `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AssetFlagsResponse) Reset() {
	*x = AssetFlagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetFlagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetFlagsResponse) ProtoMessage() {}

func (x *AssetFlagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetFlagsResponse.ProtoReflect.Descriptor instead.
func (*AssetFlagsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{42}
}

func (x *AssetFlagsResponse) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *AssetFlagsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type AllShopLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*ShopLocationInfo `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	Strs      []string            `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Error     *ErrorResponse      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AllShopLocationsResponse) Reset() {
	*x = AllShopLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllShopLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllShopLocationsResponse) ProtoMessage() {}

func (x *AllShopLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllShopLocationsResponse.ProtoReflect.Descriptor instead.
func (*AllShopLocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{43}
}

func (x *AllShopLocationsResponse) GetLocations() []*ShopLocationInfo {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *AllShopLocationsResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *AllShopLocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type LocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []int64 `protobuf:"varint,1,rep,packed,name=locations,proto3" json:"locations,omitempty"`
}

func (x *LocationsRequest) Reset() {
	*x = LocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationsRequest) ProtoMessage() {}

func (x *LocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationsRequest.ProtoReflect.Descriptor instead.
func (*LocationsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{44}
}

func (x *LocationsRequest) GetLocations() []int64 {
	if x != nil {
		return x.Locations
	}
	return nil
}

type LocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*LocationInfo `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"` // same order as request
	Strs      []string        `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Error     *ErrorResponse  `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LocationsResponse) Reset() {
	*x = LocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationsResponse) ProtoMessage() {}

func (x *LocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationsResponse.ProtoReflect.Descriptor instead.
func (*LocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{45}
}

func (x *LocationsResponse) GetLocations() []*LocationInfo {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *LocationsResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *LocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ParseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ParseRequest) Reset() {
	*x = ParseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRequest) ProtoMessage() {}

func (x *ParseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRequest.ProtoReflect.Descriptor instead.
func (*ParseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{46}
}

func (x *ParseRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ParseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnownItems   []*NamedBasicItem `protobuf:"bytes,1,rep,name=known_items,json=knownItems,proto3" json:"known_items,omitempty"`
	UnknownItems []*NamedBasicItem `protobuf:"bytes,2,rep,name=unknown_items,json=unknownItems,proto3" json:"unknown_items,omitempty"`
	Strs         []string          `protobuf:"bytes,3,rep,name=strs,proto3" json:"strs,omitempty"`
	Error        *ErrorResponse    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ParseResponse) Reset() {
	*x = ParseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseResponse) ProtoMessage() {}

func (x *ParseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseResponse.ProtoReflect.Descriptor instead.
func (*ParseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{47}
}

func (x *ParseResponse) GetKnownItems() []*NamedBasicItem {
	if x != nil {
		return x.KnownItems
	}
	return nil
}

func (x *ParseResponse) GetUnknownItems() []*NamedBasicItem {
	if x != nil {
		return x.UnknownItems
	}
	return nil
}

func (x *ParseResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *ParseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessCode string `protobuf:"bytes,1,opt,name=access_code,json=accessCode,proto3" json:"access_code,omitempty"` // esi sso code
	App        EsiApp `protobuf:"varint,2,opt,name=app,proto3,enum=etco_proto.EsiApp" json:"app,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{48}
}

func (x *LoginRequest) GetAccessCode() string {
	if x != nil {
		return x.AccessCode
	}
	return ""
}

func (x *LoginRequest) GetApp() EsiApp {
	if x != nil {
		return x.App
	}
	return EsiApp_EA_AUTH
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string         `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	CharacterId  int32          `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Admin        bool           `protobuf:"varint,3,opt,name=admin,proto3" json:"admin,omitempty"`
	Error        *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{49}
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *LoginResponse) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *LoginResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type TokenInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	App          EsiApp `protobuf:"varint,2,opt,name=app,proto3,enum=etco_proto.EsiApp" json:"app,omitempty"`
}

func (x *TokenInfoRequest) Reset() {
	*x = TokenInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfoRequest) ProtoMessage() {}

func (x *TokenInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfoRequest.ProtoReflect.Descriptor instead.
func (*TokenInfoRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{50}
}

func (x *TokenInfoRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *TokenInfoRequest) GetApp() EsiApp {
	if x != nil {
		return x.App
	}
	return EsiApp_EA_AUTH
}

type TokenInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId int32          `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Admin       bool           `protobuf:"varint,2,opt,name=admin,proto3" json:"admin,omitempty"`
	Error       *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TokenInfoResponse) Reset() {
	*x = TokenInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfoResponse) ProtoMessage() {}

func (x *TokenInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfoResponse.ProtoReflect.Descriptor instead.
func (*TokenInfoResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{51}
}

func (x *TokenInfoResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *TokenInfoResponse) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *TokenInfoResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type EntityInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId int32 `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EntityInfoRequest) Reset() {
	*x = EntityInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityInfoRequest) ProtoMessage() {}

func (x *EntityInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityInfoRequest.ProtoReflect.Descriptor instead.
func (*EntityInfoRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{52}
}

func (x *EntityInfoRequest) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type CharacterInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId   int32          `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	CorporationId int32          `protobuf:"varint,2,opt,name=corporation_id,json=corporationId,proto3" json:"corporation_id,omitempty"`
	AllianceId    int32          `protobuf:"varint,3,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"` // 0 = null
	Name          string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Error         *ErrorResponse `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CharacterInfoResponse) Reset() {
	*x = CharacterInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterInfoResponse) ProtoMessage() {}

func (x *CharacterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterInfoResponse.ProtoReflect.Descriptor instead.
func (*CharacterInfoResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{53}
}

func (x *CharacterInfoResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *CharacterInfoResponse) GetCorporationId() int32 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *CharacterInfoResponse) GetAllianceId() int32 {
	if x != nil {
		return x.AllianceId
	}
	return 0
}

func (x *CharacterInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterInfoResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CorporationInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorporationId int32          `protobuf:"varint,1,opt,name=corporation_id,json=corporationId,proto3" json:"corporation_id,omitempty"`
	AllianceId    int32          `protobuf:"varint,2,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"` // 0 = null
	Name          string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ticker        string         `protobuf:"bytes,4,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Error         *ErrorResponse `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CorporationInfoResponse) Reset() {
	*x = CorporationInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorporationInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorporationInfoResponse) ProtoMessage() {}

func (x *CorporationInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorporationInfoResponse.ProtoReflect.Descriptor instead.
func (*CorporationInfoResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{54}
}

func (x *CorporationInfoResponse) GetCorporationId() int32 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *CorporationInfoResponse) GetAllianceId() int32 {
	if x != nil {
		return x.AllianceId
	}
	return 0
}

func (x *CorporationInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CorporationInfoResponse) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *CorporationInfoResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type AllianceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllianceId int32          `protobuf:"varint,1,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"`
	Name       string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ticker     string         `protobuf:"bytes,3,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AllianceInfoResponse) Reset() {
	*x = AllianceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceInfoResponse) ProtoMessage() {}

func (x *AllianceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceInfoResponse.ProtoReflect.Descriptor instead.
func (*AllianceInfoResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{55}
}

func (x *AllianceInfoResponse) GetAllianceId() int32 {
	if x != nil {
		return x.AllianceId
	}
	return 0
}

func (x *AllianceInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AllianceInfoResponse) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *AllianceInfoResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type NewAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TerritoryId int64        `protobuf:"varint,1,opt,name=territory_id,json=territoryId,proto3" json:"territory_id,omitempty"` // SystemId / LocationId
	Items       []*BasicItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NewAppraisalRequest) Reset() {
	*x = NewAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAppraisalRequest) ProtoMessage() {}

func (x *NewAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAppraisalRequest.ProtoReflect.Descriptor instead.
func (*NewAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{56}
}

func (x *NewAppraisalRequest) GetTerritoryId() int64 {
	if x != nil {
		return x.TerritoryId
	}
	return 0
}

func (x *NewAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type NewHaulAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartSystemId int32        `protobuf:"varint,1,opt,name=start_system_id,json=startSystemId,proto3" json:"start_system_id,omitempty"`
	EndSystemId   int32        `protobuf:"varint,2,opt,name=end_system_id,json=endSystemId,proto3" json:"end_system_id,omitempty"`
	Items         []*BasicItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NewHaulAppraisalRequest) Reset() {
	*x = NewHaulAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewHaulAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewHaulAppraisalRequest) ProtoMessage() {}

func (x *NewHaulAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewHaulAppraisalRequest.ProtoReflect.Descriptor instead.
func (*NewHaulAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{57}
}

func (x *NewHaulAppraisalRequest) GetStartSystemId() int32 {
	if x != nil {
		return x.StartSystemId
	}
	return 0
}

func (x *NewHaulAppraisalRequest) GetEndSystemId() int32 {
	if x != nil {
		return x.EndSystemId
	}
	return 0
}

func (x *NewHaulAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BuybackContractQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue      []*BuybackContractQueueEntry `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty"`
	Strs       []string                     `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool                         `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse               `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BuybackContractQueueResponse) Reset() {
	*x = BuybackContractQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContractQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContractQueueResponse) ProtoMessage() {}

func (x *BuybackContractQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContractQueueResponse.ProtoReflect.Descriptor instead.
func (*BuybackContractQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{58}
}

func (x *BuybackContractQueueResponse) GetQueue() []*BuybackContractQueueEntry {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *BuybackContractQueueResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *BuybackContractQueueResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *BuybackContractQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopContractQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue      []*ShopContractQueueEntry `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty"`
	Strs       []string                  `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool                      `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopContractQueueResponse) Reset() {
	*x = ShopContractQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopContractQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopContractQueueResponse) ProtoMessage() {}

func (x *ShopContractQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopContractQueueResponse.ProtoReflect.Descriptor instead.
func (*ShopContractQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{59}
}

func (x *ShopContractQueueResponse) GetQueue() []*ShopContractQueueEntry {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *ShopContractQueueResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *ShopContractQueueResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *ShopContractQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type HaulContractQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue      []*HaulContractQueueEntry `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty"`
	Strs       []string                  `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool                      `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *HaulContractQueueResponse) Reset() {
	*x = HaulContractQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaulContractQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaulContractQueueResponse) ProtoMessage() {}

func (x *HaulContractQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaulContractQueueResponse.ProtoReflect.Descriptor instead.
func (*HaulContractQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{60}
}

func (x *HaulContractQueueResponse) GetQueue() []*HaulContractQueueEntry {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *HaulContractQueueResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *HaulContractQueueResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *HaulContractQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type PurchaseQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue      map[int64]*PurchaseQueue `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Strs       []string                 `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool                     `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse           `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PurchaseQueueResponse) Reset() {
	*x = PurchaseQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseQueueResponse) ProtoMessage() {}

func (x *PurchaseQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseQueueResponse.ProtoReflect.Descriptor instead.
func (*PurchaseQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{61}
}

func (x *PurchaseQueueResponse) GetQueue() map[int64]*PurchaseQueue {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *PurchaseQueueResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *PurchaseQueueResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *PurchaseQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type LocationPurchaseQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId   int64  `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *LocationPurchaseQueueRequest) Reset() {
	*x = LocationPurchaseQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationPurchaseQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationPurchaseQueueRequest) ProtoMessage() {}

func (x *LocationPurchaseQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationPurchaseQueueRequest.ProtoReflect.Descriptor instead.
func (*LocationPurchaseQueueRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{62}
}

func (x *LocationPurchaseQueueRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *LocationPurchaseQueueRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type LocationPurchaseQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue      *PurchaseQueue `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Strs       []string       `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool           `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LocationPurchaseQueueResponse) Reset() {
	*x = LocationPurchaseQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationPurchaseQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationPurchaseQueueResponse) ProtoMessage() {}

func (x *LocationPurchaseQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationPurchaseQueueResponse.ProtoReflect.Descriptor instead.
func (*LocationPurchaseQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{63}
}

func (x *LocationPurchaseQueueResponse) GetQueue() *PurchaseQueue {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *LocationPurchaseQueueResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *LocationPurchaseQueueResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *LocationPurchaseQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeletePurchasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries      []*CodeAndLocationId `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"` // AppraisalCode
	RefreshToken string               `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *DeletePurchasesRequest) Reset() {
	*x = DeletePurchasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePurchasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePurchasesRequest) ProtoMessage() {}

func (x *DeletePurchasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePurchasesRequest.ProtoReflect.Descriptor instead.
func (*DeletePurchasesRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{64}
}

func (x *DeletePurchasesRequest) GetEntries() []*CodeAndLocationId {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *DeletePurchasesRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type DeletePurchasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorized bool           `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"` // true if admin
	Error      *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeletePurchasesResponse) Reset() {
	*x = DeletePurchasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePurchasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePurchasesResponse) ProtoMessage() {}

func (x *DeletePurchasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePurchasesResponse.ProtoReflect.Descriptor instead.
func (*DeletePurchasesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{65}
}

func (x *DeletePurchasesResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *DeletePurchasesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type SaveAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TerritoryId  int64        `protobuf:"varint,1,opt,name=territory_id,json=territoryId,proto3" json:"territory_id,omitempty"` // SystemId / LocationId
	Items        []*BasicItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	RefreshToken string       `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // optional
}

func (x *SaveAppraisalRequest) Reset() {
	*x = SaveAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAppraisalRequest) ProtoMessage() {}

func (x *SaveAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAppraisalRequest.ProtoReflect.Descriptor instead.
func (*SaveAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{66}
}

func (x *SaveAppraisalRequest) GetTerritoryId() int64 {
	if x != nil {
		return x.TerritoryId
	}
	return 0
}

func (x *SaveAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SaveAppraisalRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type SaveHaulAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartSystemId int32             `protobuf:"varint,1,opt,name=start_system_id,json=startSystemId,proto3" json:"start_system_id,omitempty"`
	EndSystemId   int32             `protobuf:"varint,2,opt,name=end_system_id,json=endSystemId,proto3" json:"end_system_id,omitempty"`
	Items         []*BasicItem      `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	FallbackPrice map[int32]float64 `protobuf:"bytes,4,rep,name=fallback_price,json=fallbackPrice,proto3" json:"fallback_price,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"` // used as fallback price for rejected items
	RefreshToken  string            `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`                                                                                               // optional
}

func (x *SaveHaulAppraisalRequest) Reset() {
	*x = SaveHaulAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveHaulAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveHaulAppraisalRequest) ProtoMessage() {}

func (x *SaveHaulAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveHaulAppraisalRequest.ProtoReflect.Descriptor instead.
func (*SaveHaulAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{67}
}

func (x *SaveHaulAppraisalRequest) GetStartSystemId() int32 {
	if x != nil {
		return x.StartSystemId
	}
	return 0
}

func (x *SaveHaulAppraisalRequest) GetEndSystemId() int32 {
	if x != nil {
		return x.EndSystemId
	}
	return 0
}

func (x *SaveHaulAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SaveHaulAppraisalRequest) GetFallbackPrice() map[int32]float64 {
	if x != nil {
		return x.FallbackPrice
	}
	return nil
}

func (x *SaveHaulAppraisalRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type BuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal  *BuybackAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	Strs       []string          `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool              `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"` // true = not saving OR user OR admin OR saving as anonymous
	Error      *ErrorResponse    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BuybackAppraisalResponse) Reset() {
	*x = BuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackAppraisalResponse) ProtoMessage() {}

func (x *BuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*BuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{68}
}

func (x *BuybackAppraisalResponse) GetAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *BuybackAppraisalResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *BuybackAppraisalResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *BuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     MakePurchaseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=etco_proto.MakePurchaseStatus" json:"status,omitempty"` // always success if not saving
	Appraisal  *ShopAppraisal     `protobuf:"bytes,2,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	Strs       []string           `protobuf:"bytes,3,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool               `protobuf:"varint,4,opt,name=authorized,proto3" json:"authorized,omitempty"` // true = not saving OR user OR admin OR saving as anonymous
	Error      *ErrorResponse     `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopAppraisalResponse) Reset() {
	*x = ShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopAppraisalResponse) ProtoMessage() {}

func (x *ShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*ShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{69}
}

func (x *ShopAppraisalResponse) GetStatus() MakePurchaseStatus {
	if x != nil {
		return x.Status
	}
	return MakePurchaseStatus_MPS_NONE
}

func (x *ShopAppraisalResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *ShopAppraisalResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *ShopAppraisalResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *ShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type HaulAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal  *HaulAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	Strs       []string       `protobuf:"bytes,2,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized bool           `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"` // true = not saving OR user OR admin OR saving as anonymous
	Error      *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *HaulAppraisalResponse) Reset() {
	*x = HaulAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaulAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaulAppraisalResponse) ProtoMessage() {}

func (x *HaulAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaulAppraisalResponse.ProtoReflect.Descriptor instead.
func (*HaulAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{70}
}

func (x *HaulAppraisalResponse) GetAppraisal() *HaulAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *HaulAppraisalResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *HaulAppraisalResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *HaulAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId   int64  `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *ShopInventoryRequest) Reset() {
	*x = ShopInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopInventoryRequest) ProtoMessage() {}

func (x *ShopInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopInventoryRequest.ProtoReflect.Descriptor instead.
func (*ShopInventoryRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{71}
}

func (x *ShopInventoryRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *ShopInventoryRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type ShopInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*ShopItem    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	LocationInfo *LocationInfo  `protobuf:"bytes,2,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
	Strs         []string       `protobuf:"bytes,3,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized   bool           `protobuf:"varint,4,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error        *ErrorResponse `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopInventoryResponse) Reset() {
	*x = ShopInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopInventoryResponse) ProtoMessage() {}

func (x *ShopInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopInventoryResponse.ProtoReflect.Descriptor instead.
func (*ShopInventoryResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{72}
}

func (x *ShopInventoryResponse) GetItems() []*ShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopInventoryResponse) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *ShopInventoryResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *ShopInventoryResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *ShopInventoryResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type UserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId  int32  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *UserDataRequest) Reset() {
	*x = UserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataRequest) ProtoMessage() {}

func (x *UserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataRequest.ProtoReflect.Descriptor instead.
func (*UserDataRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{73}
}

func (x *UserDataRequest) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *UserDataRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type UserTimePurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       int64          `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"` // true = same user OR admin
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UserTimePurchaseResponse) Reset() {
	*x = UserTimePurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTimePurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTimePurchaseResponse) ProtoMessage() {}

func (x *UserTimePurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTimePurchaseResponse.ProtoReflect.Descriptor instead.
func (*UserTimePurchaseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{74}
}

func (x *UserTimePurchaseResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UserTimePurchaseResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *UserTimePurchaseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type UserAppraisalCodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// newest first, oldest last. Always.
	Codes      []string       `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`            // AppraisalCodes
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"` // true = same user OR admin
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UserAppraisalCodesResponse) Reset() {
	*x = UserAppraisalCodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAppraisalCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAppraisalCodesResponse) ProtoMessage() {}

func (x *UserAppraisalCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAppraisalCodesResponse.ProtoReflect.Descriptor instead.
func (*UserAppraisalCodesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{75}
}

func (x *UserAppraisalCodesResponse) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *UserAppraisalCodesResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *UserAppraisalCodesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CancelPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	LocationId   int64  `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CancelPurchaseRequest) Reset() {
	*x = CancelPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPurchaseRequest) ProtoMessage() {}

func (x *CancelPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPurchaseRequest.ProtoReflect.Descriptor instead.
func (*CancelPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{76}
}

func (x *CancelPurchaseRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CancelPurchaseRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *CancelPurchaseRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CancelPurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     CancelPurchaseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=etco_proto.CancelPurchaseStatus" json:"status,omitempty"`
	Authorized bool                 `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"` // true = user OR admin
	Error      *ErrorResponse       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CancelPurchaseResponse) Reset() {
	*x = CancelPurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPurchaseResponse) ProtoMessage() {}

func (x *CancelPurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPurchaseResponse.ProtoReflect.Descriptor instead.
func (*CancelPurchaseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{77}
}

func (x *CancelPurchaseResponse) GetStatus() CancelPurchaseStatus {
	if x != nil {
		return x.Status
	}
	return CancelPurchaseStatus_CPS_SUCCESS
}

func (x *CancelPurchaseResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CancelPurchaseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type StatusAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeItems bool   `protobuf:"varint,2,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *StatusAppraisalRequest) Reset() {
	*x = StatusAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusAppraisalRequest) ProtoMessage() {}

func (x *StatusAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusAppraisalRequest.ProtoReflect.Descriptor instead.
func (*StatusAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{78}
}

func (x *StatusAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StatusAppraisalRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *StatusAppraisalRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type StatusAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        AppraisalStatus   `protobuf:"varint,1,opt,name=status,proto3,enum=etco_proto.AppraisalStatus" json:"status,omitempty"`
	Contract      *Contract         `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`                                // null = status != AS_HAS_CONTRACT
	ContractItems []*NamedBasicItem `protobuf:"bytes,3,rep,name=contract_items,json=contractItems,proto3" json:"contract_items,omitempty"` // empty = status != AS_HAS_CONTRACT || !include_items
	Strs          []string          `protobuf:"bytes,4,rep,name=strs,proto3" json:"strs,omitempty"`
	Authorized    bool              `protobuf:"varint,5,opt,name=authorized,proto3" json:"authorized,omitempty"` // true = appraisal-creator OR admin
	Error         *ErrorResponse    `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusAppraisalResponse) Reset() {
	*x = StatusAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusAppraisalResponse) ProtoMessage() {}

func (x *StatusAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusAppraisalResponse.ProtoReflect.Descriptor instead.
func (*StatusAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{79}
}

func (x *StatusAppraisalResponse) GetStatus() AppraisalStatus {
	if x != nil {
		return x.Status
	}
	return AppraisalStatus_AS_UNDEFINED
}

func (x *StatusAppraisalResponse) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *StatusAppraisalResponse) GetContractItems() []*NamedBasicItem {
	if x != nil {
		return x.ContractItems
	}
	return nil
}

func (x *StatusAppraisalResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *StatusAppraisalResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *StatusAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeItems bool   `protobuf:"varint,2,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // Optional
}

func (x *GetAppraisalRequest) Reset() {
	*x = GetAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppraisalRequest) ProtoMessage() {}

func (x *GetAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppraisalRequest.ProtoReflect.Descriptor instead.
func (*GetAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{80}
}

func (x *GetAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetAppraisalRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *GetAppraisalRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type GetBuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal *BuybackAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`  // characterId == 0 if anonymous-appraisal || (!admin && !appraisal-creator)
	Anonymous bool              `protobuf:"varint,2,opt,name=anonymous,proto3" json:"anonymous,omitempty"` // true = anonymous-appraisal
	Strs      []string          `protobuf:"bytes,3,rep,name=strs,proto3" json:"strs,omitempty"`
	Error     *ErrorResponse    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"` // code not exists
}

func (x *GetBuybackAppraisalResponse) Reset() {
	*x = GetBuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuybackAppraisalResponse) ProtoMessage() {}

func (x *GetBuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*GetBuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{81}
}

func (x *GetBuybackAppraisalResponse) GetAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetAnonymous() bool {
	if x != nil {
		return x.Anonymous
	}
	return false
}

func (x *GetBuybackAppraisalResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal *ShopAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`  // characterId == 0 if anonymous-appraisal || (!admin && !appraisal-creator)
	Anonymous bool           `protobuf:"varint,2,opt,name=anonymous,proto3" json:"anonymous,omitempty"` // true = anonymous-appraisal
	Strs      []string       `protobuf:"bytes,3,rep,name=strs,proto3" json:"strs,omitempty"`
	Error     *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"` // code not exists
}

func (x *GetShopAppraisalResponse) Reset() {
	*x = GetShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopAppraisalResponse) ProtoMessage() {}

func (x *GetShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*GetShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{82}
}

func (x *GetShopAppraisalResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *GetShopAppraisalResponse) GetAnonymous() bool {
	if x != nil {
		return x.Anonymous
	}
	return false
}

func (x *GetShopAppraisalResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *GetShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetHaulAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal *HaulAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`  // characterId == 0 if anonymous-appraisal || (!admin && !appraisal-creator)
	Anonymous bool           `protobuf:"varint,2,opt,name=anonymous,proto3" json:"anonymous,omitempty"` // true = anonymous-appraisal
	Strs      []string       `protobuf:"bytes,3,rep,name=strs,proto3" json:"strs,omitempty"`
	Error     *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"` // code not exists
}

func (x *GetHaulAppraisalResponse) Reset() {
	*x = GetHaulAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHaulAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHaulAppraisalResponse) ProtoMessage() {}

func (x *GetHaulAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHaulAppraisalResponse.ProtoReflect.Descriptor instead.
func (*GetHaulAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{83}
}

func (x *GetHaulAppraisalResponse) GetAppraisal() *HaulAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *GetHaulAppraisalResponse) GetAnonymous() bool {
	if x != nil {
		return x.Anonymous
	}
	return false
}

func (x *GetHaulAppraisalResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *GetHaulAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modified   bool           `protobuf:"varint,1,opt,name=modified,proto3" json:"modified,omitempty"`
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgUpdateResponse) Reset() {
	*x = CfgUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgUpdateResponse) ProtoMessage() {}

func (x *CfgUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgUpdateResponse.ProtoReflect.Descriptor instead.
func (*CfgUpdateResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{84}
}

func (x *CfgUpdateResponse) GetModified() bool {
	if x != nil {
		return x.Modified
	}
	return false
}

func (x *CfgUpdateResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgUpdateResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgGetAuthListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthList   *CfgAuthList   `protobuf:"bytes,1,opt,name=auth_list,json=authList,proto3" json:"auth_list,omitempty"`
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetAuthListResponse) Reset() {
	*x = CfgGetAuthListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetAuthListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetAuthListResponse) ProtoMessage() {}

func (x *CfgGetAuthListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetAuthListResponse.ProtoReflect.Descriptor instead.
func (*CfgGetAuthListResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{85}
}

func (x *CfgGetAuthListResponse) GetAuthList() *CfgAuthList {
	if x != nil {
		return x.AuthList
	}
	return nil
}

func (x *CfgGetAuthListResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetAuthListResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgSetAuthListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthList     *CfgAuthList `protobuf:"bytes,1,opt,name=auth_list,json=authList,proto3" json:"auth_list,omitempty"`
	RefreshToken string       `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgSetAuthListRequest) Reset() {
	*x = CfgSetAuthListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgSetAuthListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgSetAuthListRequest) ProtoMessage() {}

func (x *CfgSetAuthListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgSetAuthListRequest.ProtoReflect.Descriptor instead.
func (*CfgSetAuthListRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{86}
}

func (x *CfgSetAuthListRequest) GetAuthList() *CfgAuthList {
	if x != nil {
		return x.AuthList
	}
	return nil
}

func (x *CfgSetAuthListRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetConstDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstData  *CfgConstData  `protobuf:"bytes,1,opt,name=const_data,json=constData,proto3" json:"const_data,omitempty"`
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetConstDataResponse) Reset() {
	*x = CfgGetConstDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetConstDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetConstDataResponse) ProtoMessage() {}

func (x *CfgGetConstDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetConstDataResponse.ProtoReflect.Descriptor instead.
func (*CfgGetConstDataResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{87}
}

func (x *CfgGetConstDataResponse) GetConstData() *CfgConstData {
	if x != nil {
		return x.ConstData
	}
	return nil
}

func (x *CfgGetConstDataResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetConstDataResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgSetConstDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstData    *CfgConstData `protobuf:"bytes,1,opt,name=const_data,json=constData,proto3" json:"const_data,omitempty"`
	RefreshToken string        `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgSetConstDataRequest) Reset() {
	*x = CfgSetConstDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgSetConstDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgSetConstDataRequest) ProtoMessage() {}

func (x *CfgSetConstDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgSetConstDataRequest.ProtoReflect.Descriptor instead.
func (*CfgSetConstDataRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{88}
}

func (x *CfgSetConstDataRequest) GetConstData() *CfgConstData {
	if x != nil {
		return x.ConstData
	}
	return nil
}

func (x *CfgSetConstDataRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetBuybackSystemTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builder    map[int32]*CfgBuybackSystemTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Authorized bool                                  `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse                        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) Reset() {
	*x = CfgGetBuybackSystemTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{89}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetBuilder() map[int32]*CfgBuybackSystemTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeBuybackSystemTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the program itself converts this to multiple map<TypeId, BuybackTypeMap>
	Builder      map[int32]*CfgBuybackSystemTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshToken string                                `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) Reset() {
	*x = CfgMergeBuybackSystemTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{90}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) GetBuilder() map[int32]*CfgBuybackSystemTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetHaulRouteTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builder    map[int32]*CfgHaulRouteTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Authorized bool                              `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse                    `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetHaulRouteTypeMapsBuilderResponse) Reset() {
	*x = CfgGetHaulRouteTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetHaulRouteTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetHaulRouteTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgGetHaulRouteTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetHaulRouteTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgGetHaulRouteTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{91}
}

func (x *CfgGetHaulRouteTypeMapsBuilderResponse) GetBuilder() map[int32]*CfgHaulRouteTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgGetHaulRouteTypeMapsBuilderResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetHaulRouteTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeHaulRouteTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the program itself converts this to multiple map<TypeId, HaulTypeMap>
	Builder      map[int32]*CfgHaulRouteTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshToken string                            `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgMergeHaulRouteTypeMapsBuilderRequest) Reset() {
	*x = CfgMergeHaulRouteTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeHaulRouteTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeHaulRouteTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgMergeHaulRouteTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeHaulRouteTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeHaulRouteTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{92}
}

func (x *CfgMergeHaulRouteTypeMapsBuilderRequest) GetBuilder() map[int32]*CfgHaulRouteTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgMergeHaulRouteTypeMapsBuilderRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetShopLocationTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builder    map[int32]*CfgShopLocationTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Authorized bool                                 `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse                       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) Reset() {
	*x = CfgGetShopLocationTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{93}
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetBuilder() map[int32]*CfgShopLocationTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeShopLocationTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the program itself converts this to multiple map<TypeId, ShopTypeMap>
	Builder      map[int32]*CfgShopLocationTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshToken string                               `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) Reset() {
	*x = CfgMergeShopLocationTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{94}
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) GetBuilder() map[int32]*CfgShopLocationTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetBuybackSystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems    map[int32]*CfgBuybackSystem `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Authorized bool                        `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse              `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackSystemsResponse) Reset() {
	*x = CfgGetBuybackSystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemsResponse) ProtoMessage() {}

func (x *CfgGetBuybackSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{95}
}

func (x *CfgGetBuybackSystemsResponse) GetSystems() map[int32]*CfgBuybackSystem {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *CfgGetBuybackSystemsResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetBuybackSystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeBuybackSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems      map[int32]*CfgBuybackSystem `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshToken string                      `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgMergeBuybackSystemsRequest) Reset() {
	*x = CfgMergeBuybackSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemsRequest) ProtoMessage() {}

func (x *CfgMergeBuybackSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{96}
}

func (x *CfgMergeBuybackSystemsRequest) GetSystems() map[int32]*CfgBuybackSystem {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *CfgMergeBuybackSystemsRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetShopLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations  map[int64]*CfgShopLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Authorized bool                       `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse             `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopLocationsResponse) Reset() {
	*x = CfgGetShopLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationsResponse) ProtoMessage() {}

func (x *CfgGetShopLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{97}
}

func (x *CfgGetShopLocationsResponse) GetLocations() map[int64]*CfgShopLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *CfgGetShopLocationsResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetShopLocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeShopLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations    map[int64]*CfgShopLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshToken string                     `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgMergeShopLocationsRequest) Reset() {
	*x = CfgMergeShopLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationsRequest) ProtoMessage() {}

func (x *CfgMergeShopLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{98}
}

func (x *CfgMergeShopLocationsRequest) GetLocations() map[int64]*CfgShopLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *CfgMergeShopLocationsRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetHaulRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key = two int32s, hex encoded, length 16 string. first is start-systemId, second is end-systemId
	Routes     map[string]*CfgHaulRoute `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Authorized bool                     `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse           `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetHaulRoutesResponse) Reset() {
	*x = CfgGetHaulRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetHaulRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetHaulRoutesResponse) ProtoMessage() {}

func (x *CfgGetHaulRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetHaulRoutesResponse.ProtoReflect.Descriptor instead.
func (*CfgGetHaulRoutesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{99}
}

func (x *CfgGetHaulRoutesResponse) GetRoutes() map[string]*CfgHaulRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *CfgGetHaulRoutesResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetHaulRoutesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeHaulRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key = two int32s, hex encoded, length 16 string. first is start-systemId, second is end-systemId
	Routes       map[string]*CfgHaulRoute `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshToken string                   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgMergeHaulRoutesRequest) Reset() {
	*x = CfgMergeHaulRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeHaulRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeHaulRoutesRequest) ProtoMessage() {}

func (x *CfgMergeHaulRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeHaulRoutesRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeHaulRoutesRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{100}
}

func (x *CfgMergeHaulRoutesRequest) GetRoutes() map[string]*CfgHaulRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *CfgMergeHaulRoutesRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets    map[string]*CfgMarket `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Authorized bool                  `protobuf:"varint,4,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse        `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetMarketsResponse) Reset() {
	*x = CfgGetMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketsResponse) ProtoMessage() {}

func (x *CfgGetMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetMarketsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{101}
}

func (x *CfgGetMarketsResponse) GetMarkets() map[string]*CfgMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *CfgGetMarketsResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetMarketsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets      map[string]*CfgMarket `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RefreshToken string                `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *CfgMergeMarketsRequest) Reset() {
	*x = CfgMergeMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeMarketsRequest) ProtoMessage() {}

func (x *CfgMergeMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeMarketsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeMarketsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{102}
}

func (x *CfgMergeMarketsRequest) GetMarkets() map[string]*CfgMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *CfgMergeMarketsRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type CfgGetBuybackBundleKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKeys []string       `protobuf:"bytes,1,rep,name=bundle_keys,json=bundleKeys,proto3" json:"bundle_keys,omitempty"` // BuybackSystemBundleKey
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackBundleKeysResponse) Reset() {
	*x = CfgGetBuybackBundleKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackBundleKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackBundleKeysResponse) ProtoMessage() {}

func (x *CfgGetBuybackBundleKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackBundleKeysResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackBundleKeysResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{103}
}

func (x *CfgGetBuybackBundleKeysResponse) GetBundleKeys() []string {
	if x != nil {
		return x.BundleKeys
	}
	return nil
}

func (x *CfgGetBuybackBundleKeysResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetBuybackBundleKeysResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgGetShopBundleKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKeys []string       `protobuf:"bytes,1,rep,name=bundle_keys,json=bundleKeys,proto3" json:"bundle_keys,omitempty"` // ShopLocationBundleKey
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopBundleKeysResponse) Reset() {
	*x = CfgGetShopBundleKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopBundleKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopBundleKeysResponse) ProtoMessage() {}

func (x *CfgGetShopBundleKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopBundleKeysResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopBundleKeysResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{104}
}

func (x *CfgGetShopBundleKeysResponse) GetBundleKeys() []string {
	if x != nil {
		return x.BundleKeys
	}
	return nil
}

func (x *CfgGetShopBundleKeysResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetShopBundleKeysResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgGetHaulBundleKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKeys []string       `protobuf:"bytes,1,rep,name=bundle_keys,json=bundleKeys,proto3" json:"bundle_keys,omitempty"` // HaulRouteBundleKey
	Authorized bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetHaulBundleKeysResponse) Reset() {
	*x = CfgGetHaulBundleKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetHaulBundleKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetHaulBundleKeysResponse) ProtoMessage() {}

func (x *CfgGetHaulBundleKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetHaulBundleKeysResponse.ProtoReflect.Descriptor instead.
func (*CfgGetHaulBundleKeysResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{105}
}

func (x *CfgGetHaulBundleKeysResponse) GetBundleKeys() []string {
	if x != nil {
		return x.BundleKeys
	}
	return nil
}

func (x *CfgGetHaulBundleKeysResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetHaulBundleKeysResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgGetMarketNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketNames []string       `protobuf:"bytes,1,rep,name=market_names,json=marketNames,proto3" json:"market_names,omitempty"`
	Authorized  bool           `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Error       *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetMarketNamesResponse) Reset() {
	*x = CfgGetMarketNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketNamesResponse) ProtoMessage() {}

func (x *CfgGetMarketNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketNamesResponse.ProtoReflect.Descriptor instead.
func (*CfgGetMarketNamesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{106}
}

func (x *CfgGetMarketNamesResponse) GetMarketNames() []string {
	if x != nil {
		return x.MarketNames
	}
	return nil
}

func (x *CfgGetMarketNamesResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *CfgGetMarketNamesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_etco_proto protoreflect.FileDescriptor

var file_etco_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x65, 0x74, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x50, 0x0a,
	0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0xdb, 0x01, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x18, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x40, 0x0a,
	0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x5e, 0x0a, 0x0e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x6c, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x22, 0xea, 0x01,
	0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x0a, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x48, 0x61, 0x75, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a,
	0x0f, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x65, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a,
	0x11, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd5, 0x03, 0x0a, 0x0d, 0x48, 0x61, 0x75, 0x6c,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d,
	0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x4d,
	0x33, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x22,
	0xd4, 0x01, 0x0a, 0x08, 0x48, 0x61, 0x75, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x22, 0xf4, 0x02, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74,
	0x61, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x1c, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x33, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x4d, 0x33, 0x22, 0x97, 0x02,
	0x0a, 0x11, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0c, 0x66,
	0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x38, 0x0a,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xbe, 0x02, 0x0a, 0x0d, 0x53, 0x68, 0x6f,
	0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x08, 0x53, 0x68,
	0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x64,
	0x0a, 0x0d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9e, 0x03, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x37, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x16, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x22,
	0x97, 0x01, 0x0a, 0x16, 0x48, 0x61, 0x75, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x37, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x22, 0x7b, 0x0a, 0x0e, 0x43, 0x66, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42,
	0x75, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x46, 0x0a, 0x12, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x66, 0x67, 0x48, 0x61,
	0x75, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a,
	0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22,
	0xc2, 0x01, 0x0a, 0x1a, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x47,
	0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x5b, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x01, 0x0a, 0x19, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x58, 0x0a, 0x0a, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xb7, 0x01, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x48, 0x61, 0x75, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x43, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x48,
	0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x58, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x48, 0x61, 0x75, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63,
	0x0a, 0x10, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x33, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x6d, 0x33, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52,
	0x61, 0x74, 0x65, 0x22, 0x6e, 0x0a, 0x0f, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52,
	0x61, 0x74, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x0c, 0x43, 0x66, 0x67, 0x48, 0x61, 0x75, 0x6c, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x33, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x33, 0x46,
	0x65, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x22, 0x74, 0x0a, 0x09, 0x43, 0x66, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0xdf, 0x04, 0x0a, 0x0c, 0x43,
	0x66, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x4d, 0x61, 0x78, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6d,
	0x61, 0x6b, 0x65, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6f,
	0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x6b,
	0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x16, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x41, 0x0a, 0x1d, 0x63,
	0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1a, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x46,
	0x0a, 0x20, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x65, 0x62, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x44, 0x0a, 0x1e, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x73, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x68, 0x61, 0x75, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x68, 0x61, 0x75, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8d, 0x02, 0x0a,
	0x0b, 0x43, 0x66, 0x67, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x34, 0x0a, 0x16, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x70, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x14, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x5f, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x43, 0x6f,
	0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x0d,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x29, 0x0a, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x12, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x52, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2a, 0x0a, 0x0e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73,
	0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12,
	0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x5b, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x2f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9b, 0x01,
	0x0a, 0x18, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x30, 0x0a, 0x10, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x90, 0x01,
	0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12,
	0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x55, 0x0a, 0x0c, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x73, 0x69, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70,
	0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x5d, 0x0a, 0x10, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x73, 0x69, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70,
	0x22, 0x7d, 0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x2f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x30, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0xc7, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbe, 0x01, 0x0a, 0x17,
	0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x70, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x94, 0x01, 0x0a,
	0x14, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x65, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65,
	0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x4e,
	0x65, 0x77, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xc0, 0x01, 0x0a, 0x1c, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xba, 0x01, 0x0a, 0x19, 0x48, 0x61, 0x75, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x95, 0x02, 0x0a,
	0x15, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x53, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x64, 0x0a, 0x1c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb5, 0x01, 0x0a, 0x1d, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x76, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x41,
	0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6a, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xda, 0x02, 0x0a, 0x18, 0x53, 0x61, 0x76, 0x65, 0x48, 0x61, 0x75,
	0x6c, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x65, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x66, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x66, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a,
	0x40, 0x0a, 0x12, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xbb, 0x01, 0x0a, 0x18, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xed, 0x01, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xb5, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x59, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7f, 0x0a, 0x18, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x1a,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x71, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x76, 0x0a, 0x16, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xa8, 0x02, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x73, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73,
	0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74,
	0x72, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x43, 0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9f, 0x01, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x72, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x53,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa3, 0x01, 0x0a,
	0x17, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x76, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc0, 0x02, 0x0a, 0x2a, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x62, 0x0a, 0x0c, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x02,
	0x0a, 0x2b, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x1a, 0x62, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb4, 0x02, 0x0a, 0x26, 0x43, 0x66, 0x67, 0x47, 0x65,
	0x74, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61,
	0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x5e, 0x0a,
	0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x48,
	0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x02,
	0x0a, 0x27, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x5e, 0x0a, 0x0c, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x48, 0x61, 0x75, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x02, 0x0a, 0x29, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x61, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x93, 0x02, 0x0a, 0x2a, 0x43,
	0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x61, 0x0a,
	0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9a, 0x02, 0x0a, 0x1c, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0x58, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf0, 0x01,
	0x0a, 0x1d, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x50, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x58, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9f, 0x02, 0x0a, 0x1b, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x59, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xf5, 0x01, 0x0a, 0x1c, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a,
	0x59, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x02, 0x0a, 0x18, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0x53, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe0, 0x01, 0x0a, 0x19, 0x43, 0x66, 0x67, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x48, 0x61, 0x75, 0x6c, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x53, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x02, 0x0a, 0x15, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x51, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xdb, 0x01, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x51, 0x0a,
	0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x93, 0x01, 0x0a, 0x1f, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x1c, 0x43, 0x66, 0x67, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x1c, 0x43, 0x66,
	0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8f, 0x01, 0x0a,
	0x19, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x99,
	0x01, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x43, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x43, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x45, 0x43, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x43, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x43,
	0x5f, 0x42, 0x4f, 0x4f, 0x54, 0x53, 0x54, 0x52, 0x41, 0x50, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x43, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x43, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x06, 0x2a, 0x50, 0x0a, 0x06, 0x45, 0x73,
	0x69, 0x41, 0x70, 0x70, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x41, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x41, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x53, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x41, 0x5f, 0x43, 0x4f, 0x52, 0x50, 0x4f, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x41, 0x5f, 0x53, 0x54, 0x52, 0x55,
	0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x2a, 0xc0, 0x01, 0x0a,
	0x12, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x50, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x50, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x50, 0x53, 0x5f, 0x43, 0x4f, 0x4f, 0x4c, 0x44, 0x4f,
	0x57, 0x4e, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x50,
	0x53, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x50, 0x53, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x4d, 0x50, 0x53, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49,
	0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x50, 0x53, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x4e,
	0x44, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x06, 0x2a,
	0x8c, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x50, 0x53, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x50, 0x53,
	0x5f, 0x43, 0x4f, 0x4f, 0x4c, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x50, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x50, 0x53, 0x5f, 0x43, 0x4f, 0x4f, 0x4c,
	0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x50,
	0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x04, 0x2a, 0xe0,
	0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x53, 0x5f, 0x4f, 0x55, 0x54, 0x53, 0x54, 0x41, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x53, 0x5f,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x52, 0x10,
	0x03, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x07, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x08,
	0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x09,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x44, 0x10,
	0x0a, 0x2a, 0x53, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x0a, 0x45, 0x4b, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x45, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4b, 0x5f, 0x43, 0x4f, 0x52, 0x50, 0x4f, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4b, 0x5f, 0x41, 0x4c, 0x4c, 0x49,
	0x41, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x2a, 0x4b, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x53, 0x5f,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x53, 0x5f, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55,
	0x45, 0x10, 0x02, 0x2a, 0x59, 0x0a, 0x12, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x52, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x52,
	0x53, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x48, 0x52, 0x53, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x52, 0x53, 0x5f, 0x53, 0x55, 0x4d, 0x10, 0x03, 0x2a, 0xf3,
	0x01, 0x0a, 0x0e, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x52, 0x4b, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x52, 0x4b, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x54,
	0x45, 0x52, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x52, 0x4b, 0x5f, 0x4d, 0x33,
	0x46, 0x45, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x52, 0x4b, 0x5f, 0x53, 0x55, 0x4d,
	0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x48, 0x52, 0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x5f, 0x52, 0x45,
	0x57, 0x41, 0x52, 0x44, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x41, 0x4c, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x52, 0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x4d, 0x33, 0x46, 0x45, 0x45, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x48,
	0x52, 0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x55,
	0x4d, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x48, 0x52, 0x4b, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x52,
	0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x41, 0x4c,
	0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x52, 0x4b, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x52, 0x45,
	0x57, 0x41, 0x52, 0x44, 0x5f, 0x4d, 0x33, 0x46, 0x45, 0x45, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12,
	0x48, 0x52, 0x4b, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x53,
	0x55, 0x4d, 0x10, 0x09, 0x32, 0xcd, 0x2d, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x12, 0x3f, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x41, 0x6c,
	0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x41, 0x6c, 0x6c,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x09, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65, 0x12, 0x18,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0f, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x0c, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c,
	0x0a, 0x13, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10,
	0x4e, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x1f, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x48, 0x61, 0x75, 0x6c, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x23, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11,
	0x48, 0x61, 0x75, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6c, 0x0a, 0x15, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x28, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x1b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x53, 0x68, 0x6f,
	0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x1b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x75, 0x6c,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x64, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x20,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x53, 0x68,
	0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x20, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5c, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x74,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x20, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x22,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x22,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x22,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1f,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x12, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x22, 0x43, 0x66, 0x67, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x74, 0x0a, 0x21, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x48,
	0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x13, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75,
	0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0d, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x11, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65,
	0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x17, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x70, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x48, 0x61, 0x75, 0x6c, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x0f, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x12, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x43, 0x66, 0x67, 0x53, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x0f, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x24, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x37,
	0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x23, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x36, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x20, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x48, 0x61, 0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x48, 0x61,
	0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x16,
	0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x29, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x65, 0x74, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x48, 0x61,
	0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x48, 0x61,
	0x75, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x0f, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x22, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_etco_proto_rawDescOnce sync.Once
	file_etco_proto_rawDescData = file_etco_proto_rawDesc
)

func file_etco_proto_rawDescGZIP() []byte {
	file_etco_proto_rawDescOnce.Do(func() {
		file_etco_proto_rawDescData = protoimpl.X.CompressGZIP(file_etco_proto_rawDescData)
	})
	return file_etco_proto_rawDescData
}

var file_etco_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_etco_proto_msgTypes = make([]protoimpl.MessageInfo, 126)
var file_etco_proto_goTypes = []interface{}{
	(ErrorCode)(0),                                      // 0: etco_proto.ErrorCode
	(EsiApp)(0),                                         // 1: etco_proto.EsiApp
	(MakePurchaseStatus)(0),                             // 2: etco_proto.MakePurchaseStatus
	(CancelPurchaseStatus)(0),                           // 3: etco_proto.CancelPurchaseStatus
	(ContractStatus)(0),                                 // 4: etco_proto.ContractStatus
	(EntityKind)(0),                                     // 5: etco_proto.EntityKind
	(AppraisalStatus)(0),                                // 6: etco_proto.AppraisalStatus
	(HaulRewardStrategy)(0),                             // 7: etco_proto.HaulRewardStrategy
	(HaulRewardKind)(0),                                 // 8: etco_proto.HaulRewardKind
	(*EmptyRequest)(nil),                                // 9: etco_proto.EmptyRequest
	(*BasicRequest)(nil),                                // 10: etco_proto.BasicRequest
	(*ErrorResponse)(nil),                               // 11: etco_proto.ErrorResponse
	(*NamedTypeId)(nil),                                 // 12: etco_proto.NamedTypeId
	(*BasicItem)(nil),                                   // 13: etco_proto.BasicItem
	(*NamedBasicItem)(nil),                              // 14: etco_proto.NamedBasicItem
	(*ShopLocationInfo)(nil),                            // 15: etco_proto.ShopLocationInfo
	(*LocationInfo)(nil),                                // 16: etco_proto.LocationInfo
	(*SystemInfo)(nil),                                  // 17: etco_proto.SystemInfo
	(*HaulRouteInfo)(nil),                               // 18: etco_proto.HaulRouteInfo
	(*CodeAndLocationId)(nil),                           // 19: etco_proto.CodeAndLocationId
	(*HaulAppraisal)(nil),                               // 20: etco_proto.HaulAppraisal
	(*HaulItem)(nil),                                    // 21: etco_proto.HaulItem
	(*BuybackAppraisal)(nil),                            // 22: etco_proto.BuybackAppraisal
	(*BuybackParentItem)(nil),                           // 23: etco_proto.BuybackParentItem
	(*BuybackChildItem)(nil),                            // 24: etco_proto.BuybackChildItem
	(*ShopAppraisal)(nil),                               // 25: etco_proto.ShopAppraisal
	(*ShopItem)(nil),                                    // 26: etco_proto.ShopItem
	(*PurchaseQueue)(nil),                               // 27: etco_proto.PurchaseQueue
	(*Contract)(nil),                                    // 28: etco_proto.Contract
	(*BuybackContractQueueEntry)(nil),                   // 29: etco_proto.BuybackContractQueueEntry
	(*ShopContractQueueEntry)(nil),                      // 30: etco_proto.ShopContractQueueEntry
	(*HaulContractQueueEntry)(nil),                      // 31: etco_proto.HaulContractQueueEntry
	(*CfgTypePricing)(nil),                              // 32: etco_proto.CfgTypePricing
	(*CfgBuybackTypePricing)(nil),                       // 33: etco_proto.CfgBuybackTypePricing
	(*CfgShopTypePricing)(nil),                          // 34: etco_proto.CfgShopTypePricing
	(*CfgHaulTypePricing)(nil),                          // 35: etco_proto.CfgHaulTypePricing
	(*CfgBuybackSystemTypeBundle)(nil),                  // 36: etco_proto.CfgBuybackSystemTypeBundle
	(*CfgShopLocationTypeBundle)(nil),                   // 37: etco_proto.CfgShopLocationTypeBundle
	(*CfgHaulRouteTypeBundle)(nil),                      // 38: etco_proto.CfgHaulRouteTypeBundle
	(*CfgBuybackSystem)(nil),                            // 39: etco_proto.CfgBuybackSystem
	(*CfgShopLocation)(nil),                             // 40: etco_proto.CfgShopLocation
	(*CfgHaulRoute)(nil),                                // 41: etco_proto.CfgHaulRoute
	(*CfgMarket)(nil),                                   // 42: etco_proto.CfgMarket
	(*CfgConstData)(nil),                                // 43: etco_proto.CfgConstData
	(*CfgAuthList)(nil),                                 // 44: etco_proto.CfgAuthList
	(*TypesResponse)(nil),                               // 45: etco_proto.TypesResponse
	(*NamedTypesRequest)(nil),                           // 46: etco_proto.NamedTypesRequest
	(*NamedTypesResponse)(nil),                          // 47: etco_proto.NamedTypesResponse
	(*SystemsRequest)(nil),                              // 48: etco_proto.SystemsRequest
	(*SystemsResponse)(nil),                             // 49: etco_proto.SystemsResponse
	(*HaulRoutesResponse)(nil),                          // 50: etco_proto.HaulRoutesResponse
	(*AssetFlagsResponse)(nil),                          // 51: etco_proto.AssetFlagsResponse
	(*AllShopLocationsResponse)(nil),                    // 52: etco_proto.AllShopLocationsResponse
	(*LocationsRequest)(nil),                            // 53: etco_proto.LocationsRequest
	(*LocationsResponse)(nil),                           // 54: etco_proto.LocationsResponse
	(*ParseRequest)(nil),                                // 55: etco_proto.ParseRequest
	(*ParseResponse)(nil),                               // 56: etco_proto.ParseResponse
	(*LoginRequest)(nil),                                // 57: etco_proto.LoginRequest
	(*LoginResponse)(nil),                               // 58: etco_proto.LoginResponse
	(*TokenInfoRequest)(nil),                            // 59: etco_proto.TokenInfoRequest
	(*TokenInfoResponse)(nil),                           // 60: etco_proto.TokenInfoResponse
	(*EntityInfoRequest)(nil),                           // 61: etco_proto.EntityInfoRequest
	(*CharacterInfoResponse)(nil),                       // 62: etco_proto.CharacterInfoResponse
	(*CorporationInfoResponse)(nil),                     // 63: etco_proto.CorporationInfoResponse
	(*AllianceInfoResponse)(nil),                        // 64: etco_proto.AllianceInfoResponse
	(*NewAppraisalRequest)(nil),                         // 65: etco_proto.NewAppraisalRequest
	(*NewHaulAppraisalRequest)(nil),                     // 66: etco_proto.NewHaulAppraisalRequest
	(*BuybackContractQueueResponse)(nil),                // 67: etco_proto.BuybackContractQueueResponse
	(*ShopContractQueueResponse)(nil),                   // 68: etco_proto.ShopContractQueueResponse
	(*HaulContractQueueResponse)(nil),                   // 69: etco_proto.HaulContractQueueResponse
	(*PurchaseQueueResponse)(nil),                       // 70: etco_proto.PurchaseQueueResponse
	(*LocationPurchaseQueueRequest)(nil),                // 71: etco_proto.LocationPurchaseQueueRequest
	(*LocationPurchaseQueueResponse)(nil),               // 72: etco_proto.LocationPurchaseQueueResponse
	(*DeletePurchasesRequest)(nil),                      // 73: etco_proto.DeletePurchasesRequest
	(*DeletePurchasesResponse)(nil),                     // 74: etco_proto.DeletePurchasesResponse
	(*SaveAppraisalRequest)(nil),                        // 75: etco_proto.SaveAppraisalRequest
	(*SaveHaulAppraisalRequest)(nil),                    // 76: etco_proto.SaveHaulAppraisalRequest
	(*BuybackAppraisalResponse)(nil),                    // 77: etco_proto.BuybackAppraisalResponse
	(*ShopAppraisalResponse)(nil),                       // 78: etco_proto.ShopAppraisalResponse
	(*HaulAppraisalResponse)(nil),                       // 79: etco_proto.HaulAppraisalResponse
	(*ShopInventoryRequest)(nil),                        // 80: etco_proto.ShopInventoryRequest
	(*ShopInventoryResponse)(nil),                       // 81: etco_proto.ShopInventoryResponse
	(*UserDataRequest)(nil),                             // 82: etco_proto.UserDataRequest
	(*UserTimePurchaseResponse)(nil),                    // 83: etco_proto.UserTimePurchaseResponse
	(*UserAppraisalCodesResponse)(nil),                  // 84: etco_proto.UserAppraisalCodesResponse
	(*CancelPurchaseRequest)(nil),                       // 85: etco_proto.CancelPurchaseRequest
	(*CancelPurchaseResponse)(nil),                      // 86: etco_proto.CancelPurchaseResponse
	(*StatusAppraisalRequest)(nil),                      // 87: etco_proto.StatusAppraisalRequest
	(*StatusAppraisalResponse)(nil),                     // 88: etco_proto.StatusAppraisalResponse
	(*GetAppraisalRequest)(nil),                         // 89: etco_proto.GetAppraisalRequest
	(*GetBuybackAppraisalResponse)(nil),                 // 90: etco_proto.GetBuybackAppraisalResponse
	(*GetShopAppraisalResponse)(nil),                    // 91: etco_proto.GetShopAppraisalResponse
	(*GetHaulAppraisalResponse)(nil),                    // 92: etco_proto.GetHaulAppraisalResponse
	(*CfgUpdateResponse)(nil),                           // 93: etco_proto.CfgUpdateResponse
	(*CfgGetAuthListResponse)(nil),                      // 94: etco_proto.CfgGetAuthListResponse
	(*CfgSetAuthListRequest)(nil),                       // 95: etco_proto.CfgSetAuthListRequest
	(*CfgGetConstDataResponse)(nil),                     // 96: etco_proto.CfgGetConstDataResponse
	(*CfgSetConstDataRequest)(nil),                      // 97: etco_proto.CfgSetConstDataRequest
	(*CfgGetBuybackSystemTypeMapsBuilderResponse)(nil),  // 98: etco_proto.CfgGetBuybackSystemTypeMapsBuilderResponse
	(*CfgMergeBuybackSystemTypeMapsBuilderRequest)(nil), // 99: etco_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest
	(*CfgGetHaulRouteTypeMapsBuilderResponse)(nil),      // 100: etco_proto.CfgGetHaulRouteTypeMapsBuilderResponse
	(*CfgMergeHaulRouteTypeMapsBuilderRequest)(nil),     // 101: etco_proto.CfgMergeHaulRouteTypeMapsBuilderRequest
	(*CfgGetShopLocationTypeMapsBuilderResponse)(nil),   // 102: etco_proto.CfgGetShopLocationTypeMapsBuilderResponse
	(*CfgMergeShopLocationTypeMapsBuilderRequest)(nil),  // 103: etco_proto.CfgMergeShopLocationTypeMapsBuilderRequest
	(*CfgGetBuybackSystemsResponse)(nil),                // 104: etco_proto.CfgGetBuybackSystemsResponse
	(*CfgMergeBuybackSystemsRequest)(nil),               // 105: etco_proto.CfgMergeBuybackSystemsRequest
	(*CfgGetShopLocationsResponse)(nil),                 // 106: etco_proto.CfgGetShopLocationsResponse
	(*CfgMergeShopLocationsRequest)(nil),                // 107: etco_proto.CfgMergeShopLocationsRequest
	(*CfgGetHaulRoutesResponse)(nil),                    // 108: etco_proto.CfgGetHaulRoutesResponse
	(*CfgMergeHaulRoutesRequest)(nil),                   // 109: etco_proto.CfgMergeHaulRoutesRequest
	(*CfgGetMarketsResponse)(nil),                       // 110: etco_proto.CfgGetMarketsResponse
	(*CfgMergeMarketsRequest)(nil),                      // 111: etco_proto.CfgMergeMarketsRequest
	(*CfgGetBuybackBundleKeysResponse)(nil),             // 112: etco_proto.CfgGetBuybackBundleKeysResponse
	(*CfgGetShopBundleKeysResponse)(nil),                // 113: etco_proto.CfgGetShopBundleKeysResponse
	(*CfgGetHaulBundleKeysResponse)(nil),                // 114: etco_proto.CfgGetHaulBundleKeysResponse
	(*CfgGetMarketNamesResponse)(nil),                   // 115: etco_proto.CfgGetMarketNamesResponse
	nil,                                                 // 116: etco_proto.CfgBuybackSystemTypeBundle.InnerEntry
	nil,                                                 // 117: etco_proto.CfgShopLocationTypeBundle.InnerEntry
	nil,                                                 // 118: etco_proto.CfgHaulRouteTypeBundle.InnerEntry
	nil,                                                 // 119: etco_proto.PurchaseQueueResponse.QueueEntry
	nil,                                                 // 120: etco_proto.SaveHaulAppraisalRequest.FallbackPriceEntry
	nil,                                                 // 121: etco_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.BuilderEntry
	nil,                                                 // 122: etco_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.BuilderEntry
	nil,                                                 // 123: etco_proto.CfgGetHaulRouteTypeMapsBuilderResponse.BuilderEntry
	nil,                                                 // 124: etco_proto.CfgMergeHaulRouteTypeMapsBuilderRequest.BuilderEntry
	nil,                                                 // 125: etco_proto.CfgGetShopLocationTypeMapsBuilderResponse.BuilderEntry
	nil,                                                 // 126: etco_proto.CfgMergeShopLocationTypeMapsBuilderRequest.BuilderEntry
	nil,                                                 // 127: etco_proto.CfgGetBuybackSystemsResponse.SystemsEntry
	nil,                                                 // 128: etco_proto.CfgMergeBuybackSystemsRequest.SystemsEntry
	nil,                                                 // 129: etco_proto.CfgGetShopLocationsResponse.LocationsEntry
	nil,                                                 // 130: etco_proto.CfgMergeShopLocationsRequest.LocationsEntry
	nil,                                                 // 131: etco_proto.CfgGetHaulRoutesResponse.RoutesEntry
	nil,                                                 // 132: etco_proto.CfgMergeHaulRoutesRequest.RoutesEntry
	nil,                                                 // 133: etco_proto.CfgGetMarketsResponse.MarketsEntry
	nil,                                                 // 134: etco_proto.CfgMergeMarketsRequest.MarketsEntry
}
var file_etco_proto_depIdxs = []int32{
	0,   // 0: etco_proto.ErrorResponse.code:type_name -> etco_proto.ErrorCode
	12,  // 1: etco_proto.NamedBasicItem.type_id:type_name -> etco_proto.NamedTypeId
	16,  // 2: etco_proto.ShopLocationInfo.location_info:type_name -> etco_proto.LocationInfo
	17,  // 3: etco_proto.LocationInfo.system_info:type_name -> etco_proto.SystemInfo
	17,  // 4: etco_proto.HaulRouteInfo.start_system_info:type_name -> etco_proto.SystemInfo
	17,  // 5: etco_proto.HaulRouteInfo.end_system_info:type_name -> etco_proto.SystemInfo
	21,  // 6: etco_proto.HaulAppraisal.items:type_name -> etco_proto.HaulItem
	18,  // 7: etco_proto.HaulAppraisal.route_info:type_name -> etco_proto.HaulRouteInfo
	8,   // 8: etco_proto.HaulAppraisal.reward_kind:type_name -> etco_proto.HaulRewardKind
	12,  // 9: etco_proto.HaulItem.type_id:type_name -> etco_proto.NamedTypeId
	23,  // 10: etco_proto.BuybackAppraisal.items:type_name -> etco_proto.BuybackParentItem
	17,  // 11: etco_proto.BuybackAppraisal.system_info:type_name -> etco_proto.SystemInfo
	12,  // 12: etco_proto.BuybackParentItem.type_id:type_name -> etco_proto.NamedTypeId
	24,  // 13: etco_proto.BuybackParentItem.children:type_name -> etco_proto.BuybackChildItem
	12,  // 14: etco_proto.BuybackChildItem.type_id:type_name -> etco_proto.NamedTypeId
	26,  // 15: etco_proto.ShopAppraisal.items:type_name -> etco_proto.ShopItem
	16,  // 16: etco_proto.ShopAppraisal.location_info:type_name -> etco_proto.LocationInfo
	12,  // 17: etco_proto.ShopItem.type_id:type_name -> etco_proto.NamedTypeId
	16,  // 18: etco_proto.PurchaseQueue.location_info:type_name -> etco_proto.LocationInfo
	4,   // 19: etco_proto.Contract.status:type_name -> etco_proto.ContractStatus
	16,  // 20: etco_proto.Contract.start_location_info:type_name -> etco_proto.LocationInfo
	16,  // 21: etco_proto.Contract.location_info:type_name -> etco_proto.LocationInfo
	5,   // 22: etco_proto.Contract.entity_kind:type_name -> etco_proto.EntityKind
	28,  // 23: etco_proto.BuybackContractQueueEntry.contract:type_name -> etco_proto.Contract
	22,  // 24: etco_proto.BuybackContractQueueEntry.appraisal:type_name -> etco_proto.BuybackAppraisal
	28,  // 25: etco_proto.ShopContractQueueEntry.contract:type_name -> etco_proto.Contract
	25,  // 26: etco_proto.ShopContractQueueEntry.appraisal:type_name -> etco_proto.ShopAppraisal
	28,  // 27: etco_proto.HaulContractQueueEntry.contract:type_name -> etco_proto.Contract
	20,  // 28: etco_proto.HaulContractQueueEntry.appraisal:type_name -> etco_proto.HaulAppraisal
	32,  // 29: etco_proto.CfgBuybackTypePricing.pricing:type_name -> etco_proto.CfgTypePricing
	32,  // 30: etco_proto.CfgShopTypePricing.inner:type_name -> etco_proto.CfgTypePricing
	32,  // 31: etco_proto.CfgHaulTypePricing.inner:type_name -> etco_proto.CfgTypePricing
	116, // 32: etco_proto.CfgBuybackSystemTypeBundle.inner:type_name -> etco_proto.CfgBuybackSystemTypeBundle.InnerEntry
	117, // 33: etco_proto.CfgShopLocationTypeBundle.inner:type_name -> etco_proto.CfgShopLocationTypeBundle.InnerEntry
	118, // 34: etco_proto.CfgHaulRouteTypeBundle.inner:type_name -> etco_proto.CfgHaulRouteTypeBundle.InnerEntry
	7,   // 35: etco_proto.CfgHaulRoute.reward_strategy:type_name -> etco_proto.HaulRewardStrategy
	11,  // 36: etco_proto.TypesResponse.error:type_name -> etco_proto.ErrorResponse
	12,  // 37: etco_proto.NamedTypesResponse.types:type_name -> etco_proto.NamedTypeId
	11,  // 38: etco_proto.NamedTypesResponse.error:type_name -> etco_proto.ErrorResponse
	17,  // 39: etco_proto.SystemsResponse.systems:type_name -> etco_proto.SystemInfo
	11,  // 40: etco_proto.SystemsResponse.error:type_name -> etco_proto.ErrorResponse
	18,  // 41: etco_proto.HaulRoutesResponse.routes:type_name -> etco_proto.HaulRouteInfo
	11,  // 42: etco_proto.HaulRoutesResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 43: etco_proto.AssetFlagsResponse.error:type_name -> etco_proto.ErrorResponse
	15,  // 44: etco_proto.AllShopLocationsResponse.locations:type_name -> etco_proto.ShopLocationInfo
	11,  // 45: etco_proto.AllShopLocationsResponse.error:type_name -> etco_proto.ErrorResponse
	16,  // 46: etco_proto.LocationsResponse.locations:type_name -> etco_proto.LocationInfo
	11,  // 47: etco_proto.LocationsResponse.error:type_name -> etco_proto.ErrorResponse
	14,  // 48: etco_proto.ParseResponse.known_items:type_name -> etco_proto.NamedBasicItem
	14,  // 49: etco_proto.ParseResponse.unknown_items:type_name -> etco_proto.NamedBasicItem
	11,  // 50: etco_proto.ParseResponse.error:type_name -> etco_proto.ErrorResponse
	1,   // 51: etco_proto.LoginRequest.app:type_name -> etco_proto.EsiApp
	11,  // 52: etco_proto.LoginResponse.error:type_name -> etco_proto.ErrorResponse
	1,   // 53: etco_proto.TokenInfoRequest.app:type_name -> etco_proto.EsiApp
	11,  // 54: etco_proto.TokenInfoResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 55: etco_proto.CharacterInfoResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 56: etco_proto.CorporationInfoResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 57: etco_proto.AllianceInfoResponse.error:type_name -> etco_proto.ErrorResponse
	13,  // 58: etco_proto.NewAppraisalRequest.items:type_name -> etco_proto.BasicItem
	13,  // 59: etco_proto.NewHaulAppraisalRequest.items:type_name -> etco_proto.BasicItem
	29,  // 60: etco_proto.BuybackContractQueueResponse.queue:type_name -> etco_proto.BuybackContractQueueEntry
	11,  // 61: etco_proto.BuybackContractQueueResponse.error:type_name -> etco_proto.ErrorResponse
	30,  // 62: etco_proto.ShopContractQueueResponse.queue:type_name -> etco_proto.ShopContractQueueEntry
	11,  // 63: etco_proto.ShopContractQueueResponse.error:type_name -> etco_proto.ErrorResponse
	31,  // 64: etco_proto.HaulContractQueueResponse.queue:type_name -> etco_proto.HaulContractQueueEntry
	11,  // 65: etco_proto.HaulContractQueueResponse.error:type_name -> etco_proto.ErrorResponse
	119, // 66: etco_proto.PurchaseQueueResponse.queue:type_name -> etco_proto.PurchaseQueueResponse.QueueEntry
	11,  // 67: etco_proto.PurchaseQueueResponse.error:type_name -> etco_proto.ErrorResponse
	27,  // 68: etco_proto.LocationPurchaseQueueResponse.queue:type_name -> etco_proto.PurchaseQueue
	11,  // 69: etco_proto.LocationPurchaseQueueResponse.error:type_name -> etco_proto.ErrorResponse
	19,  // 70: etco_proto.DeletePurchasesRequest.entries:type_name -> etco_proto.CodeAndLocationId
	11,  // 71: etco_proto.DeletePurchasesResponse.error:type_name -> etco_proto.ErrorResponse
	13,  // 72: etco_proto.SaveAppraisalRequest.items:type_name -> etco_proto.BasicItem
	13,  // 73: etco_proto.SaveHaulAppraisalRequest.items:type_name -> etco_proto.BasicItem
	120, // 74: etco_proto.SaveHaulAppraisalRequest.fallback_price:type_name -> etco_proto.SaveHaulAppraisalRequest.FallbackPriceEntry
	22,  // 75: etco_proto.BuybackAppraisalResponse.appraisal:type_name -> etco_proto.BuybackAppraisal
	11,  // 76: etco_proto.BuybackAppraisalResponse.error:type_name -> etco_proto.ErrorResponse
	2,   // 77: etco_proto.ShopAppraisalResponse.status:type_name -> etco_proto.MakePurchaseStatus
	25,  // 78: etco_proto.ShopAppraisalResponse.appraisal:type_name -> etco_proto.ShopAppraisal
	11,  // 79: etco_proto.ShopAppraisalResponse.error:type_name -> etco_proto.ErrorResponse
	20,  // 80: etco_proto.HaulAppraisalResponse.appraisal:type_name -> etco_proto.HaulAppraisal
	11,  // 81: etco_proto.HaulAppraisalResponse.error:type_name -> etco_proto.ErrorResponse
	26,  // 82: etco_proto.ShopInventoryResponse.items:type_name -> etco_proto.ShopItem
	16,  // 83: etco_proto.ShopInventoryResponse.location_info:type_name -> etco_proto.LocationInfo
	11,  // 84: etco_proto.ShopInventoryResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 85: etco_proto.UserTimePurchaseResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 86: etco_proto.UserAppraisalCodesResponse.error:type_name -> etco_proto.ErrorResponse
	3,   // 87: etco_proto.CancelPurchaseResponse.status:type_name -> etco_proto.CancelPurchaseStatus
	11,  // 88: etco_proto.CancelPurchaseResponse.error:type_name -> etco_proto.ErrorResponse
	6,   // 89: etco_proto.StatusAppraisalResponse.status:type_name -> etco_proto.AppraisalStatus
	28,  // 90: etco_proto.StatusAppraisalResponse.contract:type_name -> etco_proto.Contract
	14,  // 91: etco_proto.StatusAppraisalResponse.contract_items:type_name -> etco_proto.NamedBasicItem
	11,  // 92: etco_proto.StatusAppraisalResponse.error:type_name -> etco_proto.ErrorResponse
	22,  // 93: etco_proto.GetBuybackAppraisalResponse.appraisal:type_name -> etco_proto.BuybackAppraisal
	11,  // 94: etco_proto.GetBuybackAppraisalResponse.error:type_name -> etco_proto.ErrorResponse
	25,  // 95: etco_proto.GetShopAppraisalResponse.appraisal:type_name -> etco_proto.ShopAppraisal
	11,  // 96: etco_proto.GetShopAppraisalResponse.error:type_name -> etco_proto.ErrorResponse
	20,  // 97: etco_proto.GetHaulAppraisalResponse.appraisal:type_name -> etco_proto.HaulAppraisal
	11,  // 98: etco_proto.GetHaulAppraisalResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 99: etco_proto.CfgUpdateResponse.error:type_name -> etco_proto.ErrorResponse
	44,  // 100: etco_proto.CfgGetAuthListResponse.auth_list:type_name -> etco_proto.CfgAuthList
	11,  // 101: etco_proto.CfgGetAuthListResponse.error:type_name -> etco_proto.ErrorResponse
	44,  // 102: etco_proto.CfgSetAuthListRequest.auth_list:type_name -> etco_proto.CfgAuthList
	43,  // 103: etco_proto.CfgGetConstDataResponse.const_data:type_name -> etco_proto.CfgConstData
	11,  // 104: etco_proto.CfgGetConstDataResponse.error:type_name -> etco_proto.ErrorResponse
	43,  // 105: etco_proto.CfgSetConstDataRequest.const_data:type_name -> etco_proto.CfgConstData
	121, // 106: etco_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.builder:type_name -> etco_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.BuilderEntry
	11,  // 107: etco_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.error:type_name -> etco_proto.ErrorResponse
	122, // 108: etco_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.builder:type_name -> etco_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.BuilderEntry
	123, // 109: etco_proto.CfgGetHaulRouteTypeMapsBuilderResponse.builder:type_name -> etco_proto.CfgGetHaulRouteTypeMapsBuilderResponse.BuilderEntry
	11,  // 110: etco_proto.CfgGetHaulRouteTypeMapsBuilderResponse.error:type_name -> etco_proto.ErrorResponse
	124, // 111: etco_proto.CfgMergeHaulRouteTypeMapsBuilderRequest.builder:type_name -> etco_proto.CfgMergeHaulRouteTypeMapsBuilderRequest.BuilderEntry
	125, // 112: etco_proto.CfgGetShopLocationTypeMapsBuilderResponse.builder:type_name -> etco_proto.CfgGetShopLocationTypeMapsBuilderResponse.BuilderEntry
	11,  // 113: etco_proto.CfgGetShopLocationTypeMapsBuilderResponse.error:type_name -> etco_proto.ErrorResponse
	126, // 114: etco_proto.CfgMergeShopLocationTypeMapsBuilderRequest.builder:type_name -> etco_proto.CfgMergeShopLocationTypeMapsBuilderRequest.BuilderEntry
	127, // 115: etco_proto.CfgGetBuybackSystemsResponse.systems:type_name -> etco_proto.CfgGetBuybackSystemsResponse.SystemsEntry
	11,  // 116: etco_proto.CfgGetBuybackSystemsResponse.error:type_name -> etco_proto.ErrorResponse
	128, // 117: etco_proto.CfgMergeBuybackSystemsRequest.systems:type_name -> etco_proto.CfgMergeBuybackSystemsRequest.SystemsEntry
	129, // 118: etco_proto.CfgGetShopLocationsResponse.locations:type_name -> etco_proto.CfgGetShopLocationsResponse.LocationsEntry
	11,  // 119: etco_proto.CfgGetShopLocationsResponse.error:type_name -> etco_proto.ErrorResponse
	130, // 120: etco_proto.CfgMergeShopLocationsRequest.locations:type_name -> etco_proto.CfgMergeShopLocationsRequest.LocationsEntry
	131, // 121: etco_proto.CfgGetHaulRoutesResponse.routes:type_name -> etco_proto.CfgGetHaulRoutesResponse.RoutesEntry
	11,  // 122: etco_proto.CfgGetHaulRoutesResponse.error:type_name -> etco_proto.ErrorResponse
	132, // 123: etco_proto.CfgMergeHaulRoutesRequest.routes:type_name -> etco_proto.CfgMergeHaulRoutesRequest.RoutesEntry
	133, // 124: etco_proto.CfgGetMarketsResponse.markets:type_name -> etco_proto.CfgGetMarketsResponse.MarketsEntry
	11,  // 125: etco_proto.CfgGetMarketsResponse.error:type_name -> etco_proto.ErrorResponse
	134, // 126: etco_proto.CfgMergeMarketsRequest.markets:type_name -> etco_proto.CfgMergeMarketsRequest.MarketsEntry
	11,  // 127: etco_proto.CfgGetBuybackBundleKeysResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 128: etco_proto.CfgGetShopBundleKeysResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 129: etco_proto.CfgGetHaulBundleKeysResponse.error:type_name -> etco_proto.ErrorResponse
	11,  // 130: etco_proto.CfgGetMarketNamesResponse.error:type_name -> etco_proto.ErrorResponse
	33,  // 131: etco_proto.CfgBuybackSystemTypeBundle.InnerEntry.value:type_name -> etco_proto.CfgBuybackTypePricing
	34,  // 132: etco_proto.CfgShopLocationTypeBundle.InnerEntry.value:type_name -> etco_proto.CfgShopTypePricing
	35,  // 133: etco_proto.CfgHaulRouteTypeBundle.InnerEntry.value:type_name -> etco_proto.CfgHaulTypePricing
	27,  // 134: etco_proto.PurchaseQueueResponse.QueueEntry.value:type_name -> etco_proto.PurchaseQueue
	36,  // 135: etco_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.BuilderEntry.value:type_name -> etco_proto.CfgBuybackSystemTypeBundle
	36,  // 136: etco_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.BuilderEntry.value:type_name -> etco_proto.CfgBuybackSystemTypeBundle
	38,  // 137: etco_proto.CfgGetHaulRouteTypeMapsBuilderResponse.BuilderEntry.value:type_name -> etco_proto.CfgHaulRouteTypeBundle
	38,  // 138: etco_proto.CfgMergeHaulRouteTypeMapsBuilderRequest.BuilderEntry.value:type_name -> etco_proto.CfgHaulRouteTypeBundle
	37,  // 139: etco_proto.CfgGetShopLocationTypeMapsBuilderResponse.BuilderEntry.value:type_name -> etco_proto.CfgShopLocationTypeBundle
	37,  // 140: etco_proto.CfgMergeShopLocationTypeMapsBuilderRequest.BuilderEntry.value:type_name -> etco_proto.CfgShopLocationTypeBundle
	39,  // 141: etco_proto.CfgGetBuybackSystemsResponse.SystemsEntry.value:type_name -> etco_proto.CfgBuybackSystem
	39,  // 142: etco_proto.CfgMergeBuybackSystemsRequest.SystemsEntry.value:type_name -> etco_proto.CfgBuybackSystem
	40,  // 143: etco_proto.CfgGetShopLocationsResponse.LocationsEntry.value:type_name -> etco_proto.CfgShopLocation
	40,  // 144: etco_proto.CfgMergeShopLocationsRequest.LocationsEntry.value:type_name -> etco_proto.CfgShopLocation
	41,  // 145: etco_proto.CfgGetHaulRoutesResponse.RoutesEntry.value:type_name -> etco_proto.CfgHaulRoute
	41,  // 146: etco_proto.CfgMergeHaulRoutesRequest.RoutesEntry.value:type_name -> etco_proto.CfgHaulRoute
	42,  // 147: etco_proto.CfgGetMarketsResponse.MarketsEntry.value:type_name -> etco_proto.CfgMarket
	42,  // 148: etco_proto.CfgMergeMarketsRequest.MarketsEntry.value:type_name -> etco_proto.CfgMarket
	9,   // 149: etco_proto.EveTradingCo.AllTypes:input_type -> etco_proto.EmptyRequest
	9,   // 150: etco_proto.EveTradingCo.AllNamedTypes:input_type -> etco_proto.EmptyRequest
	46,  // 151: etco_proto.EveTradingCo.NamedTypes:input_type -> etco_proto.NamedTypesRequest
	9,   // 152: etco_proto.EveTradingCo.AllBuybackSystems:input_type -> etco_proto.EmptyRequest
	9,   // 153: etco_proto.EveTradingCo.AllSystems:input_type -> etco_proto.EmptyRequest
	48,  // 154: etco_proto.EveTradingCo.Systems:input_type -> etco_proto.SystemsRequest
	9,   // 155: etco_proto.EveTradingCo.AllHaulRoutes:input_type -> etco_proto.EmptyRequest
	9,   // 156: etco_proto.EveTradingCo.AllAssetFlags:input_type -> etco_proto.EmptyRequest
	9,   // 157: etco_proto.EveTradingCo.AllShopLocations:input_type -> etco_proto.EmptyRequest
	53,  // 158: etco_proto.EveTradingCo.Locations:input_type -> etco_proto.LocationsRequest
	57,  // 159: etco_proto.EveTradingCo.Login:input_type -> etco_proto.LoginRequest
	55,  // 160: etco_proto.EveTradingCo.Parse:input_type -> etco_proto.ParseRequest
	61,  // 161: etco_proto.EveTradingCo.CharacterInfo:input_type -> etco_proto.EntityInfoRequest
	61,  // 162: etco_proto.EveTradingCo.CorporationInfo:input_type -> etco_proto.EntityInfoRequest
	61,  // 163: etco_proto.EveTradingCo.AllianceInfo:input_type -> etco_proto.EntityInfoRequest
	65,  // 164: etco_proto.EveTradingCo.NewBuybackAppraisal:input_type -> etco_proto.NewAppraisalRequest
	65,  // 165: etco_proto.EveTradingCo.NewShopAppraisal:input_type -> etco_proto.NewAppraisalRequest
	66,  // 166: etco_proto.EveTradingCo.NewHaulAppraisal:input_type -> etco_proto.NewHaulAppraisalRequest
	59,  // 167: etco_proto.EveTradingCo.TokenInfo:input_type -> etco_proto.TokenInfoRequest
	10,  // 168: etco_proto.EveTradingCo.BuybackContractQueue:input_type -> etco_proto.BasicRequest
	10,  // 169: etco_proto.EveTradingCo.ShopContractQueue:input_type -> etco_proto.BasicRequest
	10,  // 170: etco_proto.EveTradingCo.HaulContractQueue:input_type -> etco_proto.BasicRequest
	10,  // 171: etco_proto.EveTradingCo.PurchaseQueue:input_type -> etco_proto.BasicRequest
	71,  // 172: etco_proto.EveTradingCo.LocationPurchaseQueue:input_type -> etco_proto.LocationPurchaseQueueRequest
	73,  // 173: etco_proto.EveTradingCo.DeletePurchases:input_type -> etco_proto.DeletePurchasesRequest
	85,  // 174: etco_proto.EveTradingCo.CancelPurchase:input_type -> etco_proto.CancelPurchaseRequest
	82,  // 175: etco_proto.EveTradingCo.UserBuybackAppraisalCodes:input_type -> etco_proto.UserDataRequest
	82,  // 176: etco_proto.EveTradingCo.UserShopAppraisalCodes:input_type -> etco_proto.UserDataRequest
	82,  // 177: etco_proto.EveTradingCo.UserHaulAppraisalCodes:input_type -> etco_proto.UserDataRequest
	82,  // 178: etco_proto.EveTradingCo.UserMadePurchase:input_type -> etco_proto.UserDataRequest
	82,  // 179: etco_proto.EveTradingCo.UserCancelledPurchase:input_type -> etco_proto.UserDataRequest
	75,  // 180: etco_proto.EveTradingCo.SaveBuybackAppraisal:input_type -> etco_proto.SaveAppraisalRequest
	75,  // 181: etco_proto.EveTradingCo.SaveShopAppraisal:input_type -> etco_proto.SaveAppraisalRequest
	76,  // 182: etco_proto.EveTradingCo.SaveHaulAppraisal:input_type -> etco_proto.SaveHaulAppraisalRequest
	80,  // 183: etco_proto.EveTradingCo.ShopInventory:input_type -> etco_proto.ShopInventoryRequest
	87,  // 184: etco_proto.EveTradingCo.StatusBuybackAppraisal:input_type -> etco_proto.StatusAppraisalRequest
	87,  // 185: etco_proto.EveTradingCo.StatusShopAppraisal:input_type -> etco_proto.StatusAppraisalRequest
	87,  // 186: etco_proto.EveTradingCo.StatusHaulAppraisal:input_type -> etco_proto.StatusAppraisalRequest
	89,  // 187: etco_proto.EveTradingCo.GetBuybackAppraisal:input_type -> etco_proto.GetAppraisalRequest
	89,  // 188: etco_proto.EveTradingCo.GetShopAppraisal:input_type -> etco_proto.GetAppraisalRequest
	89,  // 189: etco_proto.EveTradingCo.GetHaulAppraisal:input_type -> etco_proto.GetAppraisalRequest
	10,  // 190: etco_proto.EveTradingCo.CfgGetUserAuthList:input_type -> etco_proto.BasicRequest
	10,  // 191: etco_proto.EveTradingCo.CfgGetAdminAuthList:input_type -> etco_proto.BasicRequest
	10,  // 192: etco_proto.EveTradingCo.CfgGetBuybackSystemTypeMapsBuilder:input_type -> etco_proto.BasicRequest
	10,  // 193: etco_proto.EveTradingCo.CfgGetShopLocationTypeMapsBuilder:input_type -> etco_proto.BasicRequest
	10,  // 194: etco_proto.EveTradingCo.CfgGetHaulRouteTypeMapsBuilder:input_type -> etco_proto.BasicRequest
	10,  // 195: etco_proto.EveTradingCo.CfgGetBuybackSystems:input_type -> etco_proto.BasicRequest
	10,  // 196: etco_proto.EveTradingCo.CfgGetShopLocations:input_type -> etco_proto.BasicRequest
	10,  // 197: etco_proto.EveTradingCo.CfgGetHaulRoutes:input_type -> etco_proto.BasicRequest
	10,  // 198: etco_proto.EveTradingCo.CfgGetMarkets:input_type -> etco_proto.BasicRequest
	10,  // 199: etco_proto.EveTradingCo.CfgGetMarketNames:input_type -> etco_proto.BasicRequest
	10,  // 200: etco_proto.EveTradingCo.CfgGetBuybackBundleKeys:input_type -> etco_proto.BasicRequest
	10,  // 201: etco_proto.EveTradingCo.CfgGetShopBundleKeys:input_type -> etco_proto.BasicRequest
	10,  // 202: etco_proto.EveTradingCo.CfgGetHaulBundleKeys:input_type -> etco_proto.BasicRequest
	10,  // 203: etco_proto.EveTradingCo.CfgGetConstData:input_type -> etco_proto.BasicRequest
	95,  // 204: etco_proto.EveTradingCo.CfgSetUserAuthList:input_type -> etco_proto.CfgSetAuthListRequest
	95,  // 205: etco_proto.EveTradingCo.CfgSetAdminAuthList:input_type -> etco_proto.CfgSetAuthListRequest
	97,  // 206: etco_proto.EveTradingCo.CfgSetConstData:input_type -> etco_proto.CfgSetConstDataRequest
	99,  // 207: etco_proto.EveTradingCo.CfgMergeBuybackSystemTypeMapsBuilder:input_type -> etco_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest
	103, // 208: etco_proto.EveTradingCo.CfgMergeShopLocationTypeMapsBuilder:input_type -> etco_proto.CfgMergeShopLocationTypeMapsBuilderRequest
	101, // 209: etco_proto.EveTradingCo.CfgMergeHaulRouteTypeMapsBuilder:input_type -> etco_proto.CfgMergeHaulRouteTypeMapsBuilderRequest
	105, // 210: etco_proto.EveTradingCo.CfgMergeBuybackSystems:input_type -> etco_proto.CfgMergeBuybackSystemsRequest
	107, // 211: etco_proto.EveTradingCo.CfgMergeShopLocations:input_type -> etco_proto.CfgMergeShopLocationsRequest
	109, // 212: etco_proto.EveTradingCo.CfgMergeHaulRoutes:input_type -> etco_proto.CfgMergeHaulRoutesRequest
	111, // 213: etco_proto.EveTradingCo.CfgMergeMarkets:input_type -> etco_proto.CfgMergeMarketsRequest
	45,  // 214: etco_proto.EveTradingCo.AllTypes:output_type -> etco_proto.TypesResponse
	47,  // 215: etco_proto.EveTradingCo.AllNamedTypes:output_type -> etco_proto.NamedTypesResponse
	47,  // 216: etco_proto.EveTradingCo.NamedTypes:output_type -> etco_proto.NamedTypesResponse
	49,  // 217: etco_proto.EveTradingCo.AllBuybackSystems:output_type -> etco_proto.SystemsResponse
	49,  // 218: etco_proto.EveTradingCo.AllSystems:output_type -> etco_proto.SystemsResponse
	49,  // 219: etco_proto.EveTradingCo.Systems:output_type -> etco_proto.SystemsResponse
	50,  // 220: etco_proto.EveTradingCo.AllHaulRoutes:output_type -> etco_proto.HaulRoutesResponse
	51,  // 221: etco_proto.EveTradingCo.AllAssetFlags:output_type -> etco_proto.AssetFlagsResponse
	52,  // 222: etco_proto.EveTradingCo.AllShopLocations:output_type -> etco_proto.AllShopLocationsResponse
	54,  // 223: etco_proto.EveTradingCo.Locations:output_type -> etco_proto.LocationsResponse
	58,  // 224: etco_proto.EveTradingCo.Login:output_type -> etco_proto.LoginResponse
	56,  // 225: etco_proto.EveTradingCo.Parse:output_type -> etco_proto.ParseResponse
	62,  // 226: etco_proto.EveTradingCo.CharacterInfo:output_type -> etco_proto.CharacterInfoResponse
	63,  // 227: etco_proto.EveTradingCo.CorporationInfo:output_type -> etco_proto.CorporationInfoResponse
	64,  // 228: etco_proto.EveTradingCo.AllianceInfo:output_type -> etco_proto.AllianceInfoResponse
	77,  // 229: etco_proto.EveTradingCo.NewBuybackAppraisal:output_type -> etco_proto.BuybackAppraisalResponse
	78,  // 230: etco_proto.EveTradingCo.NewShopAppraisal:output_type -> etco_proto.ShopAppraisalResponse
	79,  // 231: etco_proto.EveTradingCo.NewHaulAppraisal:output_type -> etco_proto.HaulAppraisalResponse
	60,  // 232: etco_proto.EveTradingCo.TokenInfo:output_type -> etco_proto.TokenInfoResponse
	67,  // 233: etco_proto.EveTradingCo.BuybackContractQueue:output_type -> etco_proto.BuybackContractQueueResponse
	68,  // 234: etco_proto.EveTradingCo.ShopContractQueue:output_type -> etco_proto.ShopContractQueueResponse
	69,  // 235: etco_proto.EveTradingCo.HaulContractQueue:output_type -> etco_proto.HaulContractQueueResponse
	70,  // 236: etco_proto.EveTradingCo.PurchaseQueue:output_type -> etco_proto.PurchaseQueueResponse
	72,  // 237: etco_proto.EveTradingCo.LocationPurchaseQueue:output_type -> etco_proto.LocationPurchaseQueueResponse
	74,  // 238: etco_proto.EveTradingCo.DeletePurchases:output_type -> etco_proto.DeletePurchasesResponse
	86,  // 239: etco_proto.EveTradingCo.CancelPurchase:output_type -> etco_proto.CancelPurchaseResponse
	84,  // 240: etco_proto.EveTradingCo.UserBuybackAppraisalCodes:output_type -> etco_proto.UserAppraisalCodesResponse
	84,  // 241: etco_proto.EveTradingCo.UserShopAppraisalCodes:output_type -> etco_proto.UserAppraisalCodesResponse
	84,  // 242: etco_proto.EveTradingCo.UserHaulAppraisalCodes:output_type -> etco_proto.UserAppraisalCodesResponse
	83,  // 243: etco_proto.EveTradingCo.UserMadePurchase:output_type -> etco_proto.UserTimePurchaseResponse
	83,  // 244: etco_proto.EveTradingCo.UserCancelledPurchase:output_type -> etco_proto.UserTimePurchaseResponse
	77,  // 245: etco_proto.EveTradingCo.SaveBuybackAppraisal:output_type -> etco_proto.BuybackAppraisalResponse
	78,  // 246: etco_proto.EveTradingCo.SaveShopAppraisal:output_type -> etco_proto.ShopAppraisalResponse
	79,  // 247: etco_proto.EveTradingCo.SaveHaulAppraisal:output_type -> etco_proto.HaulAppraisalResponse
	81,  // 248: etco_proto.EveTradingCo.ShopInventory:output_type -> etco_proto.ShopInventoryResponse
	88,  // 249: etco_proto.EveTradingCo.StatusBuybackAppraisal:output_type -> etco_proto.StatusAppraisalResponse
	88,  // 250: etco_proto.EveTradingCo.StatusShopAppraisal:output_type -> etco_proto.StatusAppraisalResponse
	88,  // 251: etco_proto.EveTradingCo.StatusHaulAppraisal:output_type -> etco_proto.StatusAppraisalResponse
	90,  // 252: etco_proto.EveTradingCo.GetBuybackAppraisal:output_type -> etco_proto.GetBuybackAppraisalResponse
	91,  // 253: etco_proto.EveTradingCo.GetShopAppraisal:output_type -> etco_proto.GetShopAppraisalResponse
	92,  // 254: etco_proto.EveTradingCo.GetHaulAppraisal:output_type -> etco_proto.GetHaulAppraisalResponse
	94,  // 255: etco_proto.EveTradingCo.CfgGetUserAuthList:output_type -> etco_proto.CfgGetAuthListResponse
	94,  // 256: etco_proto.EveTradingCo.CfgGetAdminAuthList:output_type -> etco_proto.CfgGetAuthListResponse
	98,  // 257: etco_proto.EveTradingCo.CfgGetBuybackSystemTypeMapsBuilder:output_type -> etco_proto.CfgGetBuybackSystemTypeMapsBuilderResponse
	102, // 258: etco_proto.EveTradingCo.CfgGetShopLocationTypeMapsBuilder:output_type -> etco_proto.CfgGetShopLocationTypeMapsBuilderResponse
	100, // 259: etco_proto.EveTradingCo.CfgGetHaulRouteTypeMapsBuilder:output_type -> etco_proto.CfgGetHaulRouteTypeMapsBuilderResponse
	104, // 260: etco_proto.EveTradingCo.CfgGetBuybackSystems:output_type -> etco_proto.CfgGetBuybackSystemsResponse
	106, // 261: etco_proto.EveTradingCo.CfgGetShopLocations:output_type -> etco_proto.CfgGetShopLocationsResponse
	108, // 262: etco_proto.EveTradingCo.CfgGetHaulRoutes:output_type -> etco_proto.CfgGetHaulRoutesResponse
	110, // 263: etco_proto.EveTradingCo.CfgGetMarkets:output_type -> etco_proto.CfgGetMarketsResponse
	115, // 264: etco_proto.EveTradingCo.CfgGetMarketNames:output_type -> etco_proto.CfgGetMarketNamesResponse
	112, // 265: etco_proto.EveTradingCo.CfgGetBuybackBundleKeys:output_type -> etco_proto.CfgGetBuybackBundleKeysResponse
	113, // 266: etco_proto.EveTradingCo.CfgGetShopBundleKeys:output_type -> etco_proto.CfgGetShopBundleKeysResponse
	114, // 267: etco_proto.EveTradingCo.CfgGetHaulBundleKeys:output_type -> etco_proto.CfgGetHaulBundleKeysResponse
	96,  // 268: etco_proto.EveTradingCo.CfgGetConstData:output_type -> etco_proto.CfgGetConstDataResponse
	93,  // 269: etco_proto.EveTradingCo.CfgSetUserAuthList:output_type -> etco_proto.CfgUpdateResponse
	93,  // 270: etco_proto.EveTradingCo.CfgSetAdminAuthList:output_type -> etco_proto.CfgUpdateResponse
	93,  // 271: etco_proto.EveTradingCo.CfgSetConstData:output_type -> etco_proto.CfgUpdateResponse
	93,  // 272: etco_proto.EveTradingCo.CfgMergeBuybackSystemTypeMapsBuilder:output_type -> etco_proto.CfgUpdateResponse
	93,  // 273: etco_proto.EveTradingCo.CfgMergeShopLocationTypeMapsBuilder:output_type -> etco_proto.CfgUpdateResponse
	93,  // 274: etco_proto.EveTradingCo.CfgMergeHaulRouteTypeMapsBuilder:output_type -> etco_proto.CfgUpdateResponse
	93,  // 275: etco_proto.EveTradingCo.CfgMergeBuybackSystems:output_type -> etco_proto.CfgUpdateResponse
	93,  // 276: etco_proto.EveTradingCo.CfgMergeShopLocations:output_type -> etco_proto.CfgUpdateResponse
	93,  // 277: etco_proto.EveTradingCo.CfgMergeHaulRoutes:output_type -> etco_proto.CfgUpdateResponse
	93,  // 278: etco_proto.EveTradingCo.CfgMergeMarkets:output_type -> etco_proto.CfgUpdateResponse
	214, // [214:279] is the sub-list for method output_type
	149, // [149:214] is the sub-list for method input_type
	149, // [149:149] is the sub-list for extension type_name
	149, // [149:149] is the sub-list for extension extendee
	0,   // [0:149] is the sub-list for field type_name
}

func init() { file_etco_proto_init() }
func file_etco_proto_init() {
	if File_etco_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_etco_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedTypeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedBasicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaulRouteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeAndLocationId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaulAppraisal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaulItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackAppraisal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackParentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackChildItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopAppraisal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContractQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopContractQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaulContractQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgBuybackTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgShopTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgHaulTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgBuybackSystemTypeBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgShopLocationTypeBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgHaulRouteTypeBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgBuybackSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgShopLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgHaulRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMarket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgConstData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgAuthList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaulRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetFlagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllShopLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CorporationInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllianceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewHaulAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContractQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopContractQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaulContractQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationPurchaseQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationPurchaseQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePurchasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePurchasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveHaulAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaulAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTimePurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAppraisalCodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHaulAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetAuthListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgSetAuthListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetConstDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgSetConstDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetHaulRouteTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeHaulRouteTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetHaulRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeHaulRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackBundleKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopBundleKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetHaulBundleKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_etco_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   126,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_etco_proto_goTypes,
		DependencyIndexes: file_etco_proto_depIdxs,
		EnumInfos:         file_etco_proto_enumTypes,
		MessageInfos:      file_etco_proto_msgTypes,
	}.Build()
	File_etco_proto = out.File
	file_etco_proto_rawDesc = nil
	file_etco_proto_goTypes = nil
	file_etco_proto_depIdxs = nil
}
