// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: etco.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_OK              ErrorCode = 0
	ErrorCode_SERVER_ERROR    ErrorCode = 1
	ErrorCode_INVALID_REQUEST ErrorCode = 2
	ErrorCode_INVALID_MERGE   ErrorCode = 3
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "OK",
		1: "SERVER_ERROR",
		2: "INVALID_REQUEST",
		3: "INVALID_MERGE",
	}
	ErrorCode_value = map[string]int32{
		"OK":              0,
		"SERVER_ERROR":    1,
		"INVALID_REQUEST": 2,
		"INVALID_MERGE":   3,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{0}
}

type ContractStatus int32

const (
	ContractStatus_unknown_status      ContractStatus = 0
	ContractStatus_outstanding         ContractStatus = 1
	ContractStatus_in_progress         ContractStatus = 2
	ContractStatus_finished_issuer     ContractStatus = 3
	ContractStatus_finished_contractor ContractStatus = 4
	ContractStatus_finished            ContractStatus = 5
	ContractStatus_cancelled           ContractStatus = 6
	ContractStatus_rejected            ContractStatus = 7
	ContractStatus_failed              ContractStatus = 8
	ContractStatus_deleted             ContractStatus = 9
	ContractStatus_reversed            ContractStatus = 10
)

// Enum value maps for ContractStatus.
var (
	ContractStatus_name = map[int32]string{
		0:  "unknown_status",
		1:  "outstanding",
		2:  "in_progress",
		3:  "finished_issuer",
		4:  "finished_contractor",
		5:  "finished",
		6:  "cancelled",
		7:  "rejected",
		8:  "failed",
		9:  "deleted",
		10: "reversed",
	}
	ContractStatus_value = map[string]int32{
		"unknown_status":      0,
		"outstanding":         1,
		"in_progress":         2,
		"finished_issuer":     3,
		"finished_contractor": 4,
		"finished":            5,
		"cancelled":           6,
		"rejected":            7,
		"failed":              8,
		"deleted":             9,
		"reversed":            10,
	}
)

func (x ContractStatus) Enum() *ContractStatus {
	p := new(ContractStatus)
	*p = x
	return p
}

func (x ContractStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[1].Descriptor()
}

func (ContractStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[1]
}

func (x ContractStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractStatus.Descriptor instead.
func (ContractStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{1}
}

type ContractAssigneeType int32

const (
	ContractAssigneeType_unknown_assignee_type ContractAssigneeType = 0
	ContractAssigneeType_corporation           ContractAssigneeType = 1
	ContractAssigneeType_character             ContractAssigneeType = 2
	ContractAssigneeType_alliance              ContractAssigneeType = 3
)

// Enum value maps for ContractAssigneeType.
var (
	ContractAssigneeType_name = map[int32]string{
		0: "unknown_assignee_type",
		1: "corporation",
		2: "character",
		3: "alliance",
	}
	ContractAssigneeType_value = map[string]int32{
		"unknown_assignee_type": 0,
		"corporation":           1,
		"character":             2,
		"alliance":              3,
	}
)

func (x ContractAssigneeType) Enum() *ContractAssigneeType {
	p := new(ContractAssigneeType)
	*p = x
	return p
}

func (x ContractAssigneeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractAssigneeType) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[2].Descriptor()
}

func (ContractAssigneeType) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[2]
}

func (x ContractAssigneeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractAssigneeType.Descriptor instead.
func (ContractAssigneeType) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{2}
}

type MakePurchaseStatus int32

const (
	MakePurchaseStatus_MPS_SUCCESS                        MakePurchaseStatus = 0
	MakePurchaseStatus_MPS_COOLDOWN_LIMIT                 MakePurchaseStatus = 1
	MakePurchaseStatus_MPS_MAX_ACTIVE_LIMIT               MakePurchaseStatus = 2
	MakePurchaseStatus_MPS_ITEMS_REJECTED                 MakePurchaseStatus = 3
	MakePurchaseStatus_MPS_ITEMS_UNAVAILABLE              MakePurchaseStatus = 4
	MakePurchaseStatus_MPS_ITEMS_REJECTED_AND_UNAVAILABLE MakePurchaseStatus = 5
)

// Enum value maps for MakePurchaseStatus.
var (
	MakePurchaseStatus_name = map[int32]string{
		0: "MPS_SUCCESS",
		1: "MPS_COOLDOWN_LIMIT",
		2: "MPS_MAX_ACTIVE_LIMIT",
		3: "MPS_ITEMS_REJECTED",
		4: "MPS_ITEMS_UNAVAILABLE",
		5: "MPS_ITEMS_REJECTED_AND_UNAVAILABLE",
	}
	MakePurchaseStatus_value = map[string]int32{
		"MPS_SUCCESS":                        0,
		"MPS_COOLDOWN_LIMIT":                 1,
		"MPS_MAX_ACTIVE_LIMIT":               2,
		"MPS_ITEMS_REJECTED":                 3,
		"MPS_ITEMS_UNAVAILABLE":              4,
		"MPS_ITEMS_REJECTED_AND_UNAVAILABLE": 5,
	}
)

func (x MakePurchaseStatus) Enum() *MakePurchaseStatus {
	p := new(MakePurchaseStatus)
	*p = x
	return p
}

func (x MakePurchaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MakePurchaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[3].Descriptor()
}

func (MakePurchaseStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[3]
}

func (x MakePurchaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MakePurchaseStatus.Descriptor instead.
func (MakePurchaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{3}
}

type CancelPurchaseStatus int32

const (
	CancelPurchaseStatus_CPS_SUCCESS                      CancelPurchaseStatus = 0
	CancelPurchaseStatus_CPS_COOLDOWN_LIMIT               CancelPurchaseStatus = 1
	CancelPurchaseStatus_CPS_NOT_FOUND                    CancelPurchaseStatus = 2
	CancelPurchaseStatus_CPS_COOLDOWN_LIMIT_AND_NOT_FOUND CancelPurchaseStatus = 3
	CancelPurchaseStatus_CPS_NOT_ACTIVE                   CancelPurchaseStatus = 4
)

// Enum value maps for CancelPurchaseStatus.
var (
	CancelPurchaseStatus_name = map[int32]string{
		0: "CPS_SUCCESS",
		1: "CPS_COOLDOWN_LIMIT",
		2: "CPS_NOT_FOUND",
		3: "CPS_COOLDOWN_LIMIT_AND_NOT_FOUND",
		4: "CPS_NOT_ACTIVE",
	}
	CancelPurchaseStatus_value = map[string]int32{
		"CPS_SUCCESS":                      0,
		"CPS_COOLDOWN_LIMIT":               1,
		"CPS_NOT_FOUND":                    2,
		"CPS_COOLDOWN_LIMIT_AND_NOT_FOUND": 3,
		"CPS_NOT_ACTIVE":                   4,
	}
)

func (x CancelPurchaseStatus) Enum() *CancelPurchaseStatus {
	p := new(CancelPurchaseStatus)
	*p = x
	return p
}

func (x CancelPurchaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelPurchaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[4].Descriptor()
}

func (CancelPurchaseStatus) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[4]
}

func (x CancelPurchaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelPurchaseStatus.Descriptor instead.
func (CancelPurchaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{4}
}

type EsiApp int32

const (
	EsiApp_EA_AUTH           EsiApp = 0
	EsiApp_EA_MARKETS        EsiApp = 1
	EsiApp_EA_CORPORATION    EsiApp = 2
	EsiApp_EA_STRUCTURE_INFO EsiApp = 3
)

// Enum value maps for EsiApp.
var (
	EsiApp_name = map[int32]string{
		0: "EA_AUTH",
		1: "EA_MARKETS",
		2: "EA_CORPORATION",
		3: "EA_STRUCTURE_INFO",
	}
	EsiApp_value = map[string]int32{
		"EA_AUTH":           0,
		"EA_MARKETS":        1,
		"EA_CORPORATION":    2,
		"EA_STRUCTURE_INFO": 3,
	}
)

func (x EsiApp) Enum() *EsiApp {
	p := new(EsiApp)
	*p = x
	return p
}

func (x EsiApp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EsiApp) Descriptor() protoreflect.EnumDescriptor {
	return file_etco_proto_enumTypes[5].Descriptor()
}

func (EsiApp) Type() protoreflect.EnumType {
	return &file_etco_proto_enumTypes[5]
}

func (x EsiApp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EsiApp.Descriptor instead.
func (EsiApp) EnumDescriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{5}
}

type OptionalInt32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner int32 `protobuf:"varint,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *OptionalInt32) Reset() {
	*x = OptionalInt32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalInt32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalInt32) ProtoMessage() {}

func (x *OptionalInt32) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalInt32.ProtoReflect.Descriptor instead.
func (*OptionalInt32) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{0}
}

func (x *OptionalInt32) GetInner() int32 {
	if x != nil {
		return x.Inner
	}
	return 0
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // native token
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{1}
}

func (x *AuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`            // native token
	Authorized bool   `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"` // whether the request was authorized
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{2}
}

func (x *AuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string    `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`                                    // error message
	Code  ErrorCode `protobuf:"varint,2,opt,name=code,proto3,enum=eve_trading_co_proto.ErrorCode" json:"code,omitempty"` // error code
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ErrorResponse) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_OK
}

type CfgTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBuy      bool   `protobuf:"varint,1,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`
	Percentile uint32 `protobuf:"varint,2,opt,name=percentile,proto3" json:"percentile,omitempty"`
	Modifier   uint32 `protobuf:"varint,3,opt,name=modifier,proto3" json:"modifier,omitempty"`
	Market     string `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"` // MarketKey
}

func (x *CfgTypePricing) Reset() {
	*x = CfgTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgTypePricing) ProtoMessage() {}

func (x *CfgTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgTypePricing.ProtoReflect.Descriptor instead.
func (*CfgTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{4}
}

func (x *CfgTypePricing) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *CfgTypePricing) GetPercentile() uint32 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *CfgTypePricing) GetModifier() uint32 {
	if x != nil {
		return x.Modifier
	}
	return 0
}

func (x *CfgTypePricing) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type CfgBuybackTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// at least one of these must be set
	Pricing                *CfgTypePricing `protobuf:"bytes,1,opt,name=pricing,proto3" json:"pricing,omitempty"`
	ReprocessingEfficiency uint32          `protobuf:"varint,2,opt,name=reprocessing_efficiency,json=reprocessingEfficiency,proto3" json:"reprocessing_efficiency,omitempty"` // 0 - 100
}

func (x *CfgBuybackTypePricing) Reset() {
	*x = CfgBuybackTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgBuybackTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgBuybackTypePricing) ProtoMessage() {}

func (x *CfgBuybackTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgBuybackTypePricing.ProtoReflect.Descriptor instead.
func (*CfgBuybackTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{5}
}

func (x *CfgBuybackTypePricing) GetPricing() *CfgTypePricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

func (x *CfgBuybackTypePricing) GetReprocessingEfficiency() uint32 {
	if x != nil {
		return x.ReprocessingEfficiency
	}
	return 0
}

// wrapper for TypePricing
type CfgShopTypePricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner *CfgTypePricing `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *CfgShopTypePricing) Reset() {
	*x = CfgShopTypePricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgShopTypePricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgShopTypePricing) ProtoMessage() {}

func (x *CfgShopTypePricing) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgShopTypePricing.ProtoReflect.Descriptor instead.
func (*CfgShopTypePricing) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{6}
}

func (x *CfgShopTypePricing) GetInner() *CfgTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<BuybackTypeMapKey, BuybackTypeValue>
type CfgBuybackSystemTypeBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*CfgBuybackTypePricing `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CfgBuybackSystemTypeBundle) Reset() {
	*x = CfgBuybackSystemTypeBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgBuybackSystemTypeBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgBuybackSystemTypeBundle) ProtoMessage() {}

func (x *CfgBuybackSystemTypeBundle) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgBuybackSystemTypeBundle.ProtoReflect.Descriptor instead.
func (*CfgBuybackSystemTypeBundle) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{7}
}

func (x *CfgBuybackSystemTypeBundle) GetInner() map[string]*CfgBuybackTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

// wrapper for map<ShopTypeMapKey, ShopTypeValue>
type CfgShopLocationTypeBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[string]*CfgShopTypePricing `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CfgShopLocationTypeBundle) Reset() {
	*x = CfgShopLocationTypeBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgShopLocationTypeBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgShopLocationTypeBundle) ProtoMessage() {}

func (x *CfgShopLocationTypeBundle) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgShopLocationTypeBundle.ProtoReflect.Descriptor instead.
func (*CfgShopLocationTypeBundle) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{8}
}

func (x *CfgShopLocationTypeBundle) GetInner() map[string]*CfgShopTypePricing {
	if x != nil {
		return x.Inner
	}
	return nil
}

type CfgBuybackSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKey string  `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3" json:"bundle_key,omitempty"` // BuybackSystemBundleKey
	M3Fee     float64 `protobuf:"fixed64,2,opt,name=m3_fee,json=m3Fee,proto3" json:"m3_fee,omitempty"`           // fee per m3
}

func (x *CfgBuybackSystem) Reset() {
	*x = CfgBuybackSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgBuybackSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgBuybackSystem) ProtoMessage() {}

func (x *CfgBuybackSystem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgBuybackSystem.ProtoReflect.Descriptor instead.
func (*CfgBuybackSystem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{9}
}

func (x *CfgBuybackSystem) GetBundleKey() string {
	if x != nil {
		return x.BundleKey
	}
	return ""
}

func (x *CfgBuybackSystem) GetM3Fee() float64 {
	if x != nil {
		return x.M3Fee
	}
	return 0
}

type CfgShopLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKey   string   `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3" json:"bundle_key,omitempty"`       // ShopLocationBundleKey
	BannedFlags []string `protobuf:"bytes,2,rep,name=banned_flags,json=bannedFlags,proto3" json:"banned_flags,omitempty"` // banned asset flags
}

func (x *CfgShopLocation) Reset() {
	*x = CfgShopLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgShopLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgShopLocation) ProtoMessage() {}

func (x *CfgShopLocation) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgShopLocation.ProtoReflect.Descriptor instead.
func (*CfgShopLocation) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{10}
}

func (x *CfgShopLocation) GetBundleKey() string {
	if x != nil {
		return x.BundleKey
	}
	return ""
}

func (x *CfgShopLocation) GetBannedFlags() []string {
	if x != nil {
		return x.BannedFlags
	}
	return nil
}

type CfgMarket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // web token
	LocationId   int64  `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	IsStructure  bool   `protobuf:"varint,3,opt,name=is_structure,json=isStructure,proto3" json:"is_structure,omitempty"`
}

func (x *CfgMarket) Reset() {
	*x = CfgMarket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMarket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMarket) ProtoMessage() {}

func (x *CfgMarket) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMarket.ProtoReflect.Descriptor instead.
func (*CfgMarket) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{11}
}

func (x *CfgMarket) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *CfgMarket) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *CfgMarket) GetIsStructure() bool {
	if x != nil {
		return x.IsStructure
	}
	return false
}

// list of valid IDs for authentication
type AuthList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authentication is checked in this exact order, stopping on first match
	BannedCharacterIds   []int32 `protobuf:"varint,1,rep,packed,name=banned_character_ids,json=bannedCharacterIds,proto3" json:"banned_character_ids,omitempty"`       // denied
	PermitCharacterIds   []int32 `protobuf:"varint,2,rep,packed,name=permit_character_ids,json=permitCharacterIds,proto3" json:"permit_character_ids,omitempty"`       // allowed
	BannedCorporationIds []int32 `protobuf:"varint,3,rep,packed,name=banned_corporation_ids,json=bannedCorporationIds,proto3" json:"banned_corporation_ids,omitempty"` // denied
	PermitCorporationIds []int32 `protobuf:"varint,4,rep,packed,name=permit_corporation_ids,json=permitCorporationIds,proto3" json:"permit_corporation_ids,omitempty"` // allowed
	PermitAllianceIds    []int32 `protobuf:"varint,5,rep,packed,name=permit_alliance_ids,json=permitAllianceIds,proto3" json:"permit_alliance_ids,omitempty"`          // allowed
}

func (x *AuthList) Reset() {
	*x = AuthList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthList) ProtoMessage() {}

func (x *AuthList) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthList.ProtoReflect.Descriptor instead.
func (*AuthList) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{12}
}

func (x *AuthList) GetBannedCharacterIds() []int32 {
	if x != nil {
		return x.BannedCharacterIds
	}
	return nil
}

func (x *AuthList) GetPermitCharacterIds() []int32 {
	if x != nil {
		return x.PermitCharacterIds
	}
	return nil
}

func (x *AuthList) GetBannedCorporationIds() []int32 {
	if x != nil {
		return x.BannedCorporationIds
	}
	return nil
}

func (x *AuthList) GetPermitCorporationIds() []int32 {
	if x != nil {
		return x.PermitCorporationIds
	}
	return nil
}

func (x *AuthList) GetPermitAllianceIds() []int32 {
	if x != nil {
		return x.PermitAllianceIds
	}
	return nil
}

type IncludeTypeNaming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeName         bool `protobuf:"varint,1,opt,name=include_name,json=includeName,proto3" json:"include_name,omitempty"`
	IncludeMarketGroups bool `protobuf:"varint,2,opt,name=include_market_groups,json=includeMarketGroups,proto3" json:"include_market_groups,omitempty"`
	IncludeGroup        bool `protobuf:"varint,3,opt,name=include_group,json=includeGroup,proto3" json:"include_group,omitempty"`
	IncludeCategory     bool `protobuf:"varint,4,opt,name=include_category,json=includeCategory,proto3" json:"include_category,omitempty"`
}

func (x *IncludeTypeNaming) Reset() {
	*x = IncludeTypeNaming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncludeTypeNaming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncludeTypeNaming) ProtoMessage() {}

func (x *IncludeTypeNaming) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncludeTypeNaming.ProtoReflect.Descriptor instead.
func (*IncludeTypeNaming) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{13}
}

func (x *IncludeTypeNaming) GetIncludeName() bool {
	if x != nil {
		return x.IncludeName
	}
	return false
}

func (x *IncludeTypeNaming) GetIncludeMarketGroups() bool {
	if x != nil {
		return x.IncludeMarketGroups
	}
	return false
}

func (x *IncludeTypeNaming) GetIncludeGroup() bool {
	if x != nil {
		return x.IncludeGroup
	}
	return false
}

func (x *IncludeTypeNaming) GetIncludeCategory() bool {
	if x != nil {
		return x.IncludeCategory
	}
	return false
}

type TypeNamingIndexes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                 // "" if nil
	GroupIndex         int32   `protobuf:"zigzag32,2,opt,name=group_index,json=groupIndex,proto3" json:"group_index,omitempty"`                                // -1 if nil
	CategoryIndex      int32   `protobuf:"zigzag32,3,opt,name=category_index,json=categoryIndex,proto3" json:"category_index,omitempty"`                       // -1 if nil
	MarketGroupIndexes []int32 `protobuf:"varint,4,rep,packed,name=market_group_indexes,json=marketGroupIndexes,proto3" json:"market_group_indexes,omitempty"` // length 0 if nil
}

func (x *TypeNamingIndexes) Reset() {
	*x = TypeNamingIndexes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeNamingIndexes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeNamingIndexes) ProtoMessage() {}

func (x *TypeNamingIndexes) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeNamingIndexes.ProtoReflect.Descriptor instead.
func (*TypeNamingIndexes) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{14}
}

func (x *TypeNamingIndexes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TypeNamingIndexes) GetGroupIndex() int32 {
	if x != nil {
		return x.GroupIndex
	}
	return 0
}

func (x *TypeNamingIndexes) GetCategoryIndex() int32 {
	if x != nil {
		return x.CategoryIndex
	}
	return 0
}

func (x *TypeNamingIndexes) GetMarketGroupIndexes() []int32 {
	if x != nil {
		return x.MarketGroupIndexes
	}
	return nil
}

type TypeNamingLists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups       []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	Categories   []string `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	MarketGroups []string `protobuf:"bytes,3,rep,name=market_groups,json=marketGroups,proto3" json:"market_groups,omitempty"`
}

func (x *TypeNamingLists) Reset() {
	*x = TypeNamingLists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeNamingLists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeNamingLists) ProtoMessage() {}

func (x *TypeNamingLists) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeNamingLists.ProtoReflect.Descriptor instead.
func (*TypeNamingLists) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{15}
}

func (x *TypeNamingLists) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *TypeNamingLists) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *TypeNamingLists) GetMarketGroups() []string {
	if x != nil {
		return x.MarketGroups
	}
	return nil
}

type LocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsStructure        bool  `protobuf:"varint,1,opt,name=is_structure,json=isStructure,proto3" json:"is_structure,omitempty"`
	ForbiddenStructure bool  `protobuf:"varint,2,opt,name=forbidden_structure,json=forbiddenStructure,proto3" json:"forbidden_structure,omitempty"`
	SystemId           int32 `protobuf:"varint,3,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"` // SystemId
	RegionId           int32 `protobuf:"varint,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"` // RegionId
}

func (x *LocationInfo) Reset() {
	*x = LocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationInfo) ProtoMessage() {}

func (x *LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationInfo.ProtoReflect.Descriptor instead.
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{16}
}

func (x *LocationInfo) GetIsStructure() bool {
	if x != nil {
		return x.IsStructure
	}
	return false
}

func (x *LocationInfo) GetForbiddenStructure() bool {
	if x != nil {
		return x.ForbiddenStructure
	}
	return false
}

func (x *LocationInfo) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *LocationInfo) GetRegionId() int32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type IncludeLocationNaming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeLocationName bool `protobuf:"varint,1,opt,name=include_location_name,json=includeLocationName,proto3" json:"include_location_name,omitempty"`
	IncludeSystemName   bool `protobuf:"varint,2,opt,name=include_system_name,json=includeSystemName,proto3" json:"include_system_name,omitempty"`
	IncludeRegionName   bool `protobuf:"varint,3,opt,name=include_region_name,json=includeRegionName,proto3" json:"include_region_name,omitempty"`
}

func (x *IncludeLocationNaming) Reset() {
	*x = IncludeLocationNaming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncludeLocationNaming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncludeLocationNaming) ProtoMessage() {}

func (x *IncludeLocationNaming) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncludeLocationNaming.ProtoReflect.Descriptor instead.
func (*IncludeLocationNaming) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{17}
}

func (x *IncludeLocationNaming) GetIncludeLocationName() bool {
	if x != nil {
		return x.IncludeLocationName
	}
	return false
}

func (x *IncludeLocationNaming) GetIncludeSystemName() bool {
	if x != nil {
		return x.IncludeSystemName
	}
	return false
}

func (x *IncludeLocationNaming) GetIncludeRegionName() bool {
	if x != nil {
		return x.IncludeRegionName
	}
	return false
}

type LocationNamingMaps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationNames map[int64]string `protobuf:"bytes,1,rep,name=location_names,json=locationNames,proto3" json:"location_names,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // LocationId
	SystemNames   map[int32]string `protobuf:"bytes,2,rep,name=system_names,json=systemNames,proto3" json:"system_names,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`       // SystemId
	RegionNames   map[int32]string `protobuf:"bytes,3,rep,name=region_names,json=regionNames,proto3" json:"region_names,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`       // RegionId
}

func (x *LocationNamingMaps) Reset() {
	*x = LocationNamingMaps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationNamingMaps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationNamingMaps) ProtoMessage() {}

func (x *LocationNamingMaps) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationNamingMaps.ProtoReflect.Descriptor instead.
func (*LocationNamingMaps) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{18}
}

func (x *LocationNamingMaps) GetLocationNames() map[int64]string {
	if x != nil {
		return x.LocationNames
	}
	return nil
}

func (x *LocationNamingMaps) GetSystemNames() map[int32]string {
	if x != nil {
		return x.SystemNames
	}
	return nil
}

func (x *LocationNamingMaps) GetRegionNames() map[int32]string {
	if x != nil {
		return x.RegionNames
	}
	return nil
}

type NamedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId            int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	TypeNamingIndexes *TypeNamingIndexes `protobuf:"bytes,2,opt,name=type_naming_indexes,json=typeNamingIndexes,proto3" json:"type_naming_indexes,omitempty"`
}

func (x *NamedType) Reset() {
	*x = NamedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedType) ProtoMessage() {}

func (x *NamedType) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedType.ProtoReflect.Descriptor instead.
func (*NamedType) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{19}
}

func (x *NamedType) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *NamedType) GetTypeNamingIndexes() *TypeNamingIndexes {
	if x != nil {
		return x.TypeNamingIndexes
	}
	return nil
}

type BasicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   int32 `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *BasicItem) Reset() {
	*x = BasicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicItem) ProtoMessage() {}

func (x *BasicItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicItem.ProtoReflect.Descriptor instead.
func (*BasicItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{20}
}

func (x *BasicItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *BasicItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type NamedBasicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   int32  `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NamedBasicItem) Reset() {
	*x = NamedBasicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedBasicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedBasicItem) ProtoMessage() {}

func (x *NamedBasicItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedBasicItem.ProtoReflect.Descriptor instead.
func (*NamedBasicItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{21}
}

func (x *NamedBasicItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *NamedBasicItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *NamedBasicItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BuybackAppraisal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*BuybackParentItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Code     string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                          // AppraisalCode
	Price    float64              `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                      // sum of []parent.price_total
	Time     int64                `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`                         // time of the appraisal
	Version  string               `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                    // version of the pricing scheme
	SystemId int32                `protobuf:"varint,6,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"` // system used for the appraisal
	Fee      float64              `protobuf:"fixed64,7,opt,name=fee,proto3" json:"fee,omitempty"`                          // sum of item fees
}

func (x *BuybackAppraisal) Reset() {
	*x = BuybackAppraisal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackAppraisal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackAppraisal) ProtoMessage() {}

func (x *BuybackAppraisal) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackAppraisal.ProtoReflect.Descriptor instead.
func (*BuybackAppraisal) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{22}
}

func (x *BuybackAppraisal) GetItems() []*BuybackParentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BuybackAppraisal) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BuybackAppraisal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BuybackAppraisal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *BuybackAppraisal) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BuybackAppraisal) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *BuybackAppraisal) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type BuybackParentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId            int32               `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity          int64               `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit      float64             `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Description       string              `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // source of the price
	Children          []*BuybackChildItem `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`
	TypeNamingIndexes *TypeNamingIndexes  `protobuf:"bytes,6,opt,name=type_naming_indexes,json=typeNamingIndexes,proto3" json:"type_naming_indexes,omitempty"`
	FeePerUnit        float64             `protobuf:"fixed64,7,opt,name=fee_per_unit,json=feePerUnit,proto3" json:"fee_per_unit,omitempty"`
}

func (x *BuybackParentItem) Reset() {
	*x = BuybackParentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackParentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackParentItem) ProtoMessage() {}

func (x *BuybackParentItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackParentItem.ProtoReflect.Descriptor instead.
func (*BuybackParentItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{23}
}

func (x *BuybackParentItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *BuybackParentItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BuybackParentItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *BuybackParentItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BuybackParentItem) GetChildren() []*BuybackChildItem {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *BuybackParentItem) GetTypeNamingIndexes() *TypeNamingIndexes {
	if x != nil {
		return x.TypeNamingIndexes
	}
	return nil
}

func (x *BuybackParentItem) GetFeePerUnit() float64 {
	if x != nil {
		return x.FeePerUnit
	}
	return 0
}

type BuybackChildItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId            int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	QuantityPerParent float64            `protobuf:"fixed64,2,opt,name=quantity_per_parent,json=quantityPerParent,proto3" json:"quantity_per_parent,omitempty"`
	PricePerUnit      float64            `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Description       string             `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // source of the price
	TypeNamingIndexes *TypeNamingIndexes `protobuf:"bytes,5,opt,name=type_naming_indexes,json=typeNamingIndexes,proto3" json:"type_naming_indexes,omitempty"`
}

func (x *BuybackChildItem) Reset() {
	*x = BuybackChildItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackChildItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackChildItem) ProtoMessage() {}

func (x *BuybackChildItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackChildItem.ProtoReflect.Descriptor instead.
func (*BuybackChildItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{24}
}

func (x *BuybackChildItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *BuybackChildItem) GetQuantityPerParent() float64 {
	if x != nil {
		return x.QuantityPerParent
	}
	return 0
}

func (x *BuybackChildItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *BuybackChildItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BuybackChildItem) GetTypeNamingIndexes() *TypeNamingIndexes {
	if x != nil {
		return x.TypeNamingIndexes
	}
	return nil
}

type ShopAppraisal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*ShopItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Code       string      `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                // AppraisalCode
	Price      float64     `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                            // sum of []item.price_total
	Time       int64       `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`                               // time of the appraisal
	Version    string      `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                          // version of the pricing scheme
	LocationId int64       `protobuf:"varint,6,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // location used for the appraisal
}

func (x *ShopAppraisal) Reset() {
	*x = ShopAppraisal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopAppraisal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopAppraisal) ProtoMessage() {}

func (x *ShopAppraisal) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopAppraisal.ProtoReflect.Descriptor instead.
func (*ShopAppraisal) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{25}
}

func (x *ShopAppraisal) GetItems() []*ShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopAppraisal) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopAppraisal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ShopAppraisal) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ShopAppraisal) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ShopAppraisal) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId            int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity          int64              `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit      float64            `protobuf:"fixed64,3,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Description       string             `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // source of the price
	TypeNamingIndexes *TypeNamingIndexes `protobuf:"bytes,5,opt,name=type_naming_indexes,json=typeNamingIndexes,proto3" json:"type_naming_indexes,omitempty"`
}

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{26}
}

func (x *ShopItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ShopItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ShopItem) GetPricePerUnit() float64 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *ShopItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ShopItem) GetTypeNamingIndexes() *TypeNamingIndexes {
	if x != nil {
		return x.TypeNamingIndexes
	}
	return nil
}

type ContractItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId            int32              `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity          int64              `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	TypeNamingIndexes *TypeNamingIndexes `protobuf:"bytes,3,opt,name=type_naming_indexes,json=typeNamingIndexes,proto3" json:"type_naming_indexes,omitempty"`
}

func (x *ContractItem) Reset() {
	*x = ContractItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractItem) ProtoMessage() {}

func (x *ContractItem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractItem.ProtoReflect.Descriptor instead.
func (*ContractItem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{27}
}

func (x *ContractItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ContractItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ContractItem) GetTypeNamingIndexes() *TypeNamingIndexes {
	if x != nil {
		return x.TypeNamingIndexes
	}
	return nil
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId   int32                `protobuf:"varint,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Status       ContractStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=eve_trading_co_proto.ContractStatus" json:"status,omitempty"`
	Issued       int64                `protobuf:"varint,3,opt,name=issued,proto3" json:"issued,omitempty"`
	Expires      int64                `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`
	LocationId   int64                `protobuf:"varint,5,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Price        float64              `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	HasReward    bool                 `protobuf:"varint,7,opt,name=has_reward,json=hasReward,proto3" json:"has_reward,omitempty"`
	IssuerCorpId int32                `protobuf:"varint,8,opt,name=issuer_corp_id,json=issuerCorpId,proto3" json:"issuer_corp_id,omitempty"`
	IssuerCharId int32                `protobuf:"varint,9,opt,name=issuer_char_id,json=issuerCharId,proto3" json:"issuer_char_id,omitempty"`
	AssigneeId   int32                `protobuf:"varint,10,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	AssigneeType ContractAssigneeType `protobuf:"varint,11,opt,name=assignee_type,json=assigneeType,proto3,enum=eve_trading_co_proto.ContractAssigneeType" json:"assignee_type,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{28}
}

func (x *Contract) GetContractId() int32 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *Contract) GetStatus() ContractStatus {
	if x != nil {
		return x.Status
	}
	return ContractStatus_unknown_status
}

func (x *Contract) GetIssued() int64 {
	if x != nil {
		return x.Issued
	}
	return 0
}

func (x *Contract) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *Contract) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *Contract) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Contract) GetHasReward() bool {
	if x != nil {
		return x.HasReward
	}
	return false
}

func (x *Contract) GetIssuerCorpId() int32 {
	if x != nil {
		return x.IssuerCorpId
	}
	return 0
}

func (x *Contract) GetIssuerCharId() int32 {
	if x != nil {
		return x.IssuerCharId
	}
	return 0
}

func (x *Contract) GetAssigneeId() int32 {
	if x != nil {
		return x.AssigneeId
	}
	return 0
}

func (x *Contract) GetAssigneeType() ContractAssigneeType {
	if x != nil {
		return x.AssigneeType
	}
	return ContractAssigneeType_unknown_assignee_type
}

type BuybackContractQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                 string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Contract             *Contract         `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractItems        []*ContractItem   `protobuf:"bytes,3,rep,name=contract_items,json=contractItems,proto3" json:"contract_items,omitempty"`                         // null unless include_items
	ContractLocationInfo *LocationInfo     `protobuf:"bytes,4,opt,name=contract_location_info,json=contractLocationInfo,proto3" json:"contract_location_info,omitempty"`  // null unless include_location_info
	CodeAppraisal        *BuybackAppraisal `protobuf:"bytes,5,opt,name=code_appraisal,json=codeAppraisal,proto3" json:"code_appraisal,omitempty"`                         // null unless include_code_appraisal
	AppraisalCharacterId int32             `protobuf:"varint,6,opt,name=appraisal_character_id,json=appraisalCharacterId,proto3" json:"appraisal_character_id,omitempty"` // 0 unless include_code_appraisal + non-anonymous appraisal
	NewAppraisal         *BuybackAppraisal `protobuf:"bytes,7,opt,name=new_appraisal,json=newAppraisal,proto3" json:"new_appraisal,omitempty"`                            // null unless include_new_appraisal + include_code_appraisal + include_items
}

func (x *BuybackContractQueueEntry) Reset() {
	*x = BuybackContractQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContractQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContractQueueEntry) ProtoMessage() {}

func (x *BuybackContractQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContractQueueEntry.ProtoReflect.Descriptor instead.
func (*BuybackContractQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{29}
}

func (x *BuybackContractQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BuybackContractQueueEntry) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *BuybackContractQueueEntry) GetContractItems() []*ContractItem {
	if x != nil {
		return x.ContractItems
	}
	return nil
}

func (x *BuybackContractQueueEntry) GetContractLocationInfo() *LocationInfo {
	if x != nil {
		return x.ContractLocationInfo
	}
	return nil
}

func (x *BuybackContractQueueEntry) GetCodeAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.CodeAppraisal
	}
	return nil
}

func (x *BuybackContractQueueEntry) GetAppraisalCharacterId() int32 {
	if x != nil {
		return x.AppraisalCharacterId
	}
	return 0
}

func (x *BuybackContractQueueEntry) GetNewAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.NewAppraisal
	}
	return nil
}

type ShopContractQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                 string          `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Contract             *Contract       `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractItems        []*ContractItem `protobuf:"bytes,3,rep,name=contract_items,json=contractItems,proto3" json:"contract_items,omitempty"`                         // null unless include_items
	ContractLocationInfo *LocationInfo   `protobuf:"bytes,4,opt,name=contract_location_info,json=contractLocationInfo,proto3" json:"contract_location_info,omitempty"`  // null unless include_location_info
	CodeAppraisal        *ShopAppraisal  `protobuf:"bytes,5,opt,name=code_appraisal,json=codeAppraisal,proto3" json:"code_appraisal,omitempty"`                         // null unless include_code_appraisal
	AppraisalCharacterId int32           `protobuf:"varint,6,opt,name=appraisal_character_id,json=appraisalCharacterId,proto3" json:"appraisal_character_id,omitempty"` // 0 unless include_code_appraisal + non-anonymous appraisal
	NewAppraisal         *ShopAppraisal  `protobuf:"bytes,7,opt,name=new_appraisal,json=newAppraisal,proto3" json:"new_appraisal,omitempty"`                            // null unless include_new_appraisal + include_code_appraisal + include_items
}

func (x *ShopContractQueueEntry) Reset() {
	*x = ShopContractQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopContractQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopContractQueueEntry) ProtoMessage() {}

func (x *ShopContractQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopContractQueueEntry.ProtoReflect.Descriptor instead.
func (*ShopContractQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{30}
}

func (x *ShopContractQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopContractQueueEntry) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ShopContractQueueEntry) GetContractItems() []*ContractItem {
	if x != nil {
		return x.ContractItems
	}
	return nil
}

func (x *ShopContractQueueEntry) GetContractLocationInfo() *LocationInfo {
	if x != nil {
		return x.ContractLocationInfo
	}
	return nil
}

func (x *ShopContractQueueEntry) GetCodeAppraisal() *ShopAppraisal {
	if x != nil {
		return x.CodeAppraisal
	}
	return nil
}

func (x *ShopContractQueueEntry) GetAppraisalCharacterId() int32 {
	if x != nil {
		return x.AppraisalCharacterId
	}
	return 0
}

func (x *ShopContractQueueEntry) GetNewAppraisal() *ShopAppraisal {
	if x != nil {
		return x.NewAppraisal
	}
	return nil
}

type PurchaseQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                 string         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                                                // AppraisalCode
	CodeAppraisal        *ShopAppraisal `protobuf:"bytes,2,opt,name=code_appraisal,json=codeAppraisal,proto3" json:"code_appraisal,omitempty"`                         // null unless include_code_appraisal
	AppraisalCharacterId int32          `protobuf:"varint,3,opt,name=appraisal_character_id,json=appraisalCharacterId,proto3" json:"appraisal_character_id,omitempty"` // 0 unless include_code_appraisal
	NewAppraisal         *ShopAppraisal `protobuf:"bytes,4,opt,name=new_appraisal,json=newAppraisal,proto3" json:"new_appraisal,omitempty"`                            // null unless include_new_appraisal + include_code_appraisal
}

func (x *PurchaseQueueEntry) Reset() {
	*x = PurchaseQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseQueueEntry) ProtoMessage() {}

func (x *PurchaseQueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseQueueEntry.ProtoReflect.Descriptor instead.
func (*PurchaseQueueEntry) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{31}
}

func (x *PurchaseQueueEntry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PurchaseQueueEntry) GetCodeAppraisal() *ShopAppraisal {
	if x != nil {
		return x.CodeAppraisal
	}
	return nil
}

func (x *PurchaseQueueEntry) GetAppraisalCharacterId() int32 {
	if x != nil {
		return x.AppraisalCharacterId
	}
	return 0
}

func (x *PurchaseQueueEntry) GetNewAppraisal() *ShopAppraisal {
	if x != nil {
		return x.NewAppraisal
	}
	return nil
}

type BuybackAppraisalStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Contract *Contract `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *BuybackAppraisalStatus) Reset() {
	*x = BuybackAppraisalStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackAppraisalStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackAppraisalStatus) ProtoMessage() {}

func (x *BuybackAppraisalStatus) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackAppraisalStatus.ProtoReflect.Descriptor instead.
func (*BuybackAppraisalStatus) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{32}
}

func (x *BuybackAppraisalStatus) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BuybackAppraisalStatus) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

type ShopAppraisalStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Contract        *Contract `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	InPurchaseQueue bool      `protobuf:"varint,3,opt,name=in_purchase_queue,json=inPurchaseQueue,proto3" json:"in_purchase_queue,omitempty"`
}

func (x *ShopAppraisalStatus) Reset() {
	*x = ShopAppraisalStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopAppraisalStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopAppraisalStatus) ProtoMessage() {}

func (x *ShopAppraisalStatus) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopAppraisalStatus.ProtoReflect.Descriptor instead.
func (*ShopAppraisalStatus) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{33}
}

func (x *ShopAppraisalStatus) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopAppraisalStatus) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ShopAppraisalStatus) GetInPurchaseQueue() bool {
	if x != nil {
		return x.InPurchaseQueue
	}
	return false
}

type CfgGetAuthListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainKey string       `protobuf:"bytes,1,opt,name=domain_key,json=domainKey,proto3" json:"domain_key,omitempty"` // DomainKey
	Auth      *AuthRequest `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetAuthListRequest) Reset() {
	*x = CfgGetAuthListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetAuthListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetAuthListRequest) ProtoMessage() {}

func (x *CfgGetAuthListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetAuthListRequest.ProtoReflect.Descriptor instead.
func (*CfgGetAuthListRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{34}
}

func (x *CfgGetAuthListRequest) GetDomainKey() string {
	if x != nil {
		return x.DomainKey
	}
	return ""
}

func (x *CfgGetAuthListRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetAuthListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthList *AuthList      `protobuf:"bytes,1,opt,name=auth_list,json=authList,proto3" json:"auth_list,omitempty"`
	Auth     *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetAuthListResponse) Reset() {
	*x = CfgGetAuthListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetAuthListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetAuthListResponse) ProtoMessage() {}

func (x *CfgGetAuthListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetAuthListResponse.ProtoReflect.Descriptor instead.
func (*CfgGetAuthListResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{35}
}

func (x *CfgGetAuthListResponse) GetAuthList() *AuthList {
	if x != nil {
		return x.AuthList
	}
	return nil
}

func (x *CfgGetAuthListResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetAuthListResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgSetAuthListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainKey string       `protobuf:"bytes,1,opt,name=domain_key,json=domainKey,proto3" json:"domain_key,omitempty"` // DomainKey
	AuthList  *AuthList    `protobuf:"bytes,2,opt,name=auth_list,json=authList,proto3" json:"auth_list,omitempty"`
	Auth      *AuthRequest `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgSetAuthListRequest) Reset() {
	*x = CfgSetAuthListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgSetAuthListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgSetAuthListRequest) ProtoMessage() {}

func (x *CfgSetAuthListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgSetAuthListRequest.ProtoReflect.Descriptor instead.
func (*CfgSetAuthListRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{36}
}

func (x *CfgSetAuthListRequest) GetDomainKey() string {
	if x != nil {
		return x.DomainKey
	}
	return ""
}

func (x *CfgSetAuthListRequest) GetAuthList() *AuthList {
	if x != nil {
		return x.AuthList
	}
	return nil
}

func (x *CfgSetAuthListRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgSetAuthListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgSetAuthListResponse) Reset() {
	*x = CfgSetAuthListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgSetAuthListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgSetAuthListResponse) ProtoMessage() {}

func (x *CfgSetAuthListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgSetAuthListResponse.ProtoReflect.Descriptor instead.
func (*CfgSetAuthListResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{37}
}

func (x *CfgSetAuthListResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgSetAuthListResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetBuybackSystemTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) Reset() {
	*x = CfgGetBuybackSystemTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{38}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetBuybackSystemTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builder map[int32]*CfgBuybackSystemTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth    *AuthResponse                         `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error   *ErrorResponse                        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) Reset() {
	*x = CfgGetBuybackSystemTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{39}
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetBuilder() map[int32]*CfgBuybackSystemTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetBuybackSystemTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeBuybackSystemTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the program itself converts this to multiple map<TypeId, BuybackTypeMap>
	Builder map[int32]*CfgBuybackSystemTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth    *AuthRequest                          `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) Reset() {
	*x = CfgMergeBuybackSystemTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{40}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) GetBuilder() map[int32]*CfgBuybackSystemTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeBuybackSystemTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modified bool           `protobuf:"varint,1,opt,name=Modified,proto3" json:"Modified,omitempty"`
	Auth     *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) Reset() {
	*x = CfgMergeBuybackSystemTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{41}
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) GetModified() bool {
	if x != nil {
		return x.Modified
	}
	return false
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeBuybackSystemTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetShopLocationTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) Reset() {
	*x = CfgGetShopLocationTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{42}
}

func (x *CfgGetShopLocationTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetShopLocationTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builder map[int32]*CfgShopLocationTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth    *AuthResponse                        `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error   *ErrorResponse                       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) Reset() {
	*x = CfgGetShopLocationTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{43}
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetBuilder() map[int32]*CfgShopLocationTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetShopLocationTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeShopLocationTypeMapsBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the program itself converts this to multiple map<TypeId, ShopTypeMap>
	Builder map[int32]*CfgShopLocationTypeBundle `protobuf:"bytes,1,rep,name=builder,proto3" json:"builder,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth    *AuthRequest                         `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) Reset() {
	*x = CfgMergeShopLocationTypeMapsBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationTypeMapsBuilderRequest) ProtoMessage() {}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationTypeMapsBuilderRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationTypeMapsBuilderRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{44}
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) GetBuilder() map[int32]*CfgShopLocationTypeBundle {
	if x != nil {
		return x.Builder
	}
	return nil
}

func (x *CfgMergeShopLocationTypeMapsBuilderRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeShopLocationTypeMapsBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modified bool           `protobuf:"varint,1,opt,name=Modified,proto3" json:"Modified,omitempty"`
	Auth     *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) Reset() {
	*x = CfgMergeShopLocationTypeMapsBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationTypeMapsBuilderResponse) ProtoMessage() {}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationTypeMapsBuilderResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationTypeMapsBuilderResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{45}
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) GetModified() bool {
	if x != nil {
		return x.Modified
	}
	return false
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeShopLocationTypeMapsBuilderResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetBuybackSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeLocationInfo   bool                   `protobuf:"varint,1,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,2,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 1 is false
	Auth                  *AuthRequest           `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetBuybackSystemsRequest) Reset() {
	*x = CfgGetBuybackSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemsRequest) ProtoMessage() {}

func (x *CfgGetBuybackSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemsRequest.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{46}
}

func (x *CfgGetBuybackSystemsRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *CfgGetBuybackSystemsRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

func (x *CfgGetBuybackSystemsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetBuybackSystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems            map[int32]*CfgBuybackSystem `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SystemRegionMap    map[int32]int32             `protobuf:"bytes,2,rep,name=system_region_map,json=systemRegionMap,proto3" json:"system_region_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // SystemId -> RegionId
	LocationNamingMaps *LocationNamingMaps         `protobuf:"bytes,3,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"`
	Auth               *AuthResponse               `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Error              *ErrorResponse              `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackSystemsResponse) Reset() {
	*x = CfgGetBuybackSystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackSystemsResponse) ProtoMessage() {}

func (x *CfgGetBuybackSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackSystemsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackSystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{47}
}

func (x *CfgGetBuybackSystemsResponse) GetSystems() map[int32]*CfgBuybackSystem {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *CfgGetBuybackSystemsResponse) GetSystemRegionMap() map[int32]int32 {
	if x != nil {
		return x.SystemRegionMap
	}
	return nil
}

func (x *CfgGetBuybackSystemsResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *CfgGetBuybackSystemsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetBuybackSystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeBuybackSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems map[int32]*CfgBuybackSystem `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth    *AuthRequest                `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeBuybackSystemsRequest) Reset() {
	*x = CfgMergeBuybackSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemsRequest) ProtoMessage() {}

func (x *CfgMergeBuybackSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{48}
}

func (x *CfgMergeBuybackSystemsRequest) GetSystems() map[int32]*CfgBuybackSystem {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *CfgMergeBuybackSystemsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeBuybackSystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modified bool           `protobuf:"varint,1,opt,name=Modified,proto3" json:"Modified,omitempty"`
	Auth     *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeBuybackSystemsResponse) Reset() {
	*x = CfgMergeBuybackSystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeBuybackSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeBuybackSystemsResponse) ProtoMessage() {}

func (x *CfgMergeBuybackSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeBuybackSystemsResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeBuybackSystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{49}
}

func (x *CfgMergeBuybackSystemsResponse) GetModified() bool {
	if x != nil {
		return x.Modified
	}
	return false
}

func (x *CfgMergeBuybackSystemsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeBuybackSystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetShopLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeLocationInfo   bool                   `protobuf:"varint,1,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,2,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 1 is false
	Auth                  *AuthRequest           `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetShopLocationsRequest) Reset() {
	*x = CfgGetShopLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationsRequest) ProtoMessage() {}

func (x *CfgGetShopLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationsRequest.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{50}
}

func (x *CfgGetShopLocationsRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *CfgGetShopLocationsRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

func (x *CfgGetShopLocationsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetShopLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations          map[int64]*CfgShopLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LocationInfoMap    map[int64]*LocationInfo    `protobuf:"bytes,2,rep,name=location_info_map,json=locationInfoMap,proto3" json:"location_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // LocationId -> LocationInfo
	LocationNamingMaps *LocationNamingMaps        `protobuf:"bytes,3,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"`
	Auth               *AuthResponse              `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Error              *ErrorResponse             `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopLocationsResponse) Reset() {
	*x = CfgGetShopLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopLocationsResponse) ProtoMessage() {}

func (x *CfgGetShopLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopLocationsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopLocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{51}
}

func (x *CfgGetShopLocationsResponse) GetLocations() map[int64]*CfgShopLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *CfgGetShopLocationsResponse) GetLocationInfoMap() map[int64]*LocationInfo {
	if x != nil {
		return x.LocationInfoMap
	}
	return nil
}

func (x *CfgGetShopLocationsResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *CfgGetShopLocationsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetShopLocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeShopLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations map[int64]*CfgShopLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth      *AuthRequest               `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeShopLocationsRequest) Reset() {
	*x = CfgMergeShopLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationsRequest) ProtoMessage() {}

func (x *CfgMergeShopLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{52}
}

func (x *CfgMergeShopLocationsRequest) GetLocations() map[int64]*CfgShopLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *CfgMergeShopLocationsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeShopLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modified bool           `protobuf:"varint,1,opt,name=Modified,proto3" json:"Modified,omitempty"`
	Auth     *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeShopLocationsResponse) Reset() {
	*x = CfgMergeShopLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeShopLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeShopLocationsResponse) ProtoMessage() {}

func (x *CfgMergeShopLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeShopLocationsResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeShopLocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{53}
}

func (x *CfgMergeShopLocationsResponse) GetModified() bool {
	if x != nil {
		return x.Modified
	}
	return false
}

func (x *CfgMergeShopLocationsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeShopLocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// wrapper for AuthRequest
type CfgGetMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeLocationInfo   bool                   `protobuf:"varint,1,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,2,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 1 is false
	Auth                  *AuthRequest           `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetMarketsRequest) Reset() {
	*x = CfgGetMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketsRequest) ProtoMessage() {}

func (x *CfgGetMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketsRequest.ProtoReflect.Descriptor instead.
func (*CfgGetMarketsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{54}
}

func (x *CfgGetMarketsRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *CfgGetMarketsRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

func (x *CfgGetMarketsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets            map[string]*CfgMarket   `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LocationInfoMap    map[int64]*LocationInfo `protobuf:"bytes,2,rep,name=location_info_map,json=locationInfoMap,proto3" json:"location_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // LocationId -> LocationInfo
	LocationNamingMaps *LocationNamingMaps     `protobuf:"bytes,3,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"`
	Auth               *AuthResponse           `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Error              *ErrorResponse          `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetMarketsResponse) Reset() {
	*x = CfgGetMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketsResponse) ProtoMessage() {}

func (x *CfgGetMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketsResponse.ProtoReflect.Descriptor instead.
func (*CfgGetMarketsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{55}
}

func (x *CfgGetMarketsResponse) GetMarkets() map[string]*CfgMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *CfgGetMarketsResponse) GetLocationInfoMap() map[int64]*LocationInfo {
	if x != nil {
		return x.LocationInfoMap
	}
	return nil
}

func (x *CfgGetMarketsResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *CfgGetMarketsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetMarketsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgMergeMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets map[string]*CfgMarket `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth    *AuthRequest          `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgMergeMarketsRequest) Reset() {
	*x = CfgMergeMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeMarketsRequest) ProtoMessage() {}

func (x *CfgMergeMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeMarketsRequest.ProtoReflect.Descriptor instead.
func (*CfgMergeMarketsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{56}
}

func (x *CfgMergeMarketsRequest) GetMarkets() map[string]*CfgMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *CfgMergeMarketsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

// wrapper for CfgModifyResponse
type CfgMergeMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modified bool           `protobuf:"varint,1,opt,name=Modified,proto3" json:"Modified,omitempty"`
	Auth     *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error    *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgMergeMarketsResponse) Reset() {
	*x = CfgMergeMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMergeMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMergeMarketsResponse) ProtoMessage() {}

func (x *CfgMergeMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMergeMarketsResponse.ProtoReflect.Descriptor instead.
func (*CfgMergeMarketsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{57}
}

func (x *CfgMergeMarketsResponse) GetModified() bool {
	if x != nil {
		return x.Modified
	}
	return false
}

func (x *CfgMergeMarketsResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgMergeMarketsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// anonymous or authenticated
// returns a code if save is true
type NewBuybackAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId          int32              `protobuf:"varint,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"` // SystemId
	Items             []*BasicItem       `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Save              bool               `protobuf:"varint,3,opt,name=save,proto3" json:"save,omitempty"` // whether to store the appraisal and return a code
	IncludeTypeNaming *IncludeTypeNaming `protobuf:"bytes,4,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	Auth              *AuthRequest       `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"` // optional
}

func (x *NewBuybackAppraisalRequest) Reset() {
	*x = NewBuybackAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBuybackAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBuybackAppraisalRequest) ProtoMessage() {}

func (x *NewBuybackAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBuybackAppraisalRequest.ProtoReflect.Descriptor instead.
func (*NewBuybackAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{58}
}

func (x *NewBuybackAppraisalRequest) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *NewBuybackAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *NewBuybackAppraisalRequest) GetSave() bool {
	if x != nil {
		return x.Save
	}
	return false
}

func (x *NewBuybackAppraisalRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *NewBuybackAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type NewBuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal       *BuybackAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	TypeNamingLists *TypeNamingLists  `protobuf:"bytes,2,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`
	Auth            *AuthResponse     `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error           *ErrorResponse    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NewBuybackAppraisalResponse) Reset() {
	*x = NewBuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBuybackAppraisalResponse) ProtoMessage() {}

func (x *NewBuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*NewBuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{59}
}

func (x *NewBuybackAppraisalResponse) GetAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *NewBuybackAppraisalResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *NewBuybackAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *NewBuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// authenticated
// returns a code if save is true (but doesn't add it to the purchase queue)
type NewShopAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64        `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	Items      []*BasicItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// bool save = 3; // whether to store the appraisal and return a code
	IncludeTypeNaming *IncludeTypeNaming `protobuf:"bytes,3,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"` // AuthRequest auth = 4;
}

func (x *NewShopAppraisalRequest) Reset() {
	*x = NewShopAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewShopAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewShopAppraisalRequest) ProtoMessage() {}

func (x *NewShopAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewShopAppraisalRequest.ProtoReflect.Descriptor instead.
func (*NewShopAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{60}
}

func (x *NewShopAppraisalRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *NewShopAppraisalRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *NewShopAppraisalRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

type NewShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal       *ShopAppraisal   `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	TypeNamingLists *TypeNamingLists `protobuf:"bytes,2,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`
	// AuthResponse auth = 3;
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NewShopAppraisalResponse) Reset() {
	*x = NewShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewShopAppraisalResponse) ProtoMessage() {}

func (x *NewShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*NewShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{61}
}

func (x *NewShopAppraisalResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *NewShopAppraisalResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *NewShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetBuybackAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeTypeNaming *IncludeTypeNaming `protobuf:"bytes,2,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	Admin             bool               `protobuf:"varint,3,opt,name=admin,proto3" json:"admin,omitempty"` // whether to use admin auth
	Auth              *AuthRequest       `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`    // optional, admin only (ignored if admin is false)
}

func (x *GetBuybackAppraisalRequest) Reset() {
	*x = GetBuybackAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuybackAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuybackAppraisalRequest) ProtoMessage() {}

func (x *GetBuybackAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuybackAppraisalRequest.ProtoReflect.Descriptor instead.
func (*GetBuybackAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{62}
}

func (x *GetBuybackAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetBuybackAppraisalRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *GetBuybackAppraisalRequest) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *GetBuybackAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GetBuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal       *BuybackAppraisal `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	HashCharacterId string            `protobuf:"bytes,2,opt,name=hash_character_id,json=hashCharacterId,proto3" json:"hash_character_id,omitempty"` // obfuscated character id ("" if admin is true)
	CharacterId     int32             `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`              // admin only, 0 otherwise
	TypeNamingLists *TypeNamingLists  `protobuf:"bytes,4,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`
	Auth            *AuthResponse     `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`   // admin only
	Error           *ErrorResponse    `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"` // code not exists
}

func (x *GetBuybackAppraisalResponse) Reset() {
	*x = GetBuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuybackAppraisalResponse) ProtoMessage() {}

func (x *GetBuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*GetBuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{63}
}

func (x *GetBuybackAppraisalResponse) GetAppraisal() *BuybackAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetHashCharacterId() string {
	if x != nil {
		return x.HashCharacterId
	}
	return ""
}

func (x *GetBuybackAppraisalResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *GetBuybackAppraisalResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetBuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetShopAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeTypeNaming *IncludeTypeNaming `protobuf:"bytes,2,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	Admin             bool               `protobuf:"varint,3,opt,name=admin,proto3" json:"admin,omitempty"` // whether to use admin auth
	Auth              *AuthRequest       `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`    // optional, admin only (ignored if admin is false)
}

func (x *GetShopAppraisalRequest) Reset() {
	*x = GetShopAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopAppraisalRequest) ProtoMessage() {}

func (x *GetShopAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopAppraisalRequest.ProtoReflect.Descriptor instead.
func (*GetShopAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{64}
}

func (x *GetShopAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetShopAppraisalRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *GetShopAppraisalRequest) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *GetShopAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GetShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appraisal       *ShopAppraisal   `protobuf:"bytes,1,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	HashCharacterId string           `protobuf:"bytes,2,opt,name=hash_character_id,json=hashCharacterId,proto3" json:"hash_character_id,omitempty"` // obfuscated character id ("" if admin is true)
	CharacterId     int32            `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`              // 0 if admin is false
	TypeNamingLists *TypeNamingLists `protobuf:"bytes,4,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`
	Auth            *AuthResponse    `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`   // null if admin is false
	Error           *ErrorResponse   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"` // code not exists
}

func (x *GetShopAppraisalResponse) Reset() {
	*x = GetShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopAppraisalResponse) ProtoMessage() {}

func (x *GetShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*GetShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{65}
}

func (x *GetShopAppraisalResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *GetShopAppraisalResponse) GetHashCharacterId() string {
	if x != nil {
		return x.HashCharacterId
	}
	return ""
}

func (x *GetShopAppraisalResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *GetShopAppraisalResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *GetShopAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type StatusBuybackAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                  string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeItems          bool                   `protobuf:"varint,2,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeLocationInfo   bool                   `protobuf:"varint,3,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeTypeNaming     *IncludeTypeNaming     `protobuf:"bytes,4,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,5,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 3 is false
	Admin                 bool                   `protobuf:"varint,6,opt,name=admin,proto3" json:"admin,omitempty"`                                                               // whether to use admin auth
	Auth                  *AuthRequest           `protobuf:"bytes,7,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *StatusBuybackAppraisalRequest) Reset() {
	*x = StatusBuybackAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusBuybackAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusBuybackAppraisalRequest) ProtoMessage() {}

func (x *StatusBuybackAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusBuybackAppraisalRequest.ProtoReflect.Descriptor instead.
func (*StatusBuybackAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{66}
}

func (x *StatusBuybackAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StatusBuybackAppraisalRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *StatusBuybackAppraisalRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *StatusBuybackAppraisalRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *StatusBuybackAppraisalRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

func (x *StatusBuybackAppraisalRequest) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *StatusBuybackAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type StatusBuybackAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract           *Contract           `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractItems      []*ContractItem     `protobuf:"bytes,2,rep,name=contract_items,json=contractItems,proto3" json:"contract_items,omitempty"`                  // null if not requested
	LocationInfo       *LocationInfo       `protobuf:"bytes,3,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`                     // null unless requested
	TypeNamingLists    *TypeNamingLists    `protobuf:"bytes,4,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`          // null if not requested
	LocationNamingMaps *LocationNamingMaps `protobuf:"bytes,5,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"` // null if not requested
	Auth               *AuthResponse       `protobuf:"bytes,6,opt,name=auth,proto3" json:"auth,omitempty"`
	Error              *ErrorResponse      `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusBuybackAppraisalResponse) Reset() {
	*x = StatusBuybackAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusBuybackAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusBuybackAppraisalResponse) ProtoMessage() {}

func (x *StatusBuybackAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusBuybackAppraisalResponse.ProtoReflect.Descriptor instead.
func (*StatusBuybackAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{67}
}

func (x *StatusBuybackAppraisalResponse) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetContractItems() []*ContractItem {
	if x != nil {
		return x.ContractItems
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *StatusBuybackAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type StatusShopAppraisalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                  string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	IncludeItems          bool                   `protobuf:"varint,2,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeLocationInfo   bool                   `protobuf:"varint,3,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeTypeNaming     *IncludeTypeNaming     `protobuf:"bytes,4,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,5,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 3 is false
	Admin                 bool                   `protobuf:"varint,6,opt,name=admin,proto3" json:"admin,omitempty"`                                                               // whether to use admin auth
	Auth                  *AuthRequest           `protobuf:"bytes,7,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *StatusShopAppraisalRequest) Reset() {
	*x = StatusShopAppraisalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusShopAppraisalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusShopAppraisalRequest) ProtoMessage() {}

func (x *StatusShopAppraisalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusShopAppraisalRequest.ProtoReflect.Descriptor instead.
func (*StatusShopAppraisalRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{68}
}

func (x *StatusShopAppraisalRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StatusShopAppraisalRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *StatusShopAppraisalRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *StatusShopAppraisalRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *StatusShopAppraisalRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

func (x *StatusShopAppraisalRequest) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *StatusShopAppraisalRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type StatusShopAppraisalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract           *Contract           `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	InPurchaseQueue    bool                `protobuf:"varint,2,opt,name=in_purchase_queue,json=inPurchaseQueue,proto3" json:"in_purchase_queue,omitempty"`         // if true, contract is always null
	ContractItems      []*ContractItem     `protobuf:"bytes,3,rep,name=contract_items,json=contractItems,proto3" json:"contract_items,omitempty"`                  // null if not requested
	LocationInfo       *LocationInfo       `protobuf:"bytes,4,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`                     // null unless requested
	TypeNamingLists    *TypeNamingLists    `protobuf:"bytes,5,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`          // null if not requested
	LocationNamingMaps *LocationNamingMaps `protobuf:"bytes,6,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"` // null if not requested
	Auth               *AuthResponse       `protobuf:"bytes,7,opt,name=auth,proto3" json:"auth,omitempty"`
	Error              *ErrorResponse      `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusShopAppraisalResponse) Reset() {
	*x = StatusShopAppraisalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusShopAppraisalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusShopAppraisalResponse) ProtoMessage() {}

func (x *StatusShopAppraisalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusShopAppraisalResponse.ProtoReflect.Descriptor instead.
func (*StatusShopAppraisalResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{69}
}

func (x *StatusShopAppraisalResponse) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetInPurchaseQueue() bool {
	if x != nil {
		return x.InPurchaseQueue
	}
	return false
}

func (x *StatusShopAppraisalResponse) GetContractItems() []*ContractItem {
	if x != nil {
		return x.ContractItems
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *StatusShopAppraisalResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId        int64              `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	IncludeTypeNaming *IncludeTypeNaming `protobuf:"bytes,2,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	Auth              *AuthRequest       `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopInventoryRequest) Reset() {
	*x = ShopInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopInventoryRequest) ProtoMessage() {}

func (x *ShopInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopInventoryRequest.ProtoReflect.Descriptor instead.
func (*ShopInventoryRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{70}
}

func (x *ShopInventoryRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *ShopInventoryRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *ShopInventoryRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items           []*ShopItem      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TypeNamingLists *TypeNamingLists `protobuf:"bytes,2,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`
	Auth            *AuthResponse    `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error           *ErrorResponse   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopInventoryResponse) Reset() {
	*x = ShopInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopInventoryResponse) ProtoMessage() {}

func (x *ShopInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopInventoryResponse.ProtoReflect.Descriptor instead.
func (*ShopInventoryResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{71}
}

func (x *ShopInventoryResponse) GetItems() []*ShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopInventoryResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *ShopInventoryResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopInventoryResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopMakePurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId        int64              `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"` // LocationId
	Items             []*BasicItem       `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	IncludeTypeNaming *IncludeTypeNaming `protobuf:"bytes,3,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	Auth              *AuthRequest       `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopMakePurchaseRequest) Reset() {
	*x = ShopMakePurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopMakePurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopMakePurchaseRequest) ProtoMessage() {}

func (x *ShopMakePurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopMakePurchaseRequest.ProtoReflect.Descriptor instead.
func (*ShopMakePurchaseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{72}
}

func (x *ShopMakePurchaseRequest) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *ShopMakePurchaseRequest) GetItems() []*BasicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ShopMakePurchaseRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *ShopMakePurchaseRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopMakePurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          MakePurchaseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=eve_trading_co_proto.MakePurchaseStatus" json:"status,omitempty"`
	Appraisal       *ShopAppraisal     `protobuf:"bytes,2,opt,name=appraisal,proto3" json:"appraisal,omitempty"`
	TypeNamingLists *TypeNamingLists   `protobuf:"bytes,3,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`
	Auth            *AuthResponse      `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Error           *ErrorResponse     `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"` // purchase failed
}

func (x *ShopMakePurchaseResponse) Reset() {
	*x = ShopMakePurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopMakePurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopMakePurchaseResponse) ProtoMessage() {}

func (x *ShopMakePurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopMakePurchaseResponse.ProtoReflect.Descriptor instead.
func (*ShopMakePurchaseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{73}
}

func (x *ShopMakePurchaseResponse) GetStatus() MakePurchaseStatus {
	if x != nil {
		return x.Status
	}
	return MakePurchaseStatus_MPS_SUCCESS
}

func (x *ShopMakePurchaseResponse) GetAppraisal() *ShopAppraisal {
	if x != nil {
		return x.Appraisal
	}
	return nil
}

func (x *ShopMakePurchaseResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *ShopMakePurchaseResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopMakePurchaseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type UserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *UserDataRequest) Reset() {
	*x = UserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataRequest) ProtoMessage() {}

func (x *UserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataRequest.ProtoReflect.Descriptor instead.
func (*UserDataRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{74}
}

func (x *UserDataRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type UserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuybackAppraisals []*BuybackAppraisalStatus `protobuf:"bytes,1,rep,name=buyback_appraisals,json=buybackAppraisals,proto3" json:"buyback_appraisals,omitempty"`  // AppraisalCode
	ShopAppraisals    []*ShopAppraisalStatus    `protobuf:"bytes,2,rep,name=shop_appraisals,json=shopAppraisals,proto3" json:"shop_appraisals,omitempty"`           // AppraisalCode
	CancelledPurchase int64                     `protobuf:"varint,3,opt,name=cancelled_purchase,json=cancelledPurchase,proto3" json:"cancelled_purchase,omitempty"` // timestamp of last cancelled purchase
	MadePurchase      int64                     `protobuf:"varint,4,opt,name=made_purchase,json=madePurchase,proto3" json:"made_purchase,omitempty"`                // timestamp of last made purchase
	Auth              *AuthResponse             `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
	Error             *ErrorResponse            `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UserDataResponse) Reset() {
	*x = UserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataResponse) ProtoMessage() {}

func (x *UserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataResponse.ProtoReflect.Descriptor instead.
func (*UserDataResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{75}
}

func (x *UserDataResponse) GetBuybackAppraisals() []*BuybackAppraisalStatus {
	if x != nil {
		return x.BuybackAppraisals
	}
	return nil
}

func (x *UserDataResponse) GetShopAppraisals() []*ShopAppraisalStatus {
	if x != nil {
		return x.ShopAppraisals
	}
	return nil
}

func (x *UserDataResponse) GetCancelledPurchase() int64 {
	if x != nil {
		return x.CancelledPurchase
	}
	return 0
}

func (x *UserDataResponse) GetMadePurchase() int64 {
	if x != nil {
		return x.MadePurchase
	}
	return 0
}

func (x *UserDataResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UserDataResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopContractQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeItems          bool                   `protobuf:"varint,1,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeCodeAppraisal  bool                   `protobuf:"varint,2,opt,name=include_code_appraisal,json=includeCodeAppraisal,proto3" json:"include_code_appraisal,omitempty"`
	IncludeNewAppraisal   bool                   `protobuf:"varint,3,opt,name=include_new_appraisal,json=includeNewAppraisal,proto3" json:"include_new_appraisal,omitempty"` // requires 2 to be true
	IncludeLocationInfo   bool                   `protobuf:"varint,4,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeTypeNaming     *IncludeTypeNaming     `protobuf:"bytes,5,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,6,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 4 is false
	Auth                  *AuthRequest           `protobuf:"bytes,7,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopContractQueueRequest) Reset() {
	*x = ShopContractQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopContractQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopContractQueueRequest) ProtoMessage() {}

func (x *ShopContractQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopContractQueueRequest.ProtoReflect.Descriptor instead.
func (*ShopContractQueueRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{76}
}

func (x *ShopContractQueueRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *ShopContractQueueRequest) GetIncludeCodeAppraisal() bool {
	if x != nil {
		return x.IncludeCodeAppraisal
	}
	return false
}

func (x *ShopContractQueueRequest) GetIncludeNewAppraisal() bool {
	if x != nil {
		return x.IncludeNewAppraisal
	}
	return false
}

func (x *ShopContractQueueRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *ShopContractQueueRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *ShopContractQueueRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

func (x *ShopContractQueueRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopContractQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue              []*ShopContractQueueEntry `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty"`
	TypeNamingLists    *TypeNamingLists          `protobuf:"bytes,2,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`          // null if not requested, empty if no entries
	LocationNamingMaps *LocationNamingMaps       `protobuf:"bytes,3,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"` // null if not requested, empty if no entries
	Auth               *AuthResponse             `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Error              *ErrorResponse            `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopContractQueueResponse) Reset() {
	*x = ShopContractQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopContractQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopContractQueueResponse) ProtoMessage() {}

func (x *ShopContractQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopContractQueueResponse.ProtoReflect.Descriptor instead.
func (*ShopContractQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{77}
}

func (x *ShopContractQueueResponse) GetQueue() []*ShopContractQueueEntry {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *ShopContractQueueResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *ShopContractQueueResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *ShopContractQueueResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopContractQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type BuybackContractQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeItems          bool                   `protobuf:"varint,1,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeCodeAppraisal  bool                   `protobuf:"varint,2,opt,name=include_code_appraisal,json=includeCodeAppraisal,proto3" json:"include_code_appraisal,omitempty"`
	IncludeNewAppraisal   bool                   `protobuf:"varint,3,opt,name=include_new_appraisal,json=includeNewAppraisal,proto3" json:"include_new_appraisal,omitempty"` // requires 2 to be true
	IncludeLocationInfo   bool                   `protobuf:"varint,4,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeTypeNaming     *IncludeTypeNaming     `protobuf:"bytes,5,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,6,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 4 is false
	Auth                  *AuthRequest           `protobuf:"bytes,7,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *BuybackContractQueueRequest) Reset() {
	*x = BuybackContractQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContractQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContractQueueRequest) ProtoMessage() {}

func (x *BuybackContractQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContractQueueRequest.ProtoReflect.Descriptor instead.
func (*BuybackContractQueueRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{78}
}

func (x *BuybackContractQueueRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *BuybackContractQueueRequest) GetIncludeCodeAppraisal() bool {
	if x != nil {
		return x.IncludeCodeAppraisal
	}
	return false
}

func (x *BuybackContractQueueRequest) GetIncludeNewAppraisal() bool {
	if x != nil {
		return x.IncludeNewAppraisal
	}
	return false
}

func (x *BuybackContractQueueRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *BuybackContractQueueRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *BuybackContractQueueRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

func (x *BuybackContractQueueRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type BuybackContractQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue              []*BuybackContractQueueEntry `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty"`
	TypeNamingLists    *TypeNamingLists             `protobuf:"bytes,2,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`          // null if not requested, empty if no entries
	LocationNamingMaps *LocationNamingMaps          `protobuf:"bytes,3,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"` // null if not requested, empty if no entries
	Auth               *AuthResponse                `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Error              *ErrorResponse               `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BuybackContractQueueResponse) Reset() {
	*x = BuybackContractQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContractQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContractQueueResponse) ProtoMessage() {}

func (x *BuybackContractQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContractQueueResponse.ProtoReflect.Descriptor instead.
func (*BuybackContractQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{79}
}

func (x *BuybackContractQueueResponse) GetQueue() []*BuybackContractQueueEntry {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *BuybackContractQueueResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *BuybackContractQueueResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *BuybackContractQueueResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *BuybackContractQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopCancelPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // AppraisalCode
	Auth *AuthRequest `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopCancelPurchaseRequest) Reset() {
	*x = ShopCancelPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchaseRequest) ProtoMessage() {}

func (x *ShopCancelPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchaseRequest.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{80}
}

func (x *ShopCancelPurchaseRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShopCancelPurchaseRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopCancelPurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status CancelPurchaseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=eve_trading_co_proto.CancelPurchaseStatus" json:"status,omitempty"`
	Auth   *AuthResponse        `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error  *ErrorResponse       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopCancelPurchaseResponse) Reset() {
	*x = ShopCancelPurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchaseResponse) ProtoMessage() {}

func (x *ShopCancelPurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchaseResponse.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchaseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{81}
}

func (x *ShopCancelPurchaseResponse) GetStatus() CancelPurchaseStatus {
	if x != nil {
		return x.Status
	}
	return CancelPurchaseStatus_CPS_SUCCESS
}

func (x *ShopCancelPurchaseResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopCancelPurchaseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopDeletePurchasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string     `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"` // AppraisalCode
	Auth  *AuthRequest `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopDeletePurchasesRequest) Reset() {
	*x = ShopDeletePurchasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopDeletePurchasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopDeletePurchasesRequest) ProtoMessage() {}

func (x *ShopDeletePurchasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopDeletePurchasesRequest.ProtoReflect.Descriptor instead.
func (*ShopDeletePurchasesRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{82}
}

func (x *ShopDeletePurchasesRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *ShopDeletePurchasesRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopDeletePurchasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthResponse  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopDeletePurchasesResponse) Reset() {
	*x = ShopDeletePurchasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopDeletePurchasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopDeletePurchasesResponse) ProtoMessage() {}

func (x *ShopDeletePurchasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopDeletePurchasesResponse.ProtoReflect.Descriptor instead.
func (*ShopDeletePurchasesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{83}
}

func (x *ShopDeletePurchasesResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopDeletePurchasesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ParseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // AuthRequest auth = 2;
}

func (x *ParseRequest) Reset() {
	*x = ParseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRequest) ProtoMessage() {}

func (x *ParseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRequest.ProtoReflect.Descriptor instead.
func (*ParseRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{84}
}

func (x *ParseRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ParseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnownItems   []*NamedBasicItem `protobuf:"bytes,1,rep,name=known_items,json=knownItems,proto3" json:"known_items,omitempty"`
	UnknownItems []*NamedBasicItem `protobuf:"bytes,2,rep,name=unknown_items,json=unknownItems,proto3" json:"unknown_items,omitempty"`
	// AuthResponse auth = 3;
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ParseResponse) Reset() {
	*x = ParseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseResponse) ProtoMessage() {}

func (x *ParseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseResponse.ProtoReflect.Descriptor instead.
func (*ParseResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{85}
}

func (x *ParseResponse) GetKnownItems() []*NamedBasicItem {
	if x != nil {
		return x.KnownItems
	}
	return nil
}

func (x *ParseResponse) GetUnknownItems() []*NamedBasicItem {
	if x != nil {
		return x.UnknownItems
	}
	return nil
}

func (x *ParseResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type SDETypeDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SDETypeDataRequest) Reset() {
	*x = SDETypeDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDETypeDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDETypeDataRequest) ProtoMessage() {}

func (x *SDETypeDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDETypeDataRequest.ProtoReflect.Descriptor instead.
func (*SDETypeDataRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{86}
}

type SDETypeDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []int32        `protobuf:"varint,1,rep,packed,name=types,proto3" json:"types,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SDETypeDataResponse) Reset() {
	*x = SDETypeDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDETypeDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDETypeDataResponse) ProtoMessage() {}

func (x *SDETypeDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDETypeDataResponse.ProtoReflect.Descriptor instead.
func (*SDETypeDataResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{87}
}

func (x *SDETypeDataResponse) GetTypes() []int32 {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *SDETypeDataResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type NamedSDETypeDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NamedSDETypeDataRequest) Reset() {
	*x = NamedSDETypeDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedSDETypeDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedSDETypeDataRequest) ProtoMessage() {}

func (x *NamedSDETypeDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedSDETypeDataRequest.ProtoReflect.Descriptor instead.
func (*NamedSDETypeDataRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{88}
}

type NamedSDETypeDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types           []*NamedType     `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	TypeNamingLists *TypeNamingLists `protobuf:"bytes,2,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"`
	Error           *ErrorResponse   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NamedSDETypeDataResponse) Reset() {
	*x = NamedSDETypeDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedSDETypeDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedSDETypeDataResponse) ProtoMessage() {}

func (x *NamedSDETypeDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedSDETypeDataResponse.ProtoReflect.Descriptor instead.
func (*NamedSDETypeDataResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{89}
}

func (x *NamedSDETypeDataResponse) GetTypes() []*NamedType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *NamedSDETypeDataResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *NamedSDETypeDataResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId   int64         `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`      // LocationId
	LocationInfo *LocationInfo `protobuf:"bytes,2,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"` // null unless requested
}

func (x *ShopLocation) Reset() {
	*x = ShopLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocation) ProtoMessage() {}

func (x *ShopLocation) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocation.ProtoReflect.Descriptor instead.
func (*ShopLocation) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{90}
}

func (x *ShopLocation) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *ShopLocation) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

type ShopLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeLocationInfo   bool                   `protobuf:"varint,1,opt,name=include_location_info,json=includeLocationInfo,proto3" json:"include_location_info,omitempty"`
	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,2,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // ignored if 1 is false
}

func (x *ShopLocationsRequest) Reset() {
	*x = ShopLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocationsRequest) ProtoMessage() {}

func (x *ShopLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocationsRequest.ProtoReflect.Descriptor instead.
func (*ShopLocationsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{91}
}

func (x *ShopLocationsRequest) GetIncludeLocationInfo() bool {
	if x != nil {
		return x.IncludeLocationInfo
	}
	return false
}

func (x *ShopLocationsRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

type ShopLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations          []*ShopLocation     `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	LocationNamingMaps *LocationNamingMaps `protobuf:"bytes,2,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"` // null if not requested
	Error              *ErrorResponse      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopLocationsResponse) Reset() {
	*x = ShopLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopLocationsResponse) ProtoMessage() {}

func (x *ShopLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopLocationsResponse.ProtoReflect.Descriptor instead.
func (*ShopLocationsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{92}
}

func (x *ShopLocationsResponse) GetLocations() []*ShopLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *ShopLocationsResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *ShopLocationsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId int32 `protobuf:"varint,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"` // SystemId
	RegionId int32 `protobuf:"varint,2,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{93}
}

func (x *System) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *System) GetRegionId() int32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type BuybackSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,1,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // system and region names only
}

func (x *BuybackSystemsRequest) Reset() {
	*x = BuybackSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackSystemsRequest) ProtoMessage() {}

func (x *BuybackSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackSystemsRequest.ProtoReflect.Descriptor instead.
func (*BuybackSystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{94}
}

func (x *BuybackSystemsRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

type BuybackSystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems            []*System           `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"`
	LocationNamingMaps *LocationNamingMaps `protobuf:"bytes,2,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"` // null if not requested
	Error              *ErrorResponse      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BuybackSystemsResponse) Reset() {
	*x = BuybackSystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackSystemsResponse) ProtoMessage() {}

func (x *BuybackSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackSystemsResponse.ProtoReflect.Descriptor instead.
func (*BuybackSystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{95}
}

func (x *BuybackSystemsResponse) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *BuybackSystemsResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *BuybackSystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShopPurchaseQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeCodeAppraisal bool               `protobuf:"varint,1,opt,name=include_code_appraisal,json=includeCodeAppraisal,proto3" json:"include_code_appraisal,omitempty"`
	IncludeNewAppraisal  bool               `protobuf:"varint,2,opt,name=include_new_appraisal,json=includeNewAppraisal,proto3" json:"include_new_appraisal,omitempty"` // requires 1 to be true
	IncludeTypeNaming    *IncludeTypeNaming `protobuf:"bytes,3,opt,name=include_type_naming,json=includeTypeNaming,proto3" json:"include_type_naming,omitempty"`
	Auth                 *AuthRequest       `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ShopPurchaseQueueRequest) Reset() {
	*x = ShopPurchaseQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchaseQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchaseQueueRequest) ProtoMessage() {}

func (x *ShopPurchaseQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchaseQueueRequest.ProtoReflect.Descriptor instead.
func (*ShopPurchaseQueueRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{96}
}

func (x *ShopPurchaseQueueRequest) GetIncludeCodeAppraisal() bool {
	if x != nil {
		return x.IncludeCodeAppraisal
	}
	return false
}

func (x *ShopPurchaseQueueRequest) GetIncludeNewAppraisal() bool {
	if x != nil {
		return x.IncludeNewAppraisal
	}
	return false
}

func (x *ShopPurchaseQueueRequest) GetIncludeTypeNaming() *IncludeTypeNaming {
	if x != nil {
		return x.IncludeTypeNaming
	}
	return nil
}

func (x *ShopPurchaseQueueRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ShopPurchaseQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue           []*PurchaseQueueEntry `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty"`
	TypeNamingLists *TypeNamingLists      `protobuf:"bytes,2,opt,name=type_naming_lists,json=typeNamingLists,proto3" json:"type_naming_lists,omitempty"` // null if not requested, empty if no entries
	Auth            *AuthResponse         `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error           *ErrorResponse        `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopPurchaseQueueResponse) Reset() {
	*x = ShopPurchaseQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchaseQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchaseQueueResponse) ProtoMessage() {}

func (x *ShopPurchaseQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchaseQueueResponse.ProtoReflect.Descriptor instead.
func (*ShopPurchaseQueueResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{97}
}

func (x *ShopPurchaseQueueResponse) GetQueue() []*PurchaseQueueEntry {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *ShopPurchaseQueueResponse) GetTypeNamingLists() *TypeNamingLists {
	if x != nil {
		return x.TypeNamingLists
	}
	return nil
}

func (x *ShopPurchaseQueueResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopPurchaseQueueResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type EsiAppLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // esi sso code
	App  EsiApp       `protobuf:"varint,2,opt,name=app,proto3,enum=eve_trading_co_proto.EsiApp" json:"app,omitempty"`
	Auth *AuthRequest `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *EsiAppLoginRequest) Reset() {
	*x = EsiAppLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsiAppLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsiAppLoginRequest) ProtoMessage() {}

func (x *EsiAppLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsiAppLoginRequest.ProtoReflect.Descriptor instead.
func (*EsiAppLoginRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{98}
}

func (x *EsiAppLoginRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EsiAppLoginRequest) GetApp() EsiApp {
	if x != nil {
		return x.App
	}
	return EsiApp_EA_AUTH
}

func (x *EsiAppLoginRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type EsiAppLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string         `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // esi web token
	Jwt   string         `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Auth  *AuthResponse  `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Error *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EsiAppLoginResponse) Reset() {
	*x = EsiAppLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsiAppLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsiAppLoginResponse) ProtoMessage() {}

func (x *EsiAppLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsiAppLoginResponse.ProtoReflect.Descriptor instead.
func (*EsiAppLoginResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{99}
}

func (x *EsiAppLoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *EsiAppLoginResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

func (x *EsiAppLoginResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *EsiAppLoginResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type SDESystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId int32 `protobuf:"varint,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"` // SystemId
	RegionId int32 `protobuf:"varint,2,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"` // RegionId
}

func (x *SDESystem) Reset() {
	*x = SDESystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDESystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDESystem) ProtoMessage() {}

func (x *SDESystem) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDESystem.ProtoReflect.Descriptor instead.
func (*SDESystem) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{100}
}

func (x *SDESystem) GetSystemId() int32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *SDESystem) GetRegionId() int32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type SDESystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeLocationNaming *IncludeLocationNaming `protobuf:"bytes,1,opt,name=include_location_naming,json=includeLocationNaming,proto3" json:"include_location_naming,omitempty"` // system and region names only
}

func (x *SDESystemsRequest) Reset() {
	*x = SDESystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDESystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDESystemsRequest) ProtoMessage() {}

func (x *SDESystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDESystemsRequest.ProtoReflect.Descriptor instead.
func (*SDESystemsRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{101}
}

func (x *SDESystemsRequest) GetIncludeLocationNaming() *IncludeLocationNaming {
	if x != nil {
		return x.IncludeLocationNaming
	}
	return nil
}

type SDESystemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems            []*System           `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"`
	LocationNamingMaps *LocationNamingMaps `protobuf:"bytes,2,opt,name=location_naming_maps,json=locationNamingMaps,proto3" json:"location_naming_maps,omitempty"` // null if not requested
	Error              *ErrorResponse      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SDESystemsResponse) Reset() {
	*x = SDESystemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDESystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDESystemsResponse) ProtoMessage() {}

func (x *SDESystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDESystemsResponse.ProtoReflect.Descriptor instead.
func (*SDESystemsResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{102}
}

func (x *SDESystemsResponse) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *SDESystemsResponse) GetLocationNamingMaps() *LocationNamingMaps {
	if x != nil {
		return x.LocationNamingMaps
	}
	return nil
}

func (x *SDESystemsResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgGetBuybackBundleKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetBuybackBundleKeysRequest) Reset() {
	*x = CfgGetBuybackBundleKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackBundleKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackBundleKeysRequest) ProtoMessage() {}

func (x *CfgGetBuybackBundleKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackBundleKeysRequest.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackBundleKeysRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{103}
}

func (x *CfgGetBuybackBundleKeysRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetBuybackBundleKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKeys []string       `protobuf:"bytes,1,rep,name=bundle_keys,json=bundleKeys,proto3" json:"bundle_keys,omitempty"` // BuybackSystemBundleKey
	Auth       *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetBuybackBundleKeysResponse) Reset() {
	*x = CfgGetBuybackBundleKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetBuybackBundleKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetBuybackBundleKeysResponse) ProtoMessage() {}

func (x *CfgGetBuybackBundleKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetBuybackBundleKeysResponse.ProtoReflect.Descriptor instead.
func (*CfgGetBuybackBundleKeysResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{104}
}

func (x *CfgGetBuybackBundleKeysResponse) GetBundleKeys() []string {
	if x != nil {
		return x.BundleKeys
	}
	return nil
}

func (x *CfgGetBuybackBundleKeysResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetBuybackBundleKeysResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgGetShopBundleKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetShopBundleKeysRequest) Reset() {
	*x = CfgGetShopBundleKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopBundleKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopBundleKeysRequest) ProtoMessage() {}

func (x *CfgGetShopBundleKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopBundleKeysRequest.ProtoReflect.Descriptor instead.
func (*CfgGetShopBundleKeysRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{105}
}

func (x *CfgGetShopBundleKeysRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetShopBundleKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleKeys []string       `protobuf:"bytes,1,rep,name=bundle_keys,json=bundleKeys,proto3" json:"bundle_keys,omitempty"` // ShopLocationBundleKey
	Auth       *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetShopBundleKeysResponse) Reset() {
	*x = CfgGetShopBundleKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetShopBundleKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetShopBundleKeysResponse) ProtoMessage() {}

func (x *CfgGetShopBundleKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetShopBundleKeysResponse.ProtoReflect.Descriptor instead.
func (*CfgGetShopBundleKeysResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{106}
}

func (x *CfgGetShopBundleKeysResponse) GetBundleKeys() []string {
	if x != nil {
		return x.BundleKeys
	}
	return nil
}

func (x *CfgGetShopBundleKeysResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetShopBundleKeysResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CfgGetMarketNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CfgGetMarketNamesRequest) Reset() {
	*x = CfgGetMarketNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketNamesRequest) ProtoMessage() {}

func (x *CfgGetMarketNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketNamesRequest.ProtoReflect.Descriptor instead.
func (*CfgGetMarketNamesRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{107}
}

func (x *CfgGetMarketNamesRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CfgGetMarketNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketNames []string       `protobuf:"bytes,1,rep,name=market_names,json=marketNames,proto3" json:"market_names,omitempty"`
	Auth        *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error       *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CfgGetMarketNamesResponse) Reset() {
	*x = CfgGetMarketNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgGetMarketNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgGetMarketNamesResponse) ProtoMessage() {}

func (x *CfgGetMarketNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgGetMarketNamesResponse.ProtoReflect.Descriptor instead.
func (*CfgGetMarketNamesResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{108}
}

func (x *CfgGetMarketNamesResponse) GetMarketNames() []string {
	if x != nil {
		return x.MarketNames
	}
	return nil
}

func (x *CfgGetMarketNamesResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CfgGetMarketNamesResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type IsAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *IsAdminRequest) Reset() {
	*x = IsAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAdminRequest) ProtoMessage() {}

func (x *IsAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAdminRequest.ProtoReflect.Descriptor instead.
func (*IsAdminRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{109}
}

func (x *IsAdminRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

type IsAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin bool           `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	Auth    *AuthResponse  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Error   *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *IsAdminResponse) Reset() {
	*x = IsAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAdminResponse) ProtoMessage() {}

func (x *IsAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAdminResponse.ProtoReflect.Descriptor instead.
func (*IsAdminResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{110}
}

func (x *IsAdminResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *IsAdminResponse) GetAuth() *AuthResponse {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *IsAdminResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CharacterInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId int32 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
}

func (x *CharacterInfoRequest) Reset() {
	*x = CharacterInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterInfoRequest) ProtoMessage() {}

func (x *CharacterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterInfoRequest.ProtoReflect.Descriptor instead.
func (*CharacterInfoRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{111}
}

func (x *CharacterInfoRequest) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

type CharacterInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId   int32          `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	CorporationId int32          `protobuf:"varint,2,opt,name=corporation_id,json=corporationId,proto3" json:"corporation_id,omitempty"`
	AllianceId    *OptionalInt32 `protobuf:"bytes,3,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"`
	Name          string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Error         *ErrorResponse `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CharacterInfoResponse) Reset() {
	*x = CharacterInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterInfoResponse) ProtoMessage() {}

func (x *CharacterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterInfoResponse.ProtoReflect.Descriptor instead.
func (*CharacterInfoResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{112}
}

func (x *CharacterInfoResponse) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *CharacterInfoResponse) GetCorporationId() int32 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *CharacterInfoResponse) GetAllianceId() *OptionalInt32 {
	if x != nil {
		return x.AllianceId
	}
	return nil
}

func (x *CharacterInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterInfoResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type CorporationInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorporationId int32 `protobuf:"varint,1,opt,name=corporation_id,json=corporationId,proto3" json:"corporation_id,omitempty"`
}

func (x *CorporationInfoRequest) Reset() {
	*x = CorporationInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorporationInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorporationInfoRequest) ProtoMessage() {}

func (x *CorporationInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorporationInfoRequest.ProtoReflect.Descriptor instead.
func (*CorporationInfoRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{113}
}

func (x *CorporationInfoRequest) GetCorporationId() int32 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

type CorporationInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorporationId int32          `protobuf:"varint,1,opt,name=corporation_id,json=corporationId,proto3" json:"corporation_id,omitempty"`
	AllianceId    *OptionalInt32 `protobuf:"bytes,2,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"`
	Name          string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ticker        string         `protobuf:"bytes,4,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Error         *ErrorResponse `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CorporationInfoResponse) Reset() {
	*x = CorporationInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorporationInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorporationInfoResponse) ProtoMessage() {}

func (x *CorporationInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorporationInfoResponse.ProtoReflect.Descriptor instead.
func (*CorporationInfoResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{114}
}

func (x *CorporationInfoResponse) GetCorporationId() int32 {
	if x != nil {
		return x.CorporationId
	}
	return 0
}

func (x *CorporationInfoResponse) GetAllianceId() *OptionalInt32 {
	if x != nil {
		return x.AllianceId
	}
	return nil
}

func (x *CorporationInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CorporationInfoResponse) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *CorporationInfoResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type AllianceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllianceId int32 `protobuf:"varint,1,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"`
}

func (x *AllianceInfoRequest) Reset() {
	*x = AllianceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceInfoRequest) ProtoMessage() {}

func (x *AllianceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceInfoRequest.ProtoReflect.Descriptor instead.
func (*AllianceInfoRequest) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{115}
}

func (x *AllianceInfoRequest) GetAllianceId() int32 {
	if x != nil {
		return x.AllianceId
	}
	return 0
}

type AllianceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllianceId int32          `protobuf:"varint,1,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"`
	Name       string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ticker     string         `protobuf:"bytes,3,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Error      *ErrorResponse `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AllianceInfoResponse) Reset() {
	*x = AllianceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_etco_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllianceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllianceInfoResponse) ProtoMessage() {}

func (x *AllianceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_etco_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllianceInfoResponse.ProtoReflect.Descriptor instead.
func (*AllianceInfoResponse) Descriptor() ([]byte, []int) {
	return file_etco_proto_rawDescGZIP(), []int{116}
}

func (x *AllianceInfoResponse) GetAllianceId() int32 {
	if x != nil {
		return x.AllianceId
	}
	return 0
}

func (x *AllianceInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AllianceInfoResponse) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *AllianceInfoResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_etco_proto protoreflect.FileDescriptor

var file_etco_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x65, 0x74, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44,
	0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x22, 0x5a, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x7b, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x75, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x90, 0x01,
	0x0a, 0x15, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79,
	0x22, 0x50, 0x0a, 0x12, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x1a, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x51, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x65, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd1, 0x01, 0x0a, 0x19,
	0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x62, 0x0a, 0x0a, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x48, 0x0a, 0x10, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x33, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x6d, 0x33, 0x46, 0x65, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x43, 0x66, 0x67,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x74,
	0x0a, 0x09, 0x43, 0x66, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x12, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x14, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x14, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xa1,
	0x01, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xf6, 0x03, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x62, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x57,
	0x0a, 0x13, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x52, 0x11, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x59, 0x0a, 0x0e, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22,
	0xcf, 0x02, 0x0a, 0x11, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x57, 0x0a, 0x13, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x11, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69,
	0x74, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x13, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x11, 0x74,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73,
	0x61, 0x6c, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x13, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x52, 0x11, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x13, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x52, 0x11, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x22, 0xaf, 0x03, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61,
	0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe2, 0x03, 0x0a, 0x19, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x58,
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73,
	0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a,
	0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x0c, 0x6e, 0x65,
	0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x22, 0xd9, 0x03, 0x0a, 0x16, 0x53,
	0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x58, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4a, 0x0a, 0x0e, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0d,
	0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x22, 0xf4, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x0d,
	0x63, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x34, 0x0a,
	0x16, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x61,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x0c, 0x6e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x22, 0x68, 0x0a,
	0x16, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x70,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0x6d, 0x0a, 0x15, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3b,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x62, 0x0a, 0x29, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0xf6, 0x02, 0x0a, 0x2a, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x6c, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x02,
	0x0a, 0x2b, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x6c,
	0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x01, 0x0a,
	0x2c, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x61, 0x0a, 0x28,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22,
	0xf3, 0x02, 0x0a, 0x29, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x6b, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb9, 0x02, 0x0a, 0x2a, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x1a, 0x6b, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xbc, 0x01, 0x0a, 0x2b, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68,
	0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61,
	0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x36, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xed, 0x01, 0x0a, 0x1b, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x63, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xe5, 0x04, 0x0a, 0x1c, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x73, 0x0a, 0x11,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x70, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x36, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0x62, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x02, 0x0a, 0x1d, 0x43, 0x66, 0x67,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x07, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x62, 0x0a,
	0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xaf, 0x01, 0x0a, 0x1e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x1a, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x63, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0x8d, 0x05, 0x0a, 0x1b, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x72, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x12,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x70, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x63, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x66, 0x0a, 0x14, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9b, 0x02, 0x0a, 0x1c, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x63, 0x0a, 0x0e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xae, 0x01, 0x0a, 0x1d, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x36,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xe6, 0x01, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x63,
	0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xed, 0x04, 0x0a, 0x15, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x6c, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x12,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x70, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x5b, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x66, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81, 0x02, 0x0a, 0x16, 0x43,
	0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x1a, 0x5b, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa8,
	0x01, 0x0a, 0x17, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x94, 0x02, 0x0a, 0x1a, 0x4e, 0x65,
	0x77, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x61, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x61, 0x76, 0x65,
	0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xa9, 0x02, 0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xca, 0x01, 0x0a,
	0x17, 0x4e, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xeb, 0x01, 0x0a, 0x18, 0x4e, 0x65,
	0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xf8, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd3, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x22, 0xf2, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x61,
	0x73, 0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x97, 0x03, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x63,
	0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0x92, 0x04, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x49, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x12,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x70, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x94, 0x03, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x63, 0x0a, 0x17, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xbb, 0x04, 0x0a,
	0x1b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x47, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x61, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x73, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc7, 0x01, 0x0a, 0x14, 0x53,
	0x68, 0x6f, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0x93, 0x02, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x81, 0x02, 0x0a, 0x17, 0x53,
	0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x57,
	0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xe5,
	0x02, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a,
	0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x48, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0x8a, 0x03, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x11, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x73, 0x12, 0x52, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61,
	0x64, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd2, 0x03,
	0x0a, 0x18, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x34, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x57, 0x0a,
	0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x63, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0x81, 0x03, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x52,
	0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd5, 0x03, 0x0a, 0x1b, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x65, 0x77,
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52,
	0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x63, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x87,
	0x03, 0x0a, 0x1c, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70,
	0x73, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x70,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xd3, 0x01, 0x0a, 0x1a, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x69, 0x0a, 0x1a, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x49, 0x0a, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x44, 0x45, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a,
	0x13, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x44,
	0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xdf, 0x01, 0x0a, 0x18, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x78, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xaf, 0x01, 0x0a,
	0x14, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x63, 0x0a, 0x17, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xf0,
	0x01, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x70, 0x73, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x42, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x15, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63,
	0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x22, 0xe7, 0x01, 0x0a, 0x16, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x12,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x70, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x94, 0x02,
	0x0a, 0x18, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f,
	0x61, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x72, 0x61,
	0x69, 0x73, 0x61, 0x6c, 0x12, 0x57, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0xa1, 0x02, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x45, 0x73, 0x69,
	0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x73, 0x69, 0x41, 0x70, 0x70, 0x52, 0x03,
	0x61, 0x70, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x45,
	0x73, 0x69, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x45, 0x0a,
	0x09, 0x53, 0x44, 0x45, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x11, 0x53, 0x44, 0x45, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x17, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xe3,
	0x01, 0x0a, 0x12, 0x53, 0x44, 0x45, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5a, 0x0a,
	0x14, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x57, 0x0a, 0x1e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xb5, 0x01,
	0x0a, 0x1f, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x54, 0x0a, 0x1b, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x70, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xb2, 0x01, 0x0a, 0x1c,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x36, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x51, 0x0a, 0x18, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x47, 0x0a, 0x0e, 0x49, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x39, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf6, 0x01,
	0x0a, 0x15, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x44, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x0a, 0x61, 0x6c, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x16, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0b, 0x61, 0x6c,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x36, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x9e, 0x01, 0x0a, 0x14, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2a, 0x4d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x10, 0x03, 0x2a,
	0xc6, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x69, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x10, 0x03, 0x12, 0x17, 0x0a,
	0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10,
	0x07, 0x12, 0x0a, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x08, 0x12, 0x0b, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x64, 0x10, 0x0a, 0x2a, 0x5f, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x63,
	0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x61,
	0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x03, 0x2a, 0xb2, 0x01, 0x0a, 0x12, 0x4d, 0x61,
	0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x50, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x50, 0x53, 0x5f, 0x43, 0x4f, 0x4f, 0x4c, 0x44, 0x4f, 0x57,
	0x4e, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x50, 0x53,
	0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x50, 0x53, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x53,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x4d,
	0x50, 0x53, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x50, 0x53, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x4e, 0x44,
	0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x2a, 0x8c,
	0x01, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x50, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x50, 0x53, 0x5f,
	0x43, 0x4f, 0x4f, 0x4c, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x50, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x50, 0x53, 0x5f, 0x43, 0x4f, 0x4f, 0x4c, 0x44,
	0x4f, 0x57, 0x4e, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x50, 0x53,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x04, 0x2a, 0x50, 0x0a,
	0x06, 0x45, 0x73, 0x69, 0x41, 0x70, 0x70, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x41, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x41, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45,
	0x54, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x41, 0x5f, 0x43, 0x4f, 0x52, 0x50, 0x4f,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x41, 0x5f, 0x53,
	0x54, 0x52, 0x55, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x32,
	0xc8, 0x25, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x12, 0x62, 0x0a, 0x0b, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x44, 0x45,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x53, 0x44, 0x45, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f,
	0x0a, 0x0a, 0x53, 0x44, 0x45, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x27, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x44, 0x45, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x44, 0x45,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x24, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x70, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x2e, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a,
	0x11, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x14, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x31, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0xa7, 0x01, 0x0a, 0x22, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x21, 0x43, 0x66,
	0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x3e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7d, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7a, 0x0a, 0x13, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66,
	0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x11, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x17,
	0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x34, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x14, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x70, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x31, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67,
	0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xad, 0x01, 0x0a, 0x24, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61,
	0x70, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x41, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x65,
	0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xaa, 0x01, 0x0a, 0x23, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x40, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x65, 0x76, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01,
	0x0a, 0x16, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x66, 0x67, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x62, 0x0a, 0x0b, 0x45, 0x73, 0x69, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x73, 0x69, 0x41, 0x70, 0x70, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x73, 0x69, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x72, 0x70, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x12, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x4e, 0x65, 0x77,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x70,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4e, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x76,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a,
	0x10, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b,
	0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6b, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x77, 0x0a, 0x12, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68,
	0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x61, 0x6c, 0x12, 0x33, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x70, 0x70,
	0x72, 0x61, 0x69, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a,
	0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72,
	0x61, 0x69, 0x73, 0x61, 0x6c, 0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x72, 0x61, 0x69, 0x73,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_etco_proto_rawDescOnce sync.Once
	file_etco_proto_rawDescData = file_etco_proto_rawDesc
)

func file_etco_proto_rawDescGZIP() []byte {
	file_etco_proto_rawDescOnce.Do(func() {
		file_etco_proto_rawDescData = protoimpl.X.CompressGZIP(file_etco_proto_rawDescData)
	})
	return file_etco_proto_rawDescData
}

var file_etco_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_etco_proto_msgTypes = make([]protoimpl.MessageInfo, 135)
var file_etco_proto_goTypes = []interface{}{
	(ErrorCode)(0),                                       // 0: eve_trading_co_proto.ErrorCode
	(ContractStatus)(0),                                  // 1: eve_trading_co_proto.ContractStatus
	(ContractAssigneeType)(0),                            // 2: eve_trading_co_proto.ContractAssigneeType
	(MakePurchaseStatus)(0),                              // 3: eve_trading_co_proto.MakePurchaseStatus
	(CancelPurchaseStatus)(0),                            // 4: eve_trading_co_proto.CancelPurchaseStatus
	(EsiApp)(0),                                          // 5: eve_trading_co_proto.EsiApp
	(*OptionalInt32)(nil),                                // 6: eve_trading_co_proto.OptionalInt32
	(*AuthRequest)(nil),                                  // 7: eve_trading_co_proto.AuthRequest
	(*AuthResponse)(nil),                                 // 8: eve_trading_co_proto.AuthResponse
	(*ErrorResponse)(nil),                                // 9: eve_trading_co_proto.ErrorResponse
	(*CfgTypePricing)(nil),                               // 10: eve_trading_co_proto.CfgTypePricing
	(*CfgBuybackTypePricing)(nil),                        // 11: eve_trading_co_proto.CfgBuybackTypePricing
	(*CfgShopTypePricing)(nil),                           // 12: eve_trading_co_proto.CfgShopTypePricing
	(*CfgBuybackSystemTypeBundle)(nil),                   // 13: eve_trading_co_proto.CfgBuybackSystemTypeBundle
	(*CfgShopLocationTypeBundle)(nil),                    // 14: eve_trading_co_proto.CfgShopLocationTypeBundle
	(*CfgBuybackSystem)(nil),                             // 15: eve_trading_co_proto.CfgBuybackSystem
	(*CfgShopLocation)(nil),                              // 16: eve_trading_co_proto.CfgShopLocation
	(*CfgMarket)(nil),                                    // 17: eve_trading_co_proto.CfgMarket
	(*AuthList)(nil),                                     // 18: eve_trading_co_proto.AuthList
	(*IncludeTypeNaming)(nil),                            // 19: eve_trading_co_proto.IncludeTypeNaming
	(*TypeNamingIndexes)(nil),                            // 20: eve_trading_co_proto.TypeNamingIndexes
	(*TypeNamingLists)(nil),                              // 21: eve_trading_co_proto.TypeNamingLists
	(*LocationInfo)(nil),                                 // 22: eve_trading_co_proto.LocationInfo
	(*IncludeLocationNaming)(nil),                        // 23: eve_trading_co_proto.IncludeLocationNaming
	(*LocationNamingMaps)(nil),                           // 24: eve_trading_co_proto.LocationNamingMaps
	(*NamedType)(nil),                                    // 25: eve_trading_co_proto.NamedType
	(*BasicItem)(nil),                                    // 26: eve_trading_co_proto.BasicItem
	(*NamedBasicItem)(nil),                               // 27: eve_trading_co_proto.NamedBasicItem
	(*BuybackAppraisal)(nil),                             // 28: eve_trading_co_proto.BuybackAppraisal
	(*BuybackParentItem)(nil),                            // 29: eve_trading_co_proto.BuybackParentItem
	(*BuybackChildItem)(nil),                             // 30: eve_trading_co_proto.BuybackChildItem
	(*ShopAppraisal)(nil),                                // 31: eve_trading_co_proto.ShopAppraisal
	(*ShopItem)(nil),                                     // 32: eve_trading_co_proto.ShopItem
	(*ContractItem)(nil),                                 // 33: eve_trading_co_proto.ContractItem
	(*Contract)(nil),                                     // 34: eve_trading_co_proto.Contract
	(*BuybackContractQueueEntry)(nil),                    // 35: eve_trading_co_proto.BuybackContractQueueEntry
	(*ShopContractQueueEntry)(nil),                       // 36: eve_trading_co_proto.ShopContractQueueEntry
	(*PurchaseQueueEntry)(nil),                           // 37: eve_trading_co_proto.PurchaseQueueEntry
	(*BuybackAppraisalStatus)(nil),                       // 38: eve_trading_co_proto.BuybackAppraisalStatus
	(*ShopAppraisalStatus)(nil),                          // 39: eve_trading_co_proto.ShopAppraisalStatus
	(*CfgGetAuthListRequest)(nil),                        // 40: eve_trading_co_proto.CfgGetAuthListRequest
	(*CfgGetAuthListResponse)(nil),                       // 41: eve_trading_co_proto.CfgGetAuthListResponse
	(*CfgSetAuthListRequest)(nil),                        // 42: eve_trading_co_proto.CfgSetAuthListRequest
	(*CfgSetAuthListResponse)(nil),                       // 43: eve_trading_co_proto.CfgSetAuthListResponse
	(*CfgGetBuybackSystemTypeMapsBuilderRequest)(nil),    // 44: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderRequest
	(*CfgGetBuybackSystemTypeMapsBuilderResponse)(nil),   // 45: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse
	(*CfgMergeBuybackSystemTypeMapsBuilderRequest)(nil),  // 46: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest
	(*CfgMergeBuybackSystemTypeMapsBuilderResponse)(nil), // 47: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse
	(*CfgGetShopLocationTypeMapsBuilderRequest)(nil),     // 48: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderRequest
	(*CfgGetShopLocationTypeMapsBuilderResponse)(nil),    // 49: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse
	(*CfgMergeShopLocationTypeMapsBuilderRequest)(nil),   // 50: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest
	(*CfgMergeShopLocationTypeMapsBuilderResponse)(nil),  // 51: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse
	(*CfgGetBuybackSystemsRequest)(nil),                  // 52: eve_trading_co_proto.CfgGetBuybackSystemsRequest
	(*CfgGetBuybackSystemsResponse)(nil),                 // 53: eve_trading_co_proto.CfgGetBuybackSystemsResponse
	(*CfgMergeBuybackSystemsRequest)(nil),                // 54: eve_trading_co_proto.CfgMergeBuybackSystemsRequest
	(*CfgMergeBuybackSystemsResponse)(nil),               // 55: eve_trading_co_proto.CfgMergeBuybackSystemsResponse
	(*CfgGetShopLocationsRequest)(nil),                   // 56: eve_trading_co_proto.CfgGetShopLocationsRequest
	(*CfgGetShopLocationsResponse)(nil),                  // 57: eve_trading_co_proto.CfgGetShopLocationsResponse
	(*CfgMergeShopLocationsRequest)(nil),                 // 58: eve_trading_co_proto.CfgMergeShopLocationsRequest
	(*CfgMergeShopLocationsResponse)(nil),                // 59: eve_trading_co_proto.CfgMergeShopLocationsResponse
	(*CfgGetMarketsRequest)(nil),                         // 60: eve_trading_co_proto.CfgGetMarketsRequest
	(*CfgGetMarketsResponse)(nil),                        // 61: eve_trading_co_proto.CfgGetMarketsResponse
	(*CfgMergeMarketsRequest)(nil),                       // 62: eve_trading_co_proto.CfgMergeMarketsRequest
	(*CfgMergeMarketsResponse)(nil),                      // 63: eve_trading_co_proto.CfgMergeMarketsResponse
	(*NewBuybackAppraisalRequest)(nil),                   // 64: eve_trading_co_proto.NewBuybackAppraisalRequest
	(*NewBuybackAppraisalResponse)(nil),                  // 65: eve_trading_co_proto.NewBuybackAppraisalResponse
	(*NewShopAppraisalRequest)(nil),                      // 66: eve_trading_co_proto.NewShopAppraisalRequest
	(*NewShopAppraisalResponse)(nil),                     // 67: eve_trading_co_proto.NewShopAppraisalResponse
	(*GetBuybackAppraisalRequest)(nil),                   // 68: eve_trading_co_proto.GetBuybackAppraisalRequest
	(*GetBuybackAppraisalResponse)(nil),                  // 69: eve_trading_co_proto.GetBuybackAppraisalResponse
	(*GetShopAppraisalRequest)(nil),                      // 70: eve_trading_co_proto.GetShopAppraisalRequest
	(*GetShopAppraisalResponse)(nil),                     // 71: eve_trading_co_proto.GetShopAppraisalResponse
	(*StatusBuybackAppraisalRequest)(nil),                // 72: eve_trading_co_proto.StatusBuybackAppraisalRequest
	(*StatusBuybackAppraisalResponse)(nil),               // 73: eve_trading_co_proto.StatusBuybackAppraisalResponse
	(*StatusShopAppraisalRequest)(nil),                   // 74: eve_trading_co_proto.StatusShopAppraisalRequest
	(*StatusShopAppraisalResponse)(nil),                  // 75: eve_trading_co_proto.StatusShopAppraisalResponse
	(*ShopInventoryRequest)(nil),                         // 76: eve_trading_co_proto.ShopInventoryRequest
	(*ShopInventoryResponse)(nil),                        // 77: eve_trading_co_proto.ShopInventoryResponse
	(*ShopMakePurchaseRequest)(nil),                      // 78: eve_trading_co_proto.ShopMakePurchaseRequest
	(*ShopMakePurchaseResponse)(nil),                     // 79: eve_trading_co_proto.ShopMakePurchaseResponse
	(*UserDataRequest)(nil),                              // 80: eve_trading_co_proto.UserDataRequest
	(*UserDataResponse)(nil),                             // 81: eve_trading_co_proto.UserDataResponse
	(*ShopContractQueueRequest)(nil),                     // 82: eve_trading_co_proto.ShopContractQueueRequest
	(*ShopContractQueueResponse)(nil),                    // 83: eve_trading_co_proto.ShopContractQueueResponse
	(*BuybackContractQueueRequest)(nil),                  // 84: eve_trading_co_proto.BuybackContractQueueRequest
	(*BuybackContractQueueResponse)(nil),                 // 85: eve_trading_co_proto.BuybackContractQueueResponse
	(*ShopCancelPurchaseRequest)(nil),                    // 86: eve_trading_co_proto.ShopCancelPurchaseRequest
	(*ShopCancelPurchaseResponse)(nil),                   // 87: eve_trading_co_proto.ShopCancelPurchaseResponse
	(*ShopDeletePurchasesRequest)(nil),                   // 88: eve_trading_co_proto.ShopDeletePurchasesRequest
	(*ShopDeletePurchasesResponse)(nil),                  // 89: eve_trading_co_proto.ShopDeletePurchasesResponse
	(*ParseRequest)(nil),                                 // 90: eve_trading_co_proto.ParseRequest
	(*ParseResponse)(nil),                                // 91: eve_trading_co_proto.ParseResponse
	(*SDETypeDataRequest)(nil),                           // 92: eve_trading_co_proto.SDETypeDataRequest
	(*SDETypeDataResponse)(nil),                          // 93: eve_trading_co_proto.SDETypeDataResponse
	(*NamedSDETypeDataRequest)(nil),                      // 94: eve_trading_co_proto.NamedSDETypeDataRequest
	(*NamedSDETypeDataResponse)(nil),                     // 95: eve_trading_co_proto.NamedSDETypeDataResponse
	(*ShopLocation)(nil),                                 // 96: eve_trading_co_proto.ShopLocation
	(*ShopLocationsRequest)(nil),                         // 97: eve_trading_co_proto.ShopLocationsRequest
	(*ShopLocationsResponse)(nil),                        // 98: eve_trading_co_proto.ShopLocationsResponse
	(*System)(nil),                                       // 99: eve_trading_co_proto.System
	(*BuybackSystemsRequest)(nil),                        // 100: eve_trading_co_proto.BuybackSystemsRequest
	(*BuybackSystemsResponse)(nil),                       // 101: eve_trading_co_proto.BuybackSystemsResponse
	(*ShopPurchaseQueueRequest)(nil),                     // 102: eve_trading_co_proto.ShopPurchaseQueueRequest
	(*ShopPurchaseQueueResponse)(nil),                    // 103: eve_trading_co_proto.ShopPurchaseQueueResponse
	(*EsiAppLoginRequest)(nil),                           // 104: eve_trading_co_proto.EsiAppLoginRequest
	(*EsiAppLoginResponse)(nil),                          // 105: eve_trading_co_proto.EsiAppLoginResponse
	(*SDESystem)(nil),                                    // 106: eve_trading_co_proto.SDESystem
	(*SDESystemsRequest)(nil),                            // 107: eve_trading_co_proto.SDESystemsRequest
	(*SDESystemsResponse)(nil),                           // 108: eve_trading_co_proto.SDESystemsResponse
	(*CfgGetBuybackBundleKeysRequest)(nil),               // 109: eve_trading_co_proto.CfgGetBuybackBundleKeysRequest
	(*CfgGetBuybackBundleKeysResponse)(nil),              // 110: eve_trading_co_proto.CfgGetBuybackBundleKeysResponse
	(*CfgGetShopBundleKeysRequest)(nil),                  // 111: eve_trading_co_proto.CfgGetShopBundleKeysRequest
	(*CfgGetShopBundleKeysResponse)(nil),                 // 112: eve_trading_co_proto.CfgGetShopBundleKeysResponse
	(*CfgGetMarketNamesRequest)(nil),                     // 113: eve_trading_co_proto.CfgGetMarketNamesRequest
	(*CfgGetMarketNamesResponse)(nil),                    // 114: eve_trading_co_proto.CfgGetMarketNamesResponse
	(*IsAdminRequest)(nil),                               // 115: eve_trading_co_proto.IsAdminRequest
	(*IsAdminResponse)(nil),                              // 116: eve_trading_co_proto.IsAdminResponse
	(*CharacterInfoRequest)(nil),                         // 117: eve_trading_co_proto.CharacterInfoRequest
	(*CharacterInfoResponse)(nil),                        // 118: eve_trading_co_proto.CharacterInfoResponse
	(*CorporationInfoRequest)(nil),                       // 119: eve_trading_co_proto.CorporationInfoRequest
	(*CorporationInfoResponse)(nil),                      // 120: eve_trading_co_proto.CorporationInfoResponse
	(*AllianceInfoRequest)(nil),                          // 121: eve_trading_co_proto.AllianceInfoRequest
	(*AllianceInfoResponse)(nil),                         // 122: eve_trading_co_proto.AllianceInfoResponse
	nil,                                                  // 123: eve_trading_co_proto.CfgBuybackSystemTypeBundle.InnerEntry
	nil,                                                  // 124: eve_trading_co_proto.CfgShopLocationTypeBundle.InnerEntry
	nil,                                                  // 125: eve_trading_co_proto.LocationNamingMaps.LocationNamesEntry
	nil,                                                  // 126: eve_trading_co_proto.LocationNamingMaps.SystemNamesEntry
	nil,                                                  // 127: eve_trading_co_proto.LocationNamingMaps.RegionNamesEntry
	nil,                                                  // 128: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.BuilderEntry
	nil,                                                  // 129: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.BuilderEntry
	nil,                                                  // 130: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.BuilderEntry
	nil,                                                  // 131: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest.BuilderEntry
	nil,                                                  // 132: eve_trading_co_proto.CfgGetBuybackSystemsResponse.SystemsEntry
	nil,                                                  // 133: eve_trading_co_proto.CfgGetBuybackSystemsResponse.SystemRegionMapEntry
	nil,                                                  // 134: eve_trading_co_proto.CfgMergeBuybackSystemsRequest.SystemsEntry
	nil,                                                  // 135: eve_trading_co_proto.CfgGetShopLocationsResponse.LocationsEntry
	nil,                                                  // 136: eve_trading_co_proto.CfgGetShopLocationsResponse.LocationInfoMapEntry
	nil,                                                  // 137: eve_trading_co_proto.CfgMergeShopLocationsRequest.LocationsEntry
	nil,                                                  // 138: eve_trading_co_proto.CfgGetMarketsResponse.MarketsEntry
	nil,                                                  // 139: eve_trading_co_proto.CfgGetMarketsResponse.LocationInfoMapEntry
	nil,                                                  // 140: eve_trading_co_proto.CfgMergeMarketsRequest.MarketsEntry
}
var file_etco_proto_depIdxs = []int32{
	0,   // 0: eve_trading_co_proto.ErrorResponse.code:type_name -> eve_trading_co_proto.ErrorCode
	10,  // 1: eve_trading_co_proto.CfgBuybackTypePricing.pricing:type_name -> eve_trading_co_proto.CfgTypePricing
	10,  // 2: eve_trading_co_proto.CfgShopTypePricing.inner:type_name -> eve_trading_co_proto.CfgTypePricing
	123, // 3: eve_trading_co_proto.CfgBuybackSystemTypeBundle.inner:type_name -> eve_trading_co_proto.CfgBuybackSystemTypeBundle.InnerEntry
	124, // 4: eve_trading_co_proto.CfgShopLocationTypeBundle.inner:type_name -> eve_trading_co_proto.CfgShopLocationTypeBundle.InnerEntry
	125, // 5: eve_trading_co_proto.LocationNamingMaps.location_names:type_name -> eve_trading_co_proto.LocationNamingMaps.LocationNamesEntry
	126, // 6: eve_trading_co_proto.LocationNamingMaps.system_names:type_name -> eve_trading_co_proto.LocationNamingMaps.SystemNamesEntry
	127, // 7: eve_trading_co_proto.LocationNamingMaps.region_names:type_name -> eve_trading_co_proto.LocationNamingMaps.RegionNamesEntry
	20,  // 8: eve_trading_co_proto.NamedType.type_naming_indexes:type_name -> eve_trading_co_proto.TypeNamingIndexes
	29,  // 9: eve_trading_co_proto.BuybackAppraisal.items:type_name -> eve_trading_co_proto.BuybackParentItem
	30,  // 10: eve_trading_co_proto.BuybackParentItem.children:type_name -> eve_trading_co_proto.BuybackChildItem
	20,  // 11: eve_trading_co_proto.BuybackParentItem.type_naming_indexes:type_name -> eve_trading_co_proto.TypeNamingIndexes
	20,  // 12: eve_trading_co_proto.BuybackChildItem.type_naming_indexes:type_name -> eve_trading_co_proto.TypeNamingIndexes
	32,  // 13: eve_trading_co_proto.ShopAppraisal.items:type_name -> eve_trading_co_proto.ShopItem
	20,  // 14: eve_trading_co_proto.ShopItem.type_naming_indexes:type_name -> eve_trading_co_proto.TypeNamingIndexes
	20,  // 15: eve_trading_co_proto.ContractItem.type_naming_indexes:type_name -> eve_trading_co_proto.TypeNamingIndexes
	1,   // 16: eve_trading_co_proto.Contract.status:type_name -> eve_trading_co_proto.ContractStatus
	2,   // 17: eve_trading_co_proto.Contract.assignee_type:type_name -> eve_trading_co_proto.ContractAssigneeType
	34,  // 18: eve_trading_co_proto.BuybackContractQueueEntry.contract:type_name -> eve_trading_co_proto.Contract
	33,  // 19: eve_trading_co_proto.BuybackContractQueueEntry.contract_items:type_name -> eve_trading_co_proto.ContractItem
	22,  // 20: eve_trading_co_proto.BuybackContractQueueEntry.contract_location_info:type_name -> eve_trading_co_proto.LocationInfo
	28,  // 21: eve_trading_co_proto.BuybackContractQueueEntry.code_appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	28,  // 22: eve_trading_co_proto.BuybackContractQueueEntry.new_appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	34,  // 23: eve_trading_co_proto.ShopContractQueueEntry.contract:type_name -> eve_trading_co_proto.Contract
	33,  // 24: eve_trading_co_proto.ShopContractQueueEntry.contract_items:type_name -> eve_trading_co_proto.ContractItem
	22,  // 25: eve_trading_co_proto.ShopContractQueueEntry.contract_location_info:type_name -> eve_trading_co_proto.LocationInfo
	31,  // 26: eve_trading_co_proto.ShopContractQueueEntry.code_appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	31,  // 27: eve_trading_co_proto.ShopContractQueueEntry.new_appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	31,  // 28: eve_trading_co_proto.PurchaseQueueEntry.code_appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	31,  // 29: eve_trading_co_proto.PurchaseQueueEntry.new_appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	34,  // 30: eve_trading_co_proto.BuybackAppraisalStatus.contract:type_name -> eve_trading_co_proto.Contract
	34,  // 31: eve_trading_co_proto.ShopAppraisalStatus.contract:type_name -> eve_trading_co_proto.Contract
	7,   // 32: eve_trading_co_proto.CfgGetAuthListRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	18,  // 33: eve_trading_co_proto.CfgGetAuthListResponse.auth_list:type_name -> eve_trading_co_proto.AuthList
	8,   // 34: eve_trading_co_proto.CfgGetAuthListResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 35: eve_trading_co_proto.CfgGetAuthListResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	18,  // 36: eve_trading_co_proto.CfgSetAuthListRequest.auth_list:type_name -> eve_trading_co_proto.AuthList
	7,   // 37: eve_trading_co_proto.CfgSetAuthListRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 38: eve_trading_co_proto.CfgSetAuthListResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 39: eve_trading_co_proto.CfgSetAuthListResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 40: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	128, // 41: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.builder:type_name -> eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.BuilderEntry
	8,   // 42: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 43: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	129, // 44: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.builder:type_name -> eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.BuilderEntry
	7,   // 45: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 46: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 47: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 48: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	130, // 49: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.builder:type_name -> eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.BuilderEntry
	8,   // 50: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 51: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	131, // 52: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest.builder:type_name -> eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest.BuilderEntry
	7,   // 53: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 54: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 55: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 56: eve_trading_co_proto.CfgGetBuybackSystemsRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	7,   // 57: eve_trading_co_proto.CfgGetBuybackSystemsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	132, // 58: eve_trading_co_proto.CfgGetBuybackSystemsResponse.systems:type_name -> eve_trading_co_proto.CfgGetBuybackSystemsResponse.SystemsEntry
	133, // 59: eve_trading_co_proto.CfgGetBuybackSystemsResponse.system_region_map:type_name -> eve_trading_co_proto.CfgGetBuybackSystemsResponse.SystemRegionMapEntry
	24,  // 60: eve_trading_co_proto.CfgGetBuybackSystemsResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	8,   // 61: eve_trading_co_proto.CfgGetBuybackSystemsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 62: eve_trading_co_proto.CfgGetBuybackSystemsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	134, // 63: eve_trading_co_proto.CfgMergeBuybackSystemsRequest.systems:type_name -> eve_trading_co_proto.CfgMergeBuybackSystemsRequest.SystemsEntry
	7,   // 64: eve_trading_co_proto.CfgMergeBuybackSystemsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 65: eve_trading_co_proto.CfgMergeBuybackSystemsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 66: eve_trading_co_proto.CfgMergeBuybackSystemsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 67: eve_trading_co_proto.CfgGetShopLocationsRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	7,   // 68: eve_trading_co_proto.CfgGetShopLocationsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	135, // 69: eve_trading_co_proto.CfgGetShopLocationsResponse.locations:type_name -> eve_trading_co_proto.CfgGetShopLocationsResponse.LocationsEntry
	136, // 70: eve_trading_co_proto.CfgGetShopLocationsResponse.location_info_map:type_name -> eve_trading_co_proto.CfgGetShopLocationsResponse.LocationInfoMapEntry
	24,  // 71: eve_trading_co_proto.CfgGetShopLocationsResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	8,   // 72: eve_trading_co_proto.CfgGetShopLocationsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 73: eve_trading_co_proto.CfgGetShopLocationsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	137, // 74: eve_trading_co_proto.CfgMergeShopLocationsRequest.locations:type_name -> eve_trading_co_proto.CfgMergeShopLocationsRequest.LocationsEntry
	7,   // 75: eve_trading_co_proto.CfgMergeShopLocationsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 76: eve_trading_co_proto.CfgMergeShopLocationsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 77: eve_trading_co_proto.CfgMergeShopLocationsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 78: eve_trading_co_proto.CfgGetMarketsRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	7,   // 79: eve_trading_co_proto.CfgGetMarketsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	138, // 80: eve_trading_co_proto.CfgGetMarketsResponse.markets:type_name -> eve_trading_co_proto.CfgGetMarketsResponse.MarketsEntry
	139, // 81: eve_trading_co_proto.CfgGetMarketsResponse.location_info_map:type_name -> eve_trading_co_proto.CfgGetMarketsResponse.LocationInfoMapEntry
	24,  // 82: eve_trading_co_proto.CfgGetMarketsResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	8,   // 83: eve_trading_co_proto.CfgGetMarketsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 84: eve_trading_co_proto.CfgGetMarketsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	140, // 85: eve_trading_co_proto.CfgMergeMarketsRequest.markets:type_name -> eve_trading_co_proto.CfgMergeMarketsRequest.MarketsEntry
	7,   // 86: eve_trading_co_proto.CfgMergeMarketsRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 87: eve_trading_co_proto.CfgMergeMarketsResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 88: eve_trading_co_proto.CfgMergeMarketsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	26,  // 89: eve_trading_co_proto.NewBuybackAppraisalRequest.items:type_name -> eve_trading_co_proto.BasicItem
	19,  // 90: eve_trading_co_proto.NewBuybackAppraisalRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	7,   // 91: eve_trading_co_proto.NewBuybackAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	28,  // 92: eve_trading_co_proto.NewBuybackAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	21,  // 93: eve_trading_co_proto.NewBuybackAppraisalResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	8,   // 94: eve_trading_co_proto.NewBuybackAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 95: eve_trading_co_proto.NewBuybackAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	26,  // 96: eve_trading_co_proto.NewShopAppraisalRequest.items:type_name -> eve_trading_co_proto.BasicItem
	19,  // 97: eve_trading_co_proto.NewShopAppraisalRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	31,  // 98: eve_trading_co_proto.NewShopAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	21,  // 99: eve_trading_co_proto.NewShopAppraisalResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	9,   // 100: eve_trading_co_proto.NewShopAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 101: eve_trading_co_proto.GetBuybackAppraisalRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	7,   // 102: eve_trading_co_proto.GetBuybackAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	28,  // 103: eve_trading_co_proto.GetBuybackAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.BuybackAppraisal
	21,  // 104: eve_trading_co_proto.GetBuybackAppraisalResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	8,   // 105: eve_trading_co_proto.GetBuybackAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 106: eve_trading_co_proto.GetBuybackAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 107: eve_trading_co_proto.GetShopAppraisalRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	7,   // 108: eve_trading_co_proto.GetShopAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	31,  // 109: eve_trading_co_proto.GetShopAppraisalResponse.appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	21,  // 110: eve_trading_co_proto.GetShopAppraisalResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	8,   // 111: eve_trading_co_proto.GetShopAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 112: eve_trading_co_proto.GetShopAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 113: eve_trading_co_proto.StatusBuybackAppraisalRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	23,  // 114: eve_trading_co_proto.StatusBuybackAppraisalRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	7,   // 115: eve_trading_co_proto.StatusBuybackAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	34,  // 116: eve_trading_co_proto.StatusBuybackAppraisalResponse.contract:type_name -> eve_trading_co_proto.Contract
	33,  // 117: eve_trading_co_proto.StatusBuybackAppraisalResponse.contract_items:type_name -> eve_trading_co_proto.ContractItem
	22,  // 118: eve_trading_co_proto.StatusBuybackAppraisalResponse.location_info:type_name -> eve_trading_co_proto.LocationInfo
	21,  // 119: eve_trading_co_proto.StatusBuybackAppraisalResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	24,  // 120: eve_trading_co_proto.StatusBuybackAppraisalResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	8,   // 121: eve_trading_co_proto.StatusBuybackAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 122: eve_trading_co_proto.StatusBuybackAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 123: eve_trading_co_proto.StatusShopAppraisalRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	23,  // 124: eve_trading_co_proto.StatusShopAppraisalRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	7,   // 125: eve_trading_co_proto.StatusShopAppraisalRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	34,  // 126: eve_trading_co_proto.StatusShopAppraisalResponse.contract:type_name -> eve_trading_co_proto.Contract
	33,  // 127: eve_trading_co_proto.StatusShopAppraisalResponse.contract_items:type_name -> eve_trading_co_proto.ContractItem
	22,  // 128: eve_trading_co_proto.StatusShopAppraisalResponse.location_info:type_name -> eve_trading_co_proto.LocationInfo
	21,  // 129: eve_trading_co_proto.StatusShopAppraisalResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	24,  // 130: eve_trading_co_proto.StatusShopAppraisalResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	8,   // 131: eve_trading_co_proto.StatusShopAppraisalResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 132: eve_trading_co_proto.StatusShopAppraisalResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 133: eve_trading_co_proto.ShopInventoryRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	7,   // 134: eve_trading_co_proto.ShopInventoryRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	32,  // 135: eve_trading_co_proto.ShopInventoryResponse.items:type_name -> eve_trading_co_proto.ShopItem
	21,  // 136: eve_trading_co_proto.ShopInventoryResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	8,   // 137: eve_trading_co_proto.ShopInventoryResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 138: eve_trading_co_proto.ShopInventoryResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	26,  // 139: eve_trading_co_proto.ShopMakePurchaseRequest.items:type_name -> eve_trading_co_proto.BasicItem
	19,  // 140: eve_trading_co_proto.ShopMakePurchaseRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	7,   // 141: eve_trading_co_proto.ShopMakePurchaseRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	3,   // 142: eve_trading_co_proto.ShopMakePurchaseResponse.status:type_name -> eve_trading_co_proto.MakePurchaseStatus
	31,  // 143: eve_trading_co_proto.ShopMakePurchaseResponse.appraisal:type_name -> eve_trading_co_proto.ShopAppraisal
	21,  // 144: eve_trading_co_proto.ShopMakePurchaseResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	8,   // 145: eve_trading_co_proto.ShopMakePurchaseResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 146: eve_trading_co_proto.ShopMakePurchaseResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 147: eve_trading_co_proto.UserDataRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	38,  // 148: eve_trading_co_proto.UserDataResponse.buyback_appraisals:type_name -> eve_trading_co_proto.BuybackAppraisalStatus
	39,  // 149: eve_trading_co_proto.UserDataResponse.shop_appraisals:type_name -> eve_trading_co_proto.ShopAppraisalStatus
	8,   // 150: eve_trading_co_proto.UserDataResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 151: eve_trading_co_proto.UserDataResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 152: eve_trading_co_proto.ShopContractQueueRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	23,  // 153: eve_trading_co_proto.ShopContractQueueRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	7,   // 154: eve_trading_co_proto.ShopContractQueueRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	36,  // 155: eve_trading_co_proto.ShopContractQueueResponse.queue:type_name -> eve_trading_co_proto.ShopContractQueueEntry
	21,  // 156: eve_trading_co_proto.ShopContractQueueResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	24,  // 157: eve_trading_co_proto.ShopContractQueueResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	8,   // 158: eve_trading_co_proto.ShopContractQueueResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 159: eve_trading_co_proto.ShopContractQueueResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 160: eve_trading_co_proto.BuybackContractQueueRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	23,  // 161: eve_trading_co_proto.BuybackContractQueueRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	7,   // 162: eve_trading_co_proto.BuybackContractQueueRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	35,  // 163: eve_trading_co_proto.BuybackContractQueueResponse.queue:type_name -> eve_trading_co_proto.BuybackContractQueueEntry
	21,  // 164: eve_trading_co_proto.BuybackContractQueueResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	24,  // 165: eve_trading_co_proto.BuybackContractQueueResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	8,   // 166: eve_trading_co_proto.BuybackContractQueueResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 167: eve_trading_co_proto.BuybackContractQueueResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 168: eve_trading_co_proto.ShopCancelPurchaseRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	4,   // 169: eve_trading_co_proto.ShopCancelPurchaseResponse.status:type_name -> eve_trading_co_proto.CancelPurchaseStatus
	8,   // 170: eve_trading_co_proto.ShopCancelPurchaseResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 171: eve_trading_co_proto.ShopCancelPurchaseResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 172: eve_trading_co_proto.ShopDeletePurchasesRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 173: eve_trading_co_proto.ShopDeletePurchasesResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 174: eve_trading_co_proto.ShopDeletePurchasesResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	27,  // 175: eve_trading_co_proto.ParseResponse.known_items:type_name -> eve_trading_co_proto.NamedBasicItem
	27,  // 176: eve_trading_co_proto.ParseResponse.unknown_items:type_name -> eve_trading_co_proto.NamedBasicItem
	9,   // 177: eve_trading_co_proto.ParseResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	9,   // 178: eve_trading_co_proto.SDETypeDataResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	25,  // 179: eve_trading_co_proto.NamedSDETypeDataResponse.types:type_name -> eve_trading_co_proto.NamedType
	21,  // 180: eve_trading_co_proto.NamedSDETypeDataResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	9,   // 181: eve_trading_co_proto.NamedSDETypeDataResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	22,  // 182: eve_trading_co_proto.ShopLocation.location_info:type_name -> eve_trading_co_proto.LocationInfo
	23,  // 183: eve_trading_co_proto.ShopLocationsRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	96,  // 184: eve_trading_co_proto.ShopLocationsResponse.locations:type_name -> eve_trading_co_proto.ShopLocation
	24,  // 185: eve_trading_co_proto.ShopLocationsResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	9,   // 186: eve_trading_co_proto.ShopLocationsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 187: eve_trading_co_proto.BuybackSystemsRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	99,  // 188: eve_trading_co_proto.BuybackSystemsResponse.systems:type_name -> eve_trading_co_proto.System
	24,  // 189: eve_trading_co_proto.BuybackSystemsResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	9,   // 190: eve_trading_co_proto.BuybackSystemsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	19,  // 191: eve_trading_co_proto.ShopPurchaseQueueRequest.include_type_naming:type_name -> eve_trading_co_proto.IncludeTypeNaming
	7,   // 192: eve_trading_co_proto.ShopPurchaseQueueRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	37,  // 193: eve_trading_co_proto.ShopPurchaseQueueResponse.queue:type_name -> eve_trading_co_proto.PurchaseQueueEntry
	21,  // 194: eve_trading_co_proto.ShopPurchaseQueueResponse.type_naming_lists:type_name -> eve_trading_co_proto.TypeNamingLists
	8,   // 195: eve_trading_co_proto.ShopPurchaseQueueResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 196: eve_trading_co_proto.ShopPurchaseQueueResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	5,   // 197: eve_trading_co_proto.EsiAppLoginRequest.app:type_name -> eve_trading_co_proto.EsiApp
	7,   // 198: eve_trading_co_proto.EsiAppLoginRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 199: eve_trading_co_proto.EsiAppLoginResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 200: eve_trading_co_proto.EsiAppLoginResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	23,  // 201: eve_trading_co_proto.SDESystemsRequest.include_location_naming:type_name -> eve_trading_co_proto.IncludeLocationNaming
	99,  // 202: eve_trading_co_proto.SDESystemsResponse.systems:type_name -> eve_trading_co_proto.System
	24,  // 203: eve_trading_co_proto.SDESystemsResponse.location_naming_maps:type_name -> eve_trading_co_proto.LocationNamingMaps
	9,   // 204: eve_trading_co_proto.SDESystemsResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 205: eve_trading_co_proto.CfgGetBuybackBundleKeysRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 206: eve_trading_co_proto.CfgGetBuybackBundleKeysResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 207: eve_trading_co_proto.CfgGetBuybackBundleKeysResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 208: eve_trading_co_proto.CfgGetShopBundleKeysRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 209: eve_trading_co_proto.CfgGetShopBundleKeysResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 210: eve_trading_co_proto.CfgGetShopBundleKeysResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 211: eve_trading_co_proto.CfgGetMarketNamesRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 212: eve_trading_co_proto.CfgGetMarketNamesResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 213: eve_trading_co_proto.CfgGetMarketNamesResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	7,   // 214: eve_trading_co_proto.IsAdminRequest.auth:type_name -> eve_trading_co_proto.AuthRequest
	8,   // 215: eve_trading_co_proto.IsAdminResponse.auth:type_name -> eve_trading_co_proto.AuthResponse
	9,   // 216: eve_trading_co_proto.IsAdminResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	6,   // 217: eve_trading_co_proto.CharacterInfoResponse.alliance_id:type_name -> eve_trading_co_proto.OptionalInt32
	9,   // 218: eve_trading_co_proto.CharacterInfoResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	6,   // 219: eve_trading_co_proto.CorporationInfoResponse.alliance_id:type_name -> eve_trading_co_proto.OptionalInt32
	9,   // 220: eve_trading_co_proto.CorporationInfoResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	9,   // 221: eve_trading_co_proto.AllianceInfoResponse.error:type_name -> eve_trading_co_proto.ErrorResponse
	11,  // 222: eve_trading_co_proto.CfgBuybackSystemTypeBundle.InnerEntry.value:type_name -> eve_trading_co_proto.CfgBuybackTypePricing
	12,  // 223: eve_trading_co_proto.CfgShopLocationTypeBundle.InnerEntry.value:type_name -> eve_trading_co_proto.CfgShopTypePricing
	13,  // 224: eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse.BuilderEntry.value:type_name -> eve_trading_co_proto.CfgBuybackSystemTypeBundle
	13,  // 225: eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest.BuilderEntry.value:type_name -> eve_trading_co_proto.CfgBuybackSystemTypeBundle
	14,  // 226: eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse.BuilderEntry.value:type_name -> eve_trading_co_proto.CfgShopLocationTypeBundle
	14,  // 227: eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest.BuilderEntry.value:type_name -> eve_trading_co_proto.CfgShopLocationTypeBundle
	15,  // 228: eve_trading_co_proto.CfgGetBuybackSystemsResponse.SystemsEntry.value:type_name -> eve_trading_co_proto.CfgBuybackSystem
	15,  // 229: eve_trading_co_proto.CfgMergeBuybackSystemsRequest.SystemsEntry.value:type_name -> eve_trading_co_proto.CfgBuybackSystem
	16,  // 230: eve_trading_co_proto.CfgGetShopLocationsResponse.LocationsEntry.value:type_name -> eve_trading_co_proto.CfgShopLocation
	22,  // 231: eve_trading_co_proto.CfgGetShopLocationsResponse.LocationInfoMapEntry.value:type_name -> eve_trading_co_proto.LocationInfo
	16,  // 232: eve_trading_co_proto.CfgMergeShopLocationsRequest.LocationsEntry.value:type_name -> eve_trading_co_proto.CfgShopLocation
	17,  // 233: eve_trading_co_proto.CfgGetMarketsResponse.MarketsEntry.value:type_name -> eve_trading_co_proto.CfgMarket
	22,  // 234: eve_trading_co_proto.CfgGetMarketsResponse.LocationInfoMapEntry.value:type_name -> eve_trading_co_proto.LocationInfo
	17,  // 235: eve_trading_co_proto.CfgMergeMarketsRequest.MarketsEntry.value:type_name -> eve_trading_co_proto.CfgMarket
	92,  // 236: eve_trading_co_proto.EveTradingCo.SDETypeData:input_type -> eve_trading_co_proto.SDETypeDataRequest
	94,  // 237: eve_trading_co_proto.EveTradingCo.NamedSDETypeData:input_type -> eve_trading_co_proto.NamedSDETypeDataRequest
	97,  // 238: eve_trading_co_proto.EveTradingCo.ShopLocations:input_type -> eve_trading_co_proto.ShopLocationsRequest
	100, // 239: eve_trading_co_proto.EveTradingCo.BuybackSystems:input_type -> eve_trading_co_proto.BuybackSystemsRequest
	107, // 240: eve_trading_co_proto.EveTradingCo.SDESystems:input_type -> eve_trading_co_proto.SDESystemsRequest
	115, // 241: eve_trading_co_proto.EveTradingCo.IsAdmin:input_type -> eve_trading_co_proto.IsAdminRequest
	102, // 242: eve_trading_co_proto.EveTradingCo.ShopPurchaseQueue:input_type -> eve_trading_co_proto.ShopPurchaseQueueRequest
	82,  // 243: eve_trading_co_proto.EveTradingCo.ShopContractQueue:input_type -> eve_trading_co_proto.ShopContractQueueRequest
	84,  // 244: eve_trading_co_proto.EveTradingCo.BuybackContractQueue:input_type -> eve_trading_co_proto.BuybackContractQueueRequest
	40,  // 245: eve_trading_co_proto.EveTradingCo.CfgGetAuthList:input_type -> eve_trading_co_proto.CfgGetAuthListRequest
	44,  // 246: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystemTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderRequest
	48,  // 247: eve_trading_co_proto.EveTradingCo.CfgGetShopLocationTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderRequest
	52,  // 248: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystems:input_type -> eve_trading_co_proto.CfgGetBuybackSystemsRequest
	56,  // 249: eve_trading_co_proto.EveTradingCo.CfgGetShopLocations:input_type -> eve_trading_co_proto.CfgGetShopLocationsRequest
	60,  // 250: eve_trading_co_proto.EveTradingCo.CfgGetMarkets:input_type -> eve_trading_co_proto.CfgGetMarketsRequest
	113, // 251: eve_trading_co_proto.EveTradingCo.CfgGetMarketNames:input_type -> eve_trading_co_proto.CfgGetMarketNamesRequest
	109, // 252: eve_trading_co_proto.EveTradingCo.CfgGetBuybackBundleKeys:input_type -> eve_trading_co_proto.CfgGetBuybackBundleKeysRequest
	111, // 253: eve_trading_co_proto.EveTradingCo.CfgGetShopBundleKeys:input_type -> eve_trading_co_proto.CfgGetShopBundleKeysRequest
	42,  // 254: eve_trading_co_proto.EveTradingCo.CfgSetAuthList:input_type -> eve_trading_co_proto.CfgSetAuthListRequest
	46,  // 255: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystemTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderRequest
	50,  // 256: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocationTypeMapsBuilder:input_type -> eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderRequest
	54,  // 257: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystems:input_type -> eve_trading_co_proto.CfgMergeBuybackSystemsRequest
	58,  // 258: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocations:input_type -> eve_trading_co_proto.CfgMergeShopLocationsRequest
	62,  // 259: eve_trading_co_proto.EveTradingCo.CfgMergeMarkets:input_type -> eve_trading_co_proto.CfgMergeMarketsRequest
	88,  // 260: eve_trading_co_proto.EveTradingCo.ShopDeletePurchases:input_type -> eve_trading_co_proto.ShopDeletePurchasesRequest
	104, // 261: eve_trading_co_proto.EveTradingCo.EsiAppLogin:input_type -> eve_trading_co_proto.EsiAppLoginRequest
	117, // 262: eve_trading_co_proto.EveTradingCo.CharacterInfo:input_type -> eve_trading_co_proto.CharacterInfoRequest
	119, // 263: eve_trading_co_proto.EveTradingCo.CorporationInfo:input_type -> eve_trading_co_proto.CorporationInfoRequest
	121, // 264: eve_trading_co_proto.EveTradingCo.AllianceInfo:input_type -> eve_trading_co_proto.AllianceInfoRequest
	90,  // 265: eve_trading_co_proto.EveTradingCo.Parse:input_type -> eve_trading_co_proto.ParseRequest
	64,  // 266: eve_trading_co_proto.EveTradingCo.NewBuybackAppraisal:input_type -> eve_trading_co_proto.NewBuybackAppraisalRequest
	66,  // 267: eve_trading_co_proto.EveTradingCo.NewShopAppraisal:input_type -> eve_trading_co_proto.NewShopAppraisalRequest
	80,  // 268: eve_trading_co_proto.EveTradingCo.UserData:input_type -> eve_trading_co_proto.UserDataRequest
	76,  // 269: eve_trading_co_proto.EveTradingCo.ShopInventory:input_type -> eve_trading_co_proto.ShopInventoryRequest
	78,  // 270: eve_trading_co_proto.EveTradingCo.ShopMakePurchase:input_type -> eve_trading_co_proto.ShopMakePurchaseRequest
	86,  // 271: eve_trading_co_proto.EveTradingCo.ShopCancelPurchase:input_type -> eve_trading_co_proto.ShopCancelPurchaseRequest
	68,  // 272: eve_trading_co_proto.EveTradingCo.GetBuybackAppraisal:input_type -> eve_trading_co_proto.GetBuybackAppraisalRequest
	70,  // 273: eve_trading_co_proto.EveTradingCo.GetShopAppraisal:input_type -> eve_trading_co_proto.GetShopAppraisalRequest
	72,  // 274: eve_trading_co_proto.EveTradingCo.StatusBuybackAppraisal:input_type -> eve_trading_co_proto.StatusBuybackAppraisalRequest
	74,  // 275: eve_trading_co_proto.EveTradingCo.StatusShopAppraisal:input_type -> eve_trading_co_proto.StatusShopAppraisalRequest
	93,  // 276: eve_trading_co_proto.EveTradingCo.SDETypeData:output_type -> eve_trading_co_proto.SDETypeDataResponse
	95,  // 277: eve_trading_co_proto.EveTradingCo.NamedSDETypeData:output_type -> eve_trading_co_proto.NamedSDETypeDataResponse
	98,  // 278: eve_trading_co_proto.EveTradingCo.ShopLocations:output_type -> eve_trading_co_proto.ShopLocationsResponse
	101, // 279: eve_trading_co_proto.EveTradingCo.BuybackSystems:output_type -> eve_trading_co_proto.BuybackSystemsResponse
	108, // 280: eve_trading_co_proto.EveTradingCo.SDESystems:output_type -> eve_trading_co_proto.SDESystemsResponse
	116, // 281: eve_trading_co_proto.EveTradingCo.IsAdmin:output_type -> eve_trading_co_proto.IsAdminResponse
	103, // 282: eve_trading_co_proto.EveTradingCo.ShopPurchaseQueue:output_type -> eve_trading_co_proto.ShopPurchaseQueueResponse
	83,  // 283: eve_trading_co_proto.EveTradingCo.ShopContractQueue:output_type -> eve_trading_co_proto.ShopContractQueueResponse
	85,  // 284: eve_trading_co_proto.EveTradingCo.BuybackContractQueue:output_type -> eve_trading_co_proto.BuybackContractQueueResponse
	41,  // 285: eve_trading_co_proto.EveTradingCo.CfgGetAuthList:output_type -> eve_trading_co_proto.CfgGetAuthListResponse
	45,  // 286: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystemTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgGetBuybackSystemTypeMapsBuilderResponse
	49,  // 287: eve_trading_co_proto.EveTradingCo.CfgGetShopLocationTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgGetShopLocationTypeMapsBuilderResponse
	53,  // 288: eve_trading_co_proto.EveTradingCo.CfgGetBuybackSystems:output_type -> eve_trading_co_proto.CfgGetBuybackSystemsResponse
	57,  // 289: eve_trading_co_proto.EveTradingCo.CfgGetShopLocations:output_type -> eve_trading_co_proto.CfgGetShopLocationsResponse
	61,  // 290: eve_trading_co_proto.EveTradingCo.CfgGetMarkets:output_type -> eve_trading_co_proto.CfgGetMarketsResponse
	114, // 291: eve_trading_co_proto.EveTradingCo.CfgGetMarketNames:output_type -> eve_trading_co_proto.CfgGetMarketNamesResponse
	110, // 292: eve_trading_co_proto.EveTradingCo.CfgGetBuybackBundleKeys:output_type -> eve_trading_co_proto.CfgGetBuybackBundleKeysResponse
	112, // 293: eve_trading_co_proto.EveTradingCo.CfgGetShopBundleKeys:output_type -> eve_trading_co_proto.CfgGetShopBundleKeysResponse
	43,  // 294: eve_trading_co_proto.EveTradingCo.CfgSetAuthList:output_type -> eve_trading_co_proto.CfgSetAuthListResponse
	47,  // 295: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystemTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgMergeBuybackSystemTypeMapsBuilderResponse
	51,  // 296: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocationTypeMapsBuilder:output_type -> eve_trading_co_proto.CfgMergeShopLocationTypeMapsBuilderResponse
	55,  // 297: eve_trading_co_proto.EveTradingCo.CfgMergeBuybackSystems:output_type -> eve_trading_co_proto.CfgMergeBuybackSystemsResponse
	59,  // 298: eve_trading_co_proto.EveTradingCo.CfgMergeShopLocations:output_type -> eve_trading_co_proto.CfgMergeShopLocationsResponse
	63,  // 299: eve_trading_co_proto.EveTradingCo.CfgMergeMarkets:output_type -> eve_trading_co_proto.CfgMergeMarketsResponse
	89,  // 300: eve_trading_co_proto.EveTradingCo.ShopDeletePurchases:output_type -> eve_trading_co_proto.ShopDeletePurchasesResponse
	105, // 301: eve_trading_co_proto.EveTradingCo.EsiAppLogin:output_type -> eve_trading_co_proto.EsiAppLoginResponse
	118, // 302: eve_trading_co_proto.EveTradingCo.CharacterInfo:output_type -> eve_trading_co_proto.CharacterInfoResponse
	120, // 303: eve_trading_co_proto.EveTradingCo.CorporationInfo:output_type -> eve_trading_co_proto.CorporationInfoResponse
	122, // 304: eve_trading_co_proto.EveTradingCo.AllianceInfo:output_type -> eve_trading_co_proto.AllianceInfoResponse
	91,  // 305: eve_trading_co_proto.EveTradingCo.Parse:output_type -> eve_trading_co_proto.ParseResponse
	65,  // 306: eve_trading_co_proto.EveTradingCo.NewBuybackAppraisal:output_type -> eve_trading_co_proto.NewBuybackAppraisalResponse
	67,  // 307: eve_trading_co_proto.EveTradingCo.NewShopAppraisal:output_type -> eve_trading_co_proto.NewShopAppraisalResponse
	81,  // 308: eve_trading_co_proto.EveTradingCo.UserData:output_type -> eve_trading_co_proto.UserDataResponse
	77,  // 309: eve_trading_co_proto.EveTradingCo.ShopInventory:output_type -> eve_trading_co_proto.ShopInventoryResponse
	79,  // 310: eve_trading_co_proto.EveTradingCo.ShopMakePurchase:output_type -> eve_trading_co_proto.ShopMakePurchaseResponse
	87,  // 311: eve_trading_co_proto.EveTradingCo.ShopCancelPurchase:output_type -> eve_trading_co_proto.ShopCancelPurchaseResponse
	69,  // 312: eve_trading_co_proto.EveTradingCo.GetBuybackAppraisal:output_type -> eve_trading_co_proto.GetBuybackAppraisalResponse
	71,  // 313: eve_trading_co_proto.EveTradingCo.GetShopAppraisal:output_type -> eve_trading_co_proto.GetShopAppraisalResponse
	73,  // 314: eve_trading_co_proto.EveTradingCo.StatusBuybackAppraisal:output_type -> eve_trading_co_proto.StatusBuybackAppraisalResponse
	75,  // 315: eve_trading_co_proto.EveTradingCo.StatusShopAppraisal:output_type -> eve_trading_co_proto.StatusShopAppraisalResponse
	276, // [276:316] is the sub-list for method output_type
	236, // [236:276] is the sub-list for method input_type
	236, // [236:236] is the sub-list for extension type_name
	236, // [236:236] is the sub-list for extension extendee
	0,   // [0:236] is the sub-list for field type_name
}

func init() { file_etco_proto_init() }
func file_etco_proto_init() {
	if File_etco_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_etco_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalInt32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgBuybackTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgShopTypePricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgBuybackSystemTypeBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgShopLocationTypeBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgBuybackSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgShopLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMarket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncludeTypeNaming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeNamingIndexes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeNamingLists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncludeLocationNaming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationNamingMaps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedBasicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackAppraisal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackParentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackChildItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopAppraisal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContractQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopContractQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackAppraisalStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopAppraisalStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetAuthListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetAuthListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgSetAuthListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgSetAuthListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationTypeMapsBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationTypeMapsBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackSystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeBuybackSystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeShopLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMergeMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBuybackAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewShopAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuybackAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusBuybackAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusBuybackAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusShopAppraisalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusShopAppraisalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopMakePurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopMakePurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopContractQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopContractQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContractQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContractQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopDeletePurchasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopDeletePurchasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDETypeDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDETypeDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedSDETypeDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedSDETypeDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackSystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchaseQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchaseQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsiAppLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsiAppLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDESystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDESystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDESystemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackBundleKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetBuybackBundleKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopBundleKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetShopBundleKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgGetMarketNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CorporationInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CorporationInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllianceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_etco_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllianceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_etco_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   135,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_etco_proto_goTypes,
		DependencyIndexes: file_etco_proto_depIdxs,
		EnumInfos:         file_etco_proto_enumTypes,
		MessageInfos:      file_etco_proto_msgTypes,
	}.Build()
	File_etco_proto = out.File
	file_etco_proto_rawDesc = nil
	file_etco_proto_goTypes = nil
	file_etco_proto_depIdxs = nil
}
